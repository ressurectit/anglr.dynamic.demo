{"version":3,"file":"7069.chunk.dde5d9f3dfab9cb3093e.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+layout/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+layout/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+layout/layout.routes.ts","webpack://ng-universal-demo/./app/pages/+layout/layout.module.ts","webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../../router/src/decorators/moduleRoutes.decorator.ts"],"sourcesContent":["<div>\r\n    <ng-select [formControl]=\"_available\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <div class=\"flex-1 overflow-vertical-scroll\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\n\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService,\n                private _router: Router,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                this._metadata = this._store.getData(id);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/layout/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {PreviewComponent} from './preview/preview.component';\n\nexport const components =\n[\n    PreviewComponent,\n];","import {FactoryProvider, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {DynamicLayoutModule, LayoutComponentMetadata, LayoutComponentRendererSADirective, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {provideBasicLayout} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayout} from '@anglr/dynamic/material-components';\nimport {provideCssLayout} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayout} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayout} from '@anglr/dynamic/handlebars-components';\nimport {provideFormLayout} from '@anglr/dynamic/form';\nimport {MetadataStorage} from '@anglr/dynamic';\n\nimport {components} from './layout.routes';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for layout preview samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        NgSelectModule,\n        LayoutComponentRendererSADirective,\n        DynamicLayoutModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutComponentMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('LAYOUT_DATA'),\n        provideBasicLayout(),\n        provideMaterialLayout(),\n        provideCssLayout(),\n        provideTinyMceLayout(),\n        provideHandlebarsLayout(),\n        provideFormLayout(),\n    ],\n})\n@ModuleRoutes(components)\nexport class LayoutModule\n{\n}","export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|null|undefined, parentControl: AbstractControl|undefined, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","var map = {\n\t\"./checkbox/type\": [\n\t\t34757,\n\t\t4757\n\t],\n\t\"./datepicker/type\": [\n\t\t96425,\n\t\t6425\n\t],\n\t\"./formGroup/type\": [\n\t\t70613,\n\t\t613\n\t],\n\t\"./numberField/type\": [\n\t\t90560,\n\t\t560\n\t],\n\t\"./period/type\": [\n\t\t13487,\n\t\t3487\n\t],\n\t\"./radio/type\": [\n\t\t41197,\n\t\t1197\n\t],\n\t\"./select/type\": [\n\t\t98746,\n\t\t8746\n\t],\n\t\"./textField/type\": [\n\t\t80477,\n\t\t477\n\t],\n\t\"./textarea/type\": [\n\t\t25552,\n\t\t5552\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n\n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target,\n                                  'routeValues',\n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n\n        return target;\n    };\n}","import {Type} from '@angular/core';\nimport {RouterModule, Route, ExtraOptions} from '@angular/router';\n\nimport {extractRoutes} from '../misc/utils';\n\n/**\n * Extended route with possibility to extract children from components\n */\nexport interface ComponentRouteChildren extends Route\n{\n    /**\n     * Array of components which contains routes\n     */\n    childrenComponents?: Type<any>[];\n}\n\n/**\n * Describes options for ModuleRoutes decorator\n */\nexport interface ModuleRoutesOptions\n{\n    /**\n     * Indication that `forRoot` should be used during registration of routes\n     */\n    rootModule?: boolean;\n\n    /**\n     * Extra options used for `forRoot` module creation\n     */\n    rootModuleConfig?: ExtraOptions;\n\n    /**\n     * Routes that will be set before routedComponents\n     */\n    staticRoutesBefore?: ComponentRouteChildren[];\n\n    /**\n     * Routes that will be set after routedComponents\n     */\n    staticRoutesAfter?: ComponentRouteChildren[];\n}\n\n/**\n * Extracts routes from children components\n * @param route - Route which can contain array of components with routes\n */\nfunction extractChildrenComponents(route: ComponentRouteChildren): Route\n{\n    if(route.childrenComponents && route.childrenComponents.length)\n    {\n        const routes: ComponentRouteChildren[] = extractRoutes(route.childrenComponents).map(extractChildrenComponents);\n\n        if(route.children && route.children.length)\n        {\n            route.children =\n            [\n                ...route.children,\n                ...routes\n            ];\n        }\n        else\n        {\n            route.children = routes;\n        }\n    }\n\n    return route;\n}\n\n/**\n * Registers routes for module to which is attached\n * @param routedComponents - Array of components that will be used for routes extration\n * @param options - Optional options for defining routes\n */\nexport function ModuleRoutes(routedComponents: Type<any>[], options: ModuleRoutesOptions = {rootModule: false, staticRoutesAfter: [], staticRoutesBefore: []})\n{\n    return function<TFunction extends Function> (target: TFunction): TFunction\n    {\n        const ngModule: \n        {\n            ɵinj:\n            {\n                imports: any[]\n            }\n        } = target as any;\n        \n        if(ngModule.ɵinj && Array.isArray(ngModule.ɵinj.imports))\n        {\n            const routes = \n            [\n                ...(options.staticRoutesBefore || []).map(extractChildrenComponents),\n                ...extractRoutes(routedComponents).map(extractChildrenComponents),\n                ...(options.staticRoutesAfter || []).map(extractChildrenComponents)\n            ];\n\n            ngModule.ɵinj.imports.push(options.rootModule ? RouterModule.forRoot(routes, options.rootModuleConfig) : RouterModule.forChild(routes));\n        }\n\n        return target;\n    };\n}"],"names":["i0","val_r1","PreviewComponent","constructor","_store","_router","_route","_available","FormControl","_metadata","_availableNames","ngOnInit","this","getStored","params","subscribe","id","setValue","getData","valueChanges","val","navigate","skipLocationChange","replaceUrl","ngOnDestroy","i1","i2","selectors","decls","vars","consts","template","rf","ctx","PreviewComponent_ng_option_2_Template","__decorate","ComponentRoute","path","StoreDataService","Router","ActivatedRoute","components","LayoutModule","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","deps","createStoreDataServiceFactory","provideBasicLayout","provideMaterialLayout","provideCssLayout","provideTinyMceLayout","provideHandlebarsLayout","provideFormLayout","imports","CommonModule","ReactiveFormsModule","NgSelectModule","DynamicLayoutModule","withProviders","ModuleRoutes","FormComponentControlType","FormDynamicModuleItemsProvider","_logger","tryToGet","source","_this","package","debug","item","name","e","LOGGER","factory","ɵfac","FormDynamicModuleTypesProvider","module","moduleName","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","FORM_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","FORM_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideFormLayoutEditor","provideStaticPackageSource","provideFormLayoutRelationsEditor","provideFormLayoutRelations","getFormControl","controlName","parentControl","defaultControlType","defaultValue","get","getControlForType","type","FormArray","FormGroup","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","keys","Object","exports","route","target","rt","component","routeDecoratedComponent","isBlank","routeValues","defineProperty","enumerable","configurable","writable","value","push","extractChildrenComponents","childrenComponents","length","routes","extractRoutes","children","routedComponents","options","rootModule","staticRoutesAfter","staticRoutesBefore","ngModule","ɵinj","Array","isArray","RouterModule","forRoot","rootModuleConfig","forChild"],"sourceRoot":""}