{"version":3,"file":"7403.chunk.e39ae40e889d0fc2fe1f.js","mappings":"+XAEIA,EAAAA,GAAA,U,sBAIAA,EAAAA,GAAA,E,yBAAAA,EAAAA,EAAA,EAAAC,EAAA,sB,mBAAeD,EAAAA,EAAA,0BAAAE,EAAAC,mBAAAC,WAAAF,EAAAG,I,ECoCb,MAAOC,UAAuCC,EAAAA,EAO7BC,SAAAA,GAGZC,KAAKN,mBAAmBO,sBAAwBD,KAAKN,mBAAmBQ,YAEvEF,KAAKN,mBAAmBS,aAEhC,E,wDAdSN,KAA8BO,GAA9BP,EAA8B,G,qBAA9BA,EAA8BQ,UAAA,2BAAAC,YAAA,EAAAC,SAAA,CAAAhB,EAAAA,EAjBvC,CAEI,CACIiB,QAASC,EAAAA,EACTC,WAAYA,KAAMC,EAAAA,EAAAA,IAAOC,EAAAA,GAAoBC,gBAAkB,IAAIJ,EAAAA,GAGvE,CACID,QAASI,EAAAA,EACTF,WAAYA,IAED,IAAIE,EAAAA,EAAmBf,MAGzCN,EAAAA,EAAAA,EAAAA,GAAAuB,MAAA,EAAAC,KAAA,EAAAC,OAAA,0EAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GDvCL3B,EAAAA,EAAA,EAAA6B,EAAA,YAAA7B,CAGC,EAAA8B,EAAA,K,KAHD9B,EAAAA,GAAA,EAAA4B,EAAAzB,mBAAAO,qBAAA,I,gBCqBQqB,EAAAA,EACAC,EAAAA,GAAkCC,OAAA,sCAAAC,gBAAA,G","sources":["webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/designer/placeholderDesigner.component.html","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/designer/placeholderDesigner.component.ts"],"sourcesContent":["@if(!placeholderHandler.placeholderContainer)\n{\n    <div class=\"placeholder\"></div>\n}\n@else \n{\n    <ng-container *layoutComponentRenderer=\"placeholderHandler.getOptions(id)\"/>\n}\n","import {Component, ChangeDetectionStrategy, FactoryProvider, inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LayoutComponent, LayoutComponentRendererSADirective, LayoutRenderer} from '@anglr/dynamic/layout';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\nimport {PlaceholderSAComponent} from '../placeholder.component';\nimport {PlaceholderComponentOptions} from '../placeholder.options';\nimport {PlaceholderHandler} from '../../../services';\nimport {ComponentWithId} from '../../../interfaces';\n\n/**\n * Component used for displaying placeholder designer\n */\n@Component(\n{\n    selector: 'placeholder-designer',\n    templateUrl: 'placeholderDesigner.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LayoutRenderer,\n            useFactory: () => inject(PlaceholderHandler).layoutRenderer ?? new LayoutRenderer(),\n        },\n        <FactoryProvider>\n        {\n            provide: PlaceholderHandler,\n            useFactory: () =>\n            {\n                return new PlaceholderHandler(PlaceholderDesignerSAComponent);\n            }\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaceholderDesignerSAComponent extends PlaceholderSAComponent implements LayoutComponent<PlaceholderComponentOptions>, ComponentWithId\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override afterInit(): void\n    {\n        //only when displaying container\n        if(this.placeholderHandler.placeholderContainer && this.placeholderHandler.designMode)\n        {\n            this.placeholderHandler.initOptions();\n        }\n    }\n}"],"names":["i0","PlaceholderDesignerSAComponent_Conditional_1_ng_container_0_Template","ctx_r1","placeholderHandler","getOptions","id","PlaceholderDesignerSAComponent","PlaceholderSAComponent","afterInit","this","placeholderContainer","designMode","initOptions","t","selectors","standalone","features","provide","LayoutRenderer","useFactory","inject","PlaceholderHandler","layoutRenderer","decls","vars","consts","template","rf","ctx","PlaceholderDesignerSAComponent_Conditional_0_Template","PlaceholderDesignerSAComponent_Conditional_1_Template","CommonModule","LayoutComponentRendererSADirective","styles","changeDetection"],"sourceRoot":""}