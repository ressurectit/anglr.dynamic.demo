{"version":3,"file":"8711.chunk.dc296e16f99d0d18da76.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/deconstruct/node/deconstructNode.component.html","webpack://ng-universal-demo/../basic-components/src/dynamicItems/deconstruct/node/deconstructNode.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/deconstruct/metadata/deconstruct.relationsMetadata.ts"],"sourcesContent":["<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"deconstruct\"></relations-node-header>\n\n<div class=\"node-content\">\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <div class=\"input\">\n                <relation-node-input [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"object\" [parent]=\"this\"></relation-node-input>\n                <div>object</div>\n            </div>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\" *ngFor=\"let property of properties\">\n                <div class=\"dynamic-flex-row\">\n                    <div>{{property.name}}</div>\n\n                    <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); configureEndpoint(property)\">\n                        <span class=\"fas fa-pen\"></span>\n                    </button>\n\n                    <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeProperty(property.name)\">\n                        <span class=\"fas fa-times\"></span>\n                    </button>\n                </div>\n\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"property.name\" [parent]=\"this\"></relation-node-output>\n            </div>\n\n            <div class=\"dynamic-flex-row dynamic-flex-end\">\n                <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-left-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); addProperty()\">\n                    <span class=\"fas fa-plus\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent, RelationNodeInputSAComponent} from '@anglr/dynamic/relations-editor';\nimport {ComponentEndpointDef, ConfigureNodeEndpointData, ConfigureNodeEndpointSAComponent} from '@anglr/dynamic/layout-relations';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {lastValueFrom} from 'rxjs';\n\nimport {DeconstructRelationsOptions} from '../deconstruct.options';\n\n/**\n * Relations node component for deconstruct\n */\n@Component(\n{\n    selector: 'deconstruct-node',\n    templateUrl: 'deconstructNode.component.html',\n    standalone: true,\n    imports:\n    [\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeconstructNodeSAComponent extends RelationsNodeBase<DeconstructRelationsOptions> implements RelationsNode<DeconstructRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets added property names\n     */\n    protected get properties(): ComponentEndpointDef[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            properties: [],\n        };\n\n        return this.metadata.relationsOptions.properties ?? [];\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new property\n     */\n    protected async addProperty(): Promise<void>\n    {\n        const name: ConfigureNodeEndpointData =\n        {\n            name: `property${this.properties.length + 1}`,\n            defaultValue: undefined,\n            noDefaultValue: true,\n            skipInit: false,\n            allowSkipInit: true,\n        };\n\n        await this.configureEndpoint(name);\n    }\n\n    /**\n     * Removes property\n     * @param name - Name of property to be removed\n     */\n    protected removeProperty(name: string): void\n    {\n        let index: number;\n\n        if(this.metadata?.relationsOptions?.properties && (index = this.metadata.relationsOptions.properties.findIndex(itm => itm.name == name)) >= 0)\n        {\n            this.metadata.relationsOptions.properties.splice(index, 1);\n\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures endpoint\n     * @param endpoint - Endpoint to be configured\n     */\n    protected async configureEndpoint(endpoint: ConfigureNodeEndpointData): Promise<boolean>\n    {\n        const newEndpoint = JSON.parse(JSON.stringify(endpoint));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ConfigureNodeEndpointData, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure property',\n            width: '60vw',\n            data: newEndpoint,\n        }).afterClosed());\n\n        //rename\n        if(result && this.metadata?.relationsOptions)\n        {\n            let index: number;\n\n            if(this.metadata.relationsOptions.properties && (index = this.metadata.relationsOptions.properties.findIndex(itm => itm.name == endpoint.name)) >= 0)\n            {\n                this.metadata.relationsOptions.properties.splice(index, 1);\n                this.metadata.relationsOptions.properties.splice(index, 0, newEndpoint);\n            }\n            else\n            {\n                this.metadata.relationsOptions.properties ??= [];\n                this.metadata.relationsOptions.properties.push(newEndpoint);\n            }\n\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {DeconstructNodeSAComponent} from '../node/deconstructNode.component';\n\n/**\n * Deconstruct relations metadata\n */\nexport class DeconstructRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Deconstruct',\n        description: 'Allows deconstruction of object into its properties as outputs',\n        group: 'Data',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = DeconstructNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["i0","$event","preventDefault","stopPropagation","DeconstructNodeSAComponent","RelationsNodeBase","properties","this","metadata","relationsOptions","constructor","changeDetector","element","dialog","super","addProperty","name","length","defaultValue","undefined","noDefaultValue","skipInit","allowSkipInit","configureEndpoint","removeProperty","index","findIndex","itm","splice","history","getNewState","endpoint","newEndpoint","JSON","parse","stringify","result","lastValueFrom","open","ConfigureNodeEndpointSAComponent","title","width","data","afterClosed","push","selectors","standalone","features","decls","vars","consts","template","ctx","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","CommonModule","encapsulation","changeDetection","DeconstructRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze"],"sourceRoot":""}