{"version":3,"file":"731.chunk.7fd276a1461bed9f0da3.js","mappings":"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","sources":["webpack://ng-universal-demo/../form/src/metadata/formComponentBase.model.ts","webpack://ng-universal-demo/../layout-editor/src/decorators/layoutPropertyObject/propertyObject.decorator.ts","webpack://ng-universal-demo/../layout-editor/src/misc/models/margin.model.ts","webpack://ng-universal-demo/../layout-editor/src/misc/models/padding.model.ts","webpack://ng-universal-demo/../layout-editor/src/misc/models/componentStyling.model.ts","webpack://ng-universal-demo/../layout-editor/src/modules/propertyTypeControls/components/inputNumber/inputNumber.component.ts","webpack://ng-universal-demo/../layout-editor/src/modules/propertyTypeControls/components/inputNumber/inputNumber.component.html","webpack://ng-universal-demo/../layout-editor/src/modules/propertyTypeControls/components/inputSize/inputSize.component.ts","webpack://ng-universal-demo/../layout-editor/src/modules/propertyTypeControls/components/inputSize/inputSize.component.html","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/marginControl/marginControl.component.ts","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/marginControl/marginControl.component.html","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/paddingControl/paddingControl.component.ts","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/componentStylingPropertiesControl/componentStylingPropertiesControl.component.html","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/paddingControl/paddingControl.component.html","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/componentStylingPropertiesControl/componentStylingPropertiesControl.component.ts","webpack://ng-universal-demo/../layout/src/misc/tokens.ts","webpack://ng-universal-demo/../material-components/src/dynamicItems/period/metadata/period.model.ts","webpack://ng-universal-demo/../material-components/src/dynamicItems/period/metadata/period.layoutMetadata.ts","webpack://ng-universal-demo/../layout-editor/src/decorators/layoutPropertyValues/propertyValues.decorator.ts","webpack://ng-universal-demo/../material-components/src/metadata/materialFormFieldComponentBase.model.ts"],"sourcesContent":["import {Type} from '@angular/core';\nimport {FormControl, FormGroup, FormArray} from '@angular/forms';\nimport {LayoutPropertyName, LayoutPropertyDescription, LayoutPropertyType, DefaultKnownPropertyTypes} from '@anglr/dynamic/layout-editor';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {FormComponentOptions} from '../misc/formComponentBase.options';\n\n/**\n * Base form component model for properties editor\n */\nexport class FormComponentBaseModel implements FormComponentOptions\n{\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Control name')\n    @LayoutPropertyDescription('Form control name')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public controlName: string|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public controlType: Type<FormControl|FormGroup|FormArray>|undefined = undefined;\n\n    //######################### constructor #########################\n    constructor(value: FormComponentOptions|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","import {Type} from '@angular/core';\nimport {DynamicPropertyMetadata} from '@anglr/dynamic';\nimport {extend} from '@jscrpt/common';\n\nimport {LayoutPropertyMetadata} from '../../misc/types';\nimport {LayoutPropertyObjectData} from './propertyObject.interface';\n\n/**\n * Adds object metadata to component property for designer\n * @param type - Type containing metadata for nested object\n * @param metadataSymbols - Array of symbols that are storing metadata\n */\nexport function LayoutPropertyObject(type: Type<any>, metadataSymbols: symbol[]): PropertyDecorator\n{\n    const objMetadata = {};\n\n    for(const metaSymbol of metadataSymbols)\n    {\n        const typeMetadata = Reflect.get(type.prototype, metaSymbol);\n\n        extend(true, objMetadata, typeMetadata);\n    }\n\n    return DynamicPropertyMetadata<LayoutPropertyObjectData>({object: objMetadata}, LayoutPropertyMetadata);\n}","import {Margin} from '@anglr/dynamic/layout';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {LayoutPropertyDescription, LayoutPropertyName} from '../../decorators';\n\n/**\n * Margin model for properties editor\n */\nexport class MarginModel implements Margin\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Margin top')\n    @LayoutPropertyDescription('Top margin of component')\n    top: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Margin right')\n    @LayoutPropertyDescription('Right margin of component')\n    right: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Margin bottom')\n    @LayoutPropertyDescription('Bottom margin of component')\n    bottom: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Margin left')\n    @LayoutPropertyDescription('Left margin of component')\n    left: string|undefined|null = null;\n\n    //######################### constructor #########################\n    constructor(value: Margin|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","import {Padding} from '@anglr/dynamic/layout';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {LayoutPropertyDescription, LayoutPropertyName} from '../../decorators';\n\n/**\n * Padding model for properties editor\n */\nexport class PaddingModel implements Padding\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Padding top')\n    @LayoutPropertyDescription('Top padding of component')\n    top: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Padding right')\n    @LayoutPropertyDescription('Right padding of component')\n    right: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Padding bottom')\n    @LayoutPropertyDescription('Bottom padding of component')\n    bottom: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Padding left')\n    @LayoutPropertyDescription('Left padding of component')\n    left: string|undefined|null = null;\n\n    //######################### constructor #########################\n    constructor(value: Padding|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","import {FormGroupProperty} from '@anglr/common/forms';\nimport {ComponentStylingOptions, Margin, Padding, TextStyling} from '@anglr/dynamic/layout';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {LayoutPropertyDescription, LayoutPropertyName, LayoutPropertyObject, LayoutPropertyType} from '../../decorators';\nimport {DefaultKnownPropertyTypes, LayoutPropertyMetadata} from '../types';\nimport {MarginModel} from './margin.model';\nimport {PaddingModel} from './padding.model';\n\n/**\n * Component styling model for properties editor\n */\nexport class ComponentStylingModel implements ComponentStylingOptions\n{\n    //######################### public properties #########################\n\n    @LayoutPropertyName('Css class')\n    @LayoutPropertyDescription('Css class that should be applied to component')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public cssClass: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Margin')\n    @LayoutPropertyDescription('Margin of component')\n    @LayoutPropertyObject(MarginModel, [LayoutPropertyMetadata])\n    @FormGroupProperty()\n    public margin: Margin|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Padding')\n    @LayoutPropertyDescription('Padding of component')\n    @LayoutPropertyObject(PaddingModel, [LayoutPropertyMetadata])\n    @FormGroupProperty()\n    public padding: Padding|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public textStyling: TextStyling|undefined|null = null;\n\n    //######################### constructor #########################\n    constructor(value: ComponentStylingOptions|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n\n        this.margin = new MarginModel(value?.margin);\n        this.padding = new PaddingModel(value?.padding);\n    }\n}","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\nimport {PropertyTypeControl} from '../../../../interfaces';\nimport {PropertyTypeControlBase} from '../propertyTypeControlBase';\n\n/**\n * Component used for displaying input of type number\n */\n@Component(\n{\n    selector: 'input-number',\n    templateUrl: 'inputNumber.component.html',\n    styles: [HostDisplayBlockStyle],\n    // styleUrls: ['inputNumber.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InputNumberComponent extends PropertyTypeControlBase<number> implements PropertyTypeControl<number>\n{\n}","<input class=\"form-control\" type=\"text\" number [formControl]=\"_control | asRequired\">","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {HostDisplayFlexStyle} from '@anglr/common';\n\nimport {PropertyTypeControl} from '../../../../interfaces';\nimport {PropertyTypeControlBase} from '../propertyTypeControlBase';\n\n/**\n * Component used for displaying input of type size string\n */\n@Component(\n{\n    selector: 'input-size',\n    templateUrl: 'inputSize.component.html',\n    styles: [HostDisplayFlexStyle],\n    // styleUrls: ['inputSize.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InputSizeComponent extends PropertyTypeControlBase<string> implements PropertyTypeControl<string>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Control for numeric value of size\n     */\n    protected _value: FormControl<number|null> = new FormControl<number|null>(null);\n\n    /**\n     * Control for unit value of size\n     */\n    protected _unit: FormControl<string> = new FormControl<string>('px', {nonNullable: true});\n\n    //######################### protected - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override _controlSet(): void\n    {\n        const value = this._control?.value;\n\n        if(value)\n        {\n            const matches = /^(\\d*\\.?\\d+)\\s*([^0-9.]+$)/.exec(value);\n\n            if(matches)\n            {\n                this._value.setValue(+matches[1]);\n                this._unit.setValue(matches[2]);\n\n                return;\n            }\n        }\n\n        this._unit.setValue('px');\n        this._value.setValue(null);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override _initialize(): void\n    {\n        this._value.valueChanges.subscribe(value =>\n        {\n            const unit = this._unit.value;\n\n            //use empty value for size\n            if(!value || !unit)\n            {\n                this._control?.setValue(null);\n\n                return;\n            }\n\n            this.control?.setValue(`${value}${unit}`);\n        });\n\n        this._unit.valueChanges.subscribe(unit =>\n        {\n            const value = this._value.value;\n\n            //use empty value for size\n            if(!value || !unit)\n            {\n                this._control?.setValue(null);\n\n                return;\n            }\n\n            this.control?.setValue(`${value}${unit}`);\n        });\n    }\n}","<input-number [control]=\"_value\"></input-number> <select-value [control]=\"_unit\" [values]=\"['px', 'pt', 'em', '%']\"></select-value>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AsFormGroup, FormModelGroup} from '@anglr/common/forms';\nimport {ComponentStylingOptions, Margin} from '@anglr/dynamic/layout';\n\nimport {PropertiesControl} from '../../../../interfaces';\nimport {PropertiesControlBase} from '../propertiesControlBase';\n\n/**\n * Component used for displaying editation of margin\n */\n@Component(\n{\n    selector: 'margin-control',\n    templateUrl: 'marginControl.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarginControlComponent extends PropertiesControlBase<ComponentStylingOptions> implements PropertiesControl<ComponentStylingOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Margin form group\n     */\n    protected get _margin(): FormGroup<FormModelGroup<Margin>>|undefined|null\n    {\n        return this.form?.controls.margin as AsFormGroup<Margin>;\n    }\n}\n","<div>Margin</div>\n\n<div class=\"flex-column\">\n    <input-size class=\"align-self-center\" [control]=\"_margin?.controls?.top | asFormControl\"></input-size>\n\n    <div class=\"flex-row\">\n        <div class=\"flex-1\">\n            <input-size [control]=\"_margin?.controls?.left | asFormControl\"></input-size>\n        </div>\n\n        <div style=\"width: 20px; height: 20px; border: 1px solid #aaa;\"></div>\n\n        <div class=\"flex-1\">\n            <input-size [control]=\"_margin?.controls?.right | asFormControl\"></input-size>\n        </div>\n    </div>\n\n    <input-size class=\"align-self-center\" [control]=\"_margin?.controls?.bottom | asFormControl\"></input-size>\n</div>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AsFormGroup, FormModelGroup} from '@anglr/common/forms';\nimport {ComponentStylingOptions, Padding} from '@anglr/dynamic/layout';\n\nimport {PropertiesControl} from '../../../../interfaces';\nimport {PropertiesControlBase} from '../propertiesControlBase';\n\n/**\n * Component used for displaying editation of padding\n */\n@Component(\n{\n    selector: 'padding-control',\n    templateUrl: 'paddingControl.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaddingControlComponent extends PropertiesControlBase<ComponentStylingOptions> implements PropertiesControl<ComponentStylingOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Padding form group\n     */\n    protected get _padding(): FormGroup<FormModelGroup<Padding>>|undefined|null\n    {\n        return this.form?.controls.padding as AsFormGroup<Padding>;\n    }\n}\n","<div class=\"form-group\">\n    <label class=\"control-label\">{{propertiesMetadata?.cssClass?.name ?? 'cssClass'}} <span *ngIf=\"propertiesMetadata?.cssClass?.description\" class=\"fas fa-info-circle\" [tooltip]=\"propertiesMetadata?.cssClass?.description\"></span></label>\n    <input-string [control]=\"form?.controls?.cssClass | asRequired\"></input-string>\n</div>\n\n<margin-control [form]=\"form\" [propertiesMetadata]=\"propertiesMetadata\"></margin-control>\n<padding-control [form]=\"form\" [propertiesMetadata]=\"propertiesMetadata\"></padding-control>","<div>Padding</div>\n\n<div class=\"flex-column\">\n    <input-size class=\"align-self-center\" [control]=\"_padding?.controls?.top | asFormControl\"></input-size>\n\n    <div class=\"flex-row\">\n        <div class=\"flex-1\">\n            <input-size [control]=\"_padding?.controls?.left | asFormControl\"></input-size>\n        </div>\n\n        <div style=\"width: 20px; height: 20px; border: 1px solid #aaa;\"></div>\n\n        <div class=\"flex-1\">\n            <input-size [control]=\"_padding?.controls?.right | asFormControl\"></input-size>\n        </div>\n    </div>\n\n    <input-size class=\"align-self-center\" [control]=\"_padding?.controls?.bottom | asFormControl\"></input-size>\n</div>","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {ComponentStylingOptions} from '@anglr/dynamic/layout';\n\nimport {PropertiesControl} from '../../../../interfaces';\nimport {PropertiesControlBase} from '../propertiesControlBase';\n\n/**\n * Component used for displaying editation of component styling\n */\n@Component(\n{\n    selector: 'component-styling',\n    templateUrl: 'componentStylingPropertiesControl.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentStylingPropertiesControlComponent extends PropertiesControlBase<ComponentStylingOptions> implements PropertiesControl<ComponentStylingOptions>\n{\n}\n","import {InjectionToken} from '@angular/core';\nimport {DynamicItemExtensionType, DynamicItemLoader, DynamicModuleDataExtractor, DynamicModuleProvider} from '@anglr/dynamic';\n\nimport {LayoutComponentTransform} from '../interfaces';\nimport {LayoutComponentDef} from './types';\n\n/**\n * Injection token for layout component metadata transformation function\n */\nexport const LAYOUT_COMPONENT_TRANSFORM: InjectionToken<LayoutComponentTransform> = new InjectionToken<LayoutComponentTransform>('LAYOUT_COMPONENT_TRANSFORM');\n\n/**\n * Injection token for layout component child extension types\n */\nexport const LAYOUT_COMPONENT_CHILD_EXTENSIONS: InjectionToken<DynamicItemExtensionType[]> = new InjectionToken<DynamicItemExtensionType[]>('LAYOUT_COMPONENT_CHILD_EXTENSIONS');\n\n/**\n * Injection token for layout components module data extractors\n */\nexport const LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS');\n\n/**\n * Injection token for layout components module providers\n */\nexport const LAYOUT_COMPONENTS_MODULE_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('LAYOUT_COMPONENTS_MODULE_PROVIDERS');\n\n/**\n * Injection token for layout components loader\n */\nexport const LAYOUT_COMPONENTS_LOADER: InjectionToken<DynamicItemLoader<LayoutComponentDef>> = new InjectionToken<DynamicItemLoader<LayoutComponentDef>>('LAYOUT_COMPONENTS_LOADER');\n","import {MaterialPeriodComponentOptions} from '../period.options';\nimport {MaterialFormFieldComponentBaseModel} from '../../../metadata';\n\n\n/**\n * Material period model for properties editor\n */\nexport class MaterialPeriodModel extends MaterialFormFieldComponentBaseModel implements MaterialPeriodComponentOptions\n{}","import {ComponentStylingModel, ComponentStylingPropertiesControlComponent, genericPropertiesControlFor, LayoutEditorMetadataDescriptor, LayoutEditorMetadataInfo} from '@anglr/dynamic/layout-editor';\n\nimport {MaterialPeriodComponentOptions} from '../period.options';\nimport {MaterialPeriodModel} from './period.model';\n\n\n/**\n * Material period layout metadata\n */\nexport class MaterialPeriodLayoutEditorMetadata implements LayoutEditorMetadataDescriptor<MaterialPeriodComponentOptions>\n{\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: LayoutEditorMetadataInfo<MaterialPeriodComponentOptions> =\n    {\n        name: 'Period',\n        description: 'Material period field',\n        optionsMetadata:\n        {\n            propertiesMetadata:\n            [\n                {\n                    modelType: ComponentStylingModel,\n                    propertiesControls: \n                    [\n                        ComponentStylingPropertiesControlComponent,\n                    ],\n                },\n                {\n                    modelType: MaterialPeriodModel,\n                    propertiesControls: \n                    [\n                        genericPropertiesControlFor<MaterialPeriodModel>(['label', 'placeholder', 'hint', 'appearance', 'controlName']),\n                    ],\n                },\n            ],\n        },\n        defaultOptions:\n        {\n            label: 'Input label',\n            placeholder: 'Placeholder',\n            hint: 'Hint',\n        },\n        group: 'Material form fields'\n    };\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {DynamicPropertyMetadata} from '@anglr/dynamic';\n\nimport {LayoutPropertyMetadata} from '../../misc/types';\nimport {LayoutPropertyValuesData} from './propertyValues.interface';\n\n/**\n * Adds available values to component property for designer\n * @param values - Array of available values\n */\nexport function LayoutPropertyValues<TType>(values: Array<TType>): PropertyDecorator\n{\n    return DynamicPropertyMetadata<LayoutPropertyValuesData>({values}, LayoutPropertyMetadata);\n}","import {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {LayoutPropertyName, LayoutPropertyDescription, LayoutPropertyType, DefaultKnownPropertyTypes, LayoutPropertyValues} from '@anglr/dynamic/layout-editor';\nimport {FormComponentBaseModel} from '@anglr/dynamic/form';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {MaterialFormFieldComponentOptions} from '../misc';\n\nexport class MaterialFormFieldComponentBaseModel extends FormComponentBaseModel implements MaterialFormFieldComponentOptions\n{\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Label')\n    @LayoutPropertyDescription('Form label')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public label: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Placeholder')\n    @LayoutPropertyDescription('Input placeholder')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public placeholder: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Hint')\n    @LayoutPropertyDescription('Input hint')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public hint: string|undefined|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Appereance')\n    @LayoutPropertyDescription('Input appereance')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('selectValue')\n    @LayoutPropertyValues<string>(['standard', 'legacy', 'fill', 'outline'])\n    public appearance: MatFormFieldAppearance = 'standard';\n\n    //######################### constructor #########################\n    constructor(value: MaterialFormFieldComponentOptions|undefined|null)\n    {\n        super(value);\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}"],"names":["FormComponentBaseModel","constructor","value","controlName","controlType","undefined","mapValuesToThis","this","__decorate","LayoutPropertyName","LayoutPropertyDescription","LayoutPropertyType","LayoutPropertyObject","type","metadataSymbols","objMetadata","metaSymbol","typeMetadata","Reflect","get","prototype","extend","DynamicPropertyMetadata","object","LayoutPropertyMetadata","MarginModel","top","right","bottom","left","PaddingModel","ComponentStylingModel","cssClass","margin","padding","textStyling","FormGroupProperty","InputNumberComponent","PropertyTypeControlBase","t","selectors","features","decls","vars","consts","template","i0","InputSizeComponent","_value","FormControl","_unit","nonNullable","_controlSet","_control","matches","exec","setValue","_initialize","valueChanges","subscribe","unit","control","MarginControlComponent","PropertiesControlBase","_margin","form","controls","PaddingControlComponent","_padding","ComponentStylingPropertiesControlComponent","ctx","LAYOUT_COMPONENT_TRANSFORM","InjectionToken","LAYOUT_COMPONENT_CHILD_EXTENSIONS","LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS","LAYOUT_COMPONENTS_MODULE_PROVIDERS","LAYOUT_COMPONENTS_LOADER","MaterialPeriodModel","MaterialFormFieldComponentBaseModel","MaterialPeriodLayoutEditorMetadata","metaInfo","name","description","optionsMetadata","propertiesMetadata","modelType","propertiesControls","genericPropertiesControlFor","defaultOptions","label","placeholder","hint","group","Object","freeze","values","super","appearance"],"sourceRoot":""}