{"version":3,"file":"175.chunk.3030ab3865d156fe3d3d.js","mappings":"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","sources":["webpack://ng-universal-demo/../css-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../material-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../css-components/src/services/cssDynamicModuleItemsProvider/cssDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../css-components/src/services/cssDynamicModuleTypesProvider/cssDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../css-components/src/misc/providers.ts","webpack://ng-universal-demo/../css-components/src/misc/utils.ts","webpack://ng-universal-demo/./app/pages/+layout/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+layout/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+layout/layout.routes.ts","webpack://ng-universal-demo/./app/pages/+layout/layout.module.ts","webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../layout/src/directives/layoutComponentRenderer/layoutComponentRenderer.directive.ts","webpack://ng-universal-demo/../layout/src/modules/dynamicLayout.module.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleItemsProvider/materialDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleTypesProvider/materialDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleRelationsProvider/materialDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../material-components/src/misc/providers.ts","webpack://ng-universal-demo/../material-components/src/misc/utils.ts","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../../router/src/decorators/moduleRoutes.decorator.ts"],"sourcesContent":["var map = {\n\t\"./styleBlock/type\": [\n\t\t1571,\n\t\t8284,\n\t\t3110\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 24405;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./checkbox/type\": [\n\t\t27614,\n\t\t7614\n\t],\n\t\"./datepicker/type\": [\n\t\t80902,\n\t\t902\n\t],\n\t\"./formGroup/type\": [\n\t\t66556,\n\t\t6556\n\t],\n\t\"./numberField/type\": [\n\t\t98092,\n\t\t8092\n\t],\n\t\"./period/type\": [\n\t\t38938,\n\t\t8938\n\t],\n\t\"./radio/type\": [\n\t\t54501,\n\t\t4501\n\t],\n\t\"./select/type\": [\n\t\t35742,\n\t\t5742\n\t],\n\t\"./textField/type\": [\n\t\t73813,\n\t\t3813\n\t],\n\t\"./textarea/type\": [\n\t\t82299,\n\t\t2299\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./checkbox/type\": [\n\t\t32363,\n\t\t1752,\n\t\t2363\n\t],\n\t\"./datepicker/type\": [\n\t\t18915,\n\t\t7817,\n\t\t1795,\n\t\t7322,\n\t\t8030,\n\t\t2375,\n\t\t8915\n\t],\n\t\"./expansionPanel/type\": [\n\t\t46560,\n\t\t2424,\n\t\t2475\n\t],\n\t\"./numberField/type\": [\n\t\t81388,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t1388\n\t],\n\t\"./period/type\": [\n\t\t69876,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t9876\n\t],\n\t\"./radio/type\": [\n\t\t74447,\n\t\t2351,\n\t\t4447\n\t],\n\t\"./select/type\": [\n\t\t47594,\n\t\t7817,\n\t\t851,\n\t\t2375,\n\t\t7594\n\t],\n\t\"./tab/type\": [\n\t\t52027,\n\t\t1209,\n\t\t2027\n\t],\n\t\"./tabGroup/type\": [\n\t\t37861,\n\t\t1209,\n\t\t7861\n\t],\n\t\"./textField/type\": [\n\t\t80516,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t516\n\t],\n\t\"./textarea/type\": [\n\t\t2556,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t2556\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 15033;\nmodule.exports = webpackAsyncContext;","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for css module items\n */\n@Injectable()\nexport class CssDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'css-components':\n            {\n                try\n                {\n                    this._logger?.debug('CssDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('CssDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for css types\n */\n@Injectable()\nexport class CssDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('CssDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'css-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('CssDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\n\nimport {CssDynamicModuleItemsProvider, CssDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for css package layout components provider\n */\nexport const CSS_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: CssDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for css dynamic layout module types provider\n */\nexport const CSS_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: CssDynamicModuleTypesProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {CSS_LAYOUT_COMPONENTS_PROVIDER, CSS_LAYOUT_MODULE_TYPES_PROVIDER} from './providers';\n\n/**\n * Providers for layout css subpackage\n */\nexport function provideCssLayout(): Provider[]\n{\n    return [\n        CSS_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor css subpackage\n */\nexport function provideCssLayoutEditor(): Provider[]\n{\n    return [\n        CSS_LAYOUT_COMPONENTS_PROVIDER,\n        CSS_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('css-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor css subpackage\n */\nexport function provideCssLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideCssLayout(),\n    ];\n}\n\n/**\n * Providers for layout relations css subpackage\n */\nexport function provideCssLayoutRelations(): Provider[]\n{\n    return [\n        ...provideCssLayout(),\n    ];\n}","<div>\r\n    <ng-select [formControl]=\"_available\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <div class=\"flex-1 overflow-vertical-scroll\">\r\n        <ng-container *layoutComponentRenderer=\"_metadata\"/>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\n\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService,\n                private _router: Router,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                this._metadata = this._store.getData(id);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/layout/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {PreviewComponent} from './preview/preview.component';\n\nexport const components =\n[\n    PreviewComponent,\n];","import {FactoryProvider, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {DynamicLayoutModule, LayoutComponentMetadata, LAYOUT_METADATA_STORAGE, provideLayout} from '@anglr/dynamic/layout';\nimport {provideBasicLayout} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayout} from '@anglr/dynamic/material-components';\nimport {provideCssLayout} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayout} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayout} from '@anglr/dynamic/handlebars-components';\nimport {provideFormLayout} from '@anglr/dynamic/form';\nimport {MetadataStorage} from '@anglr/dynamic';\n\nimport {components} from './layout.routes';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for layout preview samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        NgSelectModule,\n        DynamicLayoutModule,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutComponentMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('LAYOUT_DATA'),\n        provideLayout(),\n        provideBasicLayout(),\n        provideMaterialLayout(),\n        provideCssLayout(),\n        provideTinyMceLayout(),\n        provideHandlebarsLayout(),\n        provideFormLayout(),\n    ],\n})\n@ModuleRoutes(components)\nexport class LayoutModule\n{\n}","export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|undefined|null, parentControl: AbstractControl|undefined|null, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","import {Directive, Injector, Input, OnChanges, OnDestroy, SimpleChanges, ValueProvider, ViewContainerRef, inject} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemExtensionType, SCOPE_ID} from '@anglr/dynamic';\nimport {Action1, generateId, isBlank, isPresent, nameof} from '@jscrpt/common';\n\nimport {LayoutComponentMetadata} from '../../interfaces';\nimport {LAYOUT_COMPONENT_CHILD_EXTENSIONS} from '../../misc/tokens';\nimport {LayoutRenderer} from '../../services';\n\n/**\n * Renders layout component from metadata using LayoutRenderer\n */\n@Directive(\n{\n    selector: '[layoutComponentRenderer]',\n    providers: \n    [\n        <ValueProvider>\n        {\n            provide: LAYOUT_COMPONENT_CHILD_EXTENSIONS,\n            useValue: null,\n        },\n        \n    ],\n    standalone: true\n})\nexport class LayoutComponentRendererSADirective implements OnChanges, OnDestroy\n{\n    //######################### protected properties #########################\n\n    /**\n     * Id of this renderer directive\n     */\n    protected id: string = generateId(15);\n\n    /**\n     * Instance of view container used for rendering dynamic component at location of this directive\n     */\n    protected viewContainer: ViewContainerRef = inject(ViewContainerRef);\n\n    /**\n     * Instance of layout renderer that will perform rendering of component\n     */\n    protected renderer: LayoutRenderer = inject(LayoutRenderer);\n\n    /**\n     * Instance of parent directive or null if this is root directive\n     */\n    protected parentRendererDirective = inject(LayoutComponentRendererSADirective, {optional: true, skipSelf: true});\n\n    /**\n     * Instance of logger used for creating logs\n     */\n    protected logger: Logger = inject(LOGGER);\n\n    /**\n     * Id of scope for current component\n     */\n    protected scopeId: string|undefined|null = inject(SCOPE_ID, {optional: true});\n\n    /**\n     * Array of child extensions that can be applied to component from its parent\n     */\n    protected childExtensions: DynamicItemExtensionType[]|undefined|null = inject(LAYOUT_COMPONENT_CHILD_EXTENSIONS, {optional: true, skipSelf: true});\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Type that should be dynamically created into current container\n     */\n    @Input('layoutComponentRenderer')\n    public componentMetadata: LayoutComponentMetadata|undefined|null;\n\n    /**\n     * Callback method called when component has been rendered\n     */\n    @Input('layoutComponentRendererCallback')\n    public renderedCallback: Action1<unknown>|undefined|null;\n\n    /**\n     * Custom injector that will be used as parent of dynamic component\n     */\n    @Input('layoutComponentRendererInjector')\n    public customInjector: Injector|undefined|null;\n\n    //######################### public methods - implementation of OnChanges #########################\n\n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<LayoutComponentRendererSADirective>('componentMetadata') in changes)\n        {\n            const change = changes[nameof<LayoutComponentRendererSADirective>('componentMetadata')];\n\n            //component added to renderer\n            if(isPresent(change.currentValue) && isBlank(change.previousValue))\n            {\n                const metadata = change.currentValue as LayoutComponentMetadata;\n\n                this.logger.debug('LayoutComponentRendererSADirective: registering component for rendering \"{{id}}\" inside renderer \"{{rendererId}}\" with parent renderer \"{{parentRenderer}}\" and parent component \"{{parentComponent}}\"',\n                {\n                    id: metadata.id,\n                    rendererId: this.id,\n                    parentRenderer: this.parentRendererDirective?.id,\n                    parentComponent: this.parentRendererDirective?.componentMetadata?.id,\n                });\n    \n                //registers renderer and component\n                this.renderer.registerRenderer(this.id,\n                                               this.parentRendererDirective?.id,\n                                               this.viewContainer,\n                                               metadata,\n                                               this.parentRendererDirective?.componentMetadata,\n                                               this.scopeId,\n                                               this.childExtensions,\n                                               this.renderedCallback,\n                                               this.customInjector,);\n            }\n            //component changed\n            else if(isPresent(change.currentValue) && isPresent(change.previousValue))\n            {\n                this.logger.debug('LayoutComponentRendererSADirective: unregistering component from rendering \"{{id}}\"', {id: this.id});\n\n                this.renderer.unregisterRenderer(this.id);\n\n                const metadata = change.currentValue as LayoutComponentMetadata;\n\n                this.logger.debug('LayoutComponentRendererSADirective: registering component for rendering \"{{id}}\" inside renderer \"{{rendererId}}\" with parent renderer \"{{parentRenderer}}\" and parent component \"{{parentComponent}}\"',\n                {\n                    id: metadata.id,\n                    rendererId: this.id,\n                    parentRenderer: this.parentRendererDirective?.id,\n                    parentComponent: this.parentRendererDirective?.componentMetadata?.id,\n                });\n    \n                //registers renderer and component\n                this.renderer.registerRenderer(this.id,\n                                               this.parentRendererDirective?.id,\n                                               this.viewContainer,\n                                               metadata,\n                                               this.parentRendererDirective?.componentMetadata,\n                                               this.scopeId,\n                                               this.childExtensions,\n                                               this.renderedCallback,\n                                               this.customInjector,);\n            }\n            //component removed from renderer, unregister renderer\n            else if(isBlank(change.currentValue) && isPresent(change.previousValue))\n            {\n                this.logger.debug('LayoutComponentRendererSADirective: unregistering component from rendering \"{{id}}\"', {id: this.id});\n\n                this.renderer.unregisterRenderer(this.id);\n            }\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this.logger.debug('LayoutComponentRendererSADirective: destroying renderer \"{{id}}\" with component \"{{componentId}}\"',\n        {\n            id: this.id,\n            componentId: this.componentMetadata?.id,\n        });\n\n        this.renderer.destroyRenderer(this.id);\n    }\n}","import {NgModule} from '@angular/core';\n\nimport {LayoutComponentRendererSADirective} from '../directives';\n\n/**\n * Module contains components, directives, pipes for dynamic layout rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    exports:\n    [\n        LayoutComponentRendererSADirective,\n    ]\n})\nexport class DynamicLayoutModule\n{\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for material module items\n */\n@Injectable()\nexport class MaterialDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'material-components':\n            {\n                try\n                {\n                    this._logger?.debug('MaterialDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('MaterialDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for material types\n */\n@Injectable()\nexport class MaterialDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MaterialDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'material-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for material types\n */\n@Injectable()\nexport class MaterialDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MaterialDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'material-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {MaterialDynamicModuleItemsProvider, MaterialDynamicModuleRelationsProvider, MaterialDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for material package layout components provider\n */\nexport const MATERIAL_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material dynamic layout module types provider\n */\nexport const MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: MaterialDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for material dynamic relations types provider\n */\nexport const MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: MaterialDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for material package relations nodes provider\n */\nexport const MATERIAL_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material package relations components provider\n */\nexport const MATERIAL_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {MATERIAL_LAYOUT_COMPONENTS_PROVIDER, MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER, MATERIAL_RELATIONS_COMPONENTS_PROVIDER, MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER, MATERIAL_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout material subpackage\n */\nexport function provideMaterialLayout(): Provider[]\n{\n    return [\n        MATERIAL_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations material subpackage\n */\nexport function provideMaterialRelations(): Provider[]\n{\n    return [\n        MATERIAL_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor material subpackage\n */\nexport function provideMaterialLayoutEditor(): Provider[]\n{\n    return [\n        MATERIAL_LAYOUT_COMPONENTS_PROVIDER,\n        MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('material-components'),\n    ];\n}\n\n/**\n * Providers for relations editor material subpackage\n */\nexport function provideMaterialRelationsEditor(): Provider[]\n{\n    return [\n        MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER,\n        MATERIAL_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('material-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor material subpackage\n */\nexport function provideMaterialLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideMaterialRelationsEditor(),\n        ...provideMaterialLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations material subpackage\n */\nexport function provideMaterialLayoutRelations(): Provider[]\n{\n    return [\n        ...provideMaterialLayout(),\n        ...provideMaterialRelations(),\n    ];\n}","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n\n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target,\n                                  'routeValues',\n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n\n        return target;\n    };\n}","import {Type} from '@angular/core';\nimport {RouterModule, Route, ExtraOptions} from '@angular/router';\n\nimport {extractRoutes} from '../misc/utils';\n\n/**\n * Extended route with possibility to extract children from components\n */\nexport interface ComponentRouteChildren extends Route\n{\n    /**\n     * Array of components which contains routes\n     */\n    childrenComponents?: Type<any>[];\n}\n\n/**\n * Describes options for ModuleRoutes decorator\n */\nexport interface ModuleRoutesOptions\n{\n    /**\n     * Indication that `forRoot` should be used during registration of routes\n     */\n    rootModule?: boolean;\n\n    /**\n     * Extra options used for `forRoot` module creation\n     */\n    rootModuleConfig?: ExtraOptions;\n\n    /**\n     * Routes that will be set before routedComponents\n     */\n    staticRoutesBefore?: ComponentRouteChildren[];\n\n    /**\n     * Routes that will be set after routedComponents\n     */\n    staticRoutesAfter?: ComponentRouteChildren[];\n}\n\n/**\n * Extracts routes from children components\n * @param route - Route which can contain array of components with routes\n */\nfunction extractChildrenComponents(route: ComponentRouteChildren): Route\n{\n    if(route.childrenComponents && route.childrenComponents.length)\n    {\n        const routes: ComponentRouteChildren[] = extractRoutes(route.childrenComponents).map(extractChildrenComponents);\n\n        if(route.children && route.children.length)\n        {\n            route.children =\n            [\n                ...route.children,\n                ...routes\n            ];\n        }\n        else\n        {\n            route.children = routes;\n        }\n    }\n\n    return route;\n}\n\n/**\n * Registers routes for module to which is attached\n * @param routedComponents - Array of components that will be used for routes extration\n * @param options - Optional options for defining routes\n */\nexport function ModuleRoutes(routedComponents: Type<any>[], options: ModuleRoutesOptions = {rootModule: false, staticRoutesAfter: [], staticRoutesBefore: []})\n{\n    return function<TFunction extends Function> (target: TFunction): TFunction\n    {\n        const ngModule: \n        {\n            ɵinj:\n            {\n                imports: any[]\n            }\n        } = target as any;\n        \n        if(ngModule.ɵinj && Array.isArray(ngModule.ɵinj.imports))\n        {\n            const routes = \n            [\n                ...(options.staticRoutesBefore || []).map(extractChildrenComponents),\n                ...extractRoutes(routedComponents).map(extractChildrenComponents),\n                ...(options.staticRoutesAfter || []).map(extractChildrenComponents)\n            ];\n\n            ngModule.ɵinj.imports.push(options.rootModule ? RouterModule.forRoot(routes, options.rootModuleConfig) : RouterModule.forChild(routes));\n        }\n\n        return target;\n    };\n}"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","CssDynamicModuleItemsProvider","constructor","_logger","tryToGet","source","_this","package","debug","item","name","i0","LOGGER","factory","ɵfac","CssDynamicModuleTypesProvider","moduleName","CSS_LAYOUT_COMPONENTS_PROVIDER","provide","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","CSS_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","provideCssLayout","provideCssLayoutEditor","provideStaticPackageSource","provideCssLayoutRelationsEditor","provideCssLayoutRelations","val_r2","PreviewComponent","_store","_router","_route","_available","FormControl","_metadata","_availableNames","ngOnInit","this","getStored","params","subscribe","setValue","getData","valueChanges","val","navigate","skipLocationChange","replaceUrl","ngOnDestroy","i1","i2","selectors","decls","vars","consts","template","rf","ctx","PreviewComponent_ng_option_2_Template","PreviewComponent_ng_container_5_Template","__decorate","ComponentRoute","path","StoreDataService","Router","ActivatedRoute","components","LayoutModule","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","deps","createStoreDataServiceFactory","provideLayout","provideBasicLayout","provideMaterialLayout","provideTinyMceLayout","provideHandlebarsLayout","provideFormLayout","imports","CommonModule","ReactiveFormsModule","NgSelectModule","DynamicLayoutModule","ModuleRoutes","FormComponentControlType","FormDynamicModuleItemsProvider","FormDynamicModuleTypesProvider","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","FORM_MODULE_TYPES_PROVIDER","FORM_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","FORM_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideFormLayoutEditor","provideFormLayoutRelationsEditor","provideFormLayoutRelations","getFormControl","controlName","parentControl","defaultControlType","defaultValue","get","getControlForType","type","FormArray","FormGroup","LayoutComponentRendererSADirective","generateId","viewContainer","inject","ViewContainerRef","renderer","LayoutRenderer","parentRendererDirective","optional","skipSelf","logger","scopeId","SCOPE_ID","childExtensions","LAYOUT_COMPONENT_CHILD_EXTENSIONS","ngOnChanges","changes","nameof","change","isPresent","currentValue","isBlank","previousValue","metadata","rendererId","parentRenderer","parentComponent","componentMetadata","registerRenderer","renderedCallback","customInjector","unregisterRenderer","componentId","destroyRenderer","inputs","standalone","features","useValue","MaterialDynamicModuleItemsProvider","MaterialDynamicModuleTypesProvider","MaterialDynamicModuleRelationsProvider","MATERIAL_LAYOUT_COMPONENTS_PROVIDER","MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER","MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER","MATERIAL_RELATIONS_NODES_PROVIDER","MATERIAL_RELATIONS_COMPONENTS_PROVIDER","provideMaterialLayoutEditor","provideMaterialRelationsEditor","provideMaterialLayoutRelationsEditor","provideMaterialLayoutRelations","route","target","rt","component","routeDecoratedComponent","routeValues","defineProperty","enumerable","configurable","writable","value","push","extractChildrenComponents","childrenComponents","length","routes","extractRoutes","children","routedComponents","options","rootModule","staticRoutesAfter","staticRoutesBefore","ngModule","ɵinj","Array","isArray","RouterModule","forRoot","rootModuleConfig","forChild"],"sourceRoot":""}