{"version":3,"file":"9901.chunk.d70d6fdf15a66778da09.js","mappings":"mVAEIA,EAAAA,GAAA,E,yBAAAA,EAAAA,EAAA,EAAAC,EAAA,sB,yBAAeD,EAAAA,EAAA,0BAAAE,E,ECsBb,MAAOC,UAAuCC,EAAAA,EAZpDC,WAAAA,G,oBAmBc,KAAAC,UAAsCC,EAAAA,EAAAA,IAAOC,EAAAA,E,CAOpCC,MAAAA,G,MAEXC,KAAKJ,SAASK,WAKlBC,EAAAF,KAAKJ,SAASK,QAAQE,cAAaC,QAAKF,EAALE,OAAUC,EAAAA,EAAAA,IAAW,KAC5D,CAKmBC,YAAAA,GAEf,IAAIC,EAAU,GAEd,IAAI,MAAMC,KAAOR,KAAKS,YAAYC,QAE9BH,GAAW,GAAGC,EAAIP,SAASU,OAAS,SAGxCX,KAAKY,iBAAiBC,cAAcC,MAAMC,oBAAsBR,EAAQS,MAC5E,E,wDArCSvB,KAA8BwB,GAA9BxB,EAA8B,G,qBAA9BA,EAA8ByB,UAAA,4BAAAC,YAAA,EAAAC,SAAA,CAAA9B,EAAAA,EAAAA,EAAAA,GAAA+B,MAAA,EAAAC,KAAA,EAAAC,OAAA,gCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GDxB3CnC,EAAAA,GAAA,EAAAqC,EAAA,wBAAArC,EAAAA,I,KAAAA,EAAAA,GAAA,MAAAoC,EAAAzB,QAAA,KAAAyB,EAAAzB,QAAAS,Q,gBCoBQkB,EAAAA,GAAkCC,OAAA,yDAAAC,gBAAA,G","sources":["webpack://ng-universal-demo/../grid-components/src/dynamicItems/gridColumns/designer/gridColumnsDesigner.component.html","webpack://ng-universal-demo/../grid-components/src/dynamicItems/gridColumns/designer/gridColumnsDesigner.component.ts"],"sourcesContent":["@for(column of options?.columns; track column)\n{\n    <ng-container *layoutComponentRenderer=\"column\"/>\n}","import {Component, ChangeDetectionStrategy, inject} from '@angular/core';\nimport {LayoutComponent, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {LayoutDesignerSAComponent} from '@anglr/dynamic/layout-editor';\nimport {HostFlexRowStyle} from '@anglr/common';\nimport {generateId} from '@jscrpt/common';\n\nimport {GridColumnsComponentOptions} from '../gridColumns.options';\nimport {GridColumnsSAComponent} from '../gridColumns.component';\n\n/**\n * Component used for displaying grid columns designer\n */\n@Component(\n{\n    selector: 'grid-columns-designer',\n    templateUrl: 'gridColumnsDesigner.component.html',\n    styles: [HostFlexRowStyle],\n    standalone: true,\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridColumnsDesignerSAComponent extends GridColumnsSAComponent implements LayoutComponent<GridColumnsComponentOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Instance of designer component\n     */\n    protected designer: LayoutDesignerSAComponent = inject(LayoutDesignerSAComponent);\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override onInit(): void\n    {\n        if(!this.designer.options)\n        {\n            return;\n        }\n\n        this.designer.options.typeMetadata.scope ??= generateId(10);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override onOptionsSet(): void\n    {\n        let colsDef = '';\n\n        for(const col of this.optionsSafe.columns)\n        {\n            colsDef += `${col.options?.width || '1fr'} `;\n        }\n\n        this.componentElement.nativeElement.style.gridTemplateColumns = colsDef.trim();\n    }\n}"],"names":["i0","GridColumnsDesignerSAComponent_For_1_ng_container_0_Template","column_r1","GridColumnsDesignerSAComponent","GridColumnsSAComponent","constructor","designer","inject","LayoutDesignerSAComponent","onInit","this","options","_a","typeMetadata","scope","generateId","onOptionsSet","colsDef","col","optionsSafe","columns","width","componentElement","nativeElement","style","gridTemplateColumns","trim","t","selectors","standalone","features","decls","vars","consts","template","rf","ctx","GridColumnsDesignerSAComponent_For_1_Template","LayoutComponentRendererSADirective","styles","changeDetection"],"sourceRoot":""}