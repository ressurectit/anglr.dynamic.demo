{"version":3,"file":"5532.chunk.91cf9bc0a26d1080447e.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/components/relationsResult/node/relationsResultNode.component.ts","webpack://ng-universal-demo/./app/components/relationsResult/node/relationsResultNode.component.html","webpack://ng-universal-demo/./app/components/relationsResult/metadata/relationsResult.relationsMetadata.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeBase.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeEndpointBase.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeInput/relationsNodeInput.component.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeOutput/relationsNodeOutput.component.ts","webpack://ng-universal-demo/../relations/src/decorators/pureRelationsComponent/pureRelationsComponent.decorator.ts","webpack://ng-universal-demo/../src/misc/utils.ts","webpack://ng-universal-demo/../src/services/defaultDynamicModuleItemsProvider/defaultDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/services/dynamicItemLoader/dynamicItemLoader.service.ts","webpack://ng-universal-demo/../src/services/dynamicModuleDataExtractor/dynamicModuleDataExtractor.service.ts","webpack://ng-universal-demo/../material-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../src/utils/async.ts"],"sourcesContent":["var map = {\n\t\"./button/type\": [\n\t\t66249,\n\t\t6249\n\t],\n\t\"./gridPanel/type\": [\n\t\t49,\n\t\t49\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t9918,\n\t\t9918\n\t],\n\t\"./ifBlock/type\": [\n\t\t29781,\n\t\t9781\n\t],\n\t\"./negation/type\": [\n\t\t3214,\n\t\t3214\n\t],\n\t\"./sampleChange/type\": [\n\t\t89354,\n\t\t9354\n\t],\n\t\"./sampleSource/type\": [\n\t\t51133,\n\t\t1133\n\t],\n\t\"./stackPanel/type\": [\n\t\t14433,\n\t\t4433\n\t],\n\t\"./textBlock/type\": [\n\t\t2252,\n\t\t2252\n\t],\n\t\"./toggleButton/type\": [\n\t\t48928,\n\t\t8928\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 84635;\nmodule.exports = webpackAsyncContext;","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationNodeOutputSAComponent} from '@anglr/dynamic/relations-editor';\n\n/**\n * Relations node component for relations result\n */\n@Component(\n{\n    selector: 'relations-sample-node',\n    templateUrl: 'relationsResultNode.component.html',\n    styleUrls: ['relationsResultNode.component.scss'],\n    standalone: true,\n    imports:\n    [\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationsResultNodeSAComponent extends RelationsNodeBase implements RelationsNode\n{\n}","<div class=\"node-header\">\n    {{metadata?.id}}\n</div>\n\n<div class=\"node-content\">\n    <div class=\"inputs margin-right-small\">\n        <div class=\"flex-row\">\n            <relation-node-input [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"vstup\" [parent]=\"this\"></relation-node-input>\n            <div class=\"margin-left-extra-small\">vstup</div>\n        </div>\n    </div>\n\n    <div class=\"outputs margin-left-small\">\n    </div>\n</div>","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {RelationsResultNodeSAComponent} from '../node/relationsResultNode.component';\n\n/**\n * Relations result relations metadata\n */\nexport class RelationsResultRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Relations result',\n        description: 'Relations result node',\n        group: 'Sample component',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = RelationsResultNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {HostListener, ViewChildren, QueryList, ChangeDetectorRef, ElementRef, SimpleChanges, Directive} from '@angular/core';\nimport {Dictionary, nameof} from '@jscrpt/common';\nimport {Observable, Subject} from 'rxjs';\n\nimport {Coordinates, RelationsInput, RelationsNode, RelationsNodeMetadata, RelationsOutput} from '../interfaces';\nimport {RelationNodeOutputSAComponent} from './relationsNodeOutput/relationsNodeOutput.component';\nimport {RelationNodeInputSAComponent} from './relationsNodeInput/relationsNodeInput.component';\n\n/**\n * Base class for relations node components\n */\n@Directive()\nexport abstract class RelationsNodeBase<TOptions = any, TEditorOptions = any> implements RelationsNode<TOptions, TEditorOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Indication whether is node initialized\n     */\n    protected initialized: boolean = false;\n\n    /**\n     * Indication whether user is dragging\n     */\n    protected isDragging: boolean = false;\n\n    /**\n     * Last mouse down position\n     */\n    protected lastMouseDownPosition: Coordinates =\n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Node position on last mouse down event\n     */\n    protected lastMouseDownNodePosition: Coordinates =\n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Node position\n     */\n    protected nodePosition: Coordinates =\n    {\n        x: 0,\n        y: 0,\n    };\n\n    /**\n     * Array of all available outputs\n     */\n    protected ɵAllOutputs: readonly RelationsOutput[] = [];\n\n    /**\n     * Object storing inputs by their names\n     */\n    protected ɵInputs: Dictionary<RelationsInput> = {};\n \n    /**\n     * Object storing outputs by their names\n     */\n    protected ɵOutputs: Dictionary<RelationsOutput> = {};\n\n    /**\n     * Subject used for destroying node by user\n     */\n    protected destroySubject: Subject<void> = new Subject<void>();\n\n    //######################### protected properties - view children #########################\n\n    /**\n     * Relations node inputs\n     */\n    @ViewChildren(RelationNodeInputSAComponent)\n    protected inputsChildren!: QueryList<RelationsInput>;\n\n    /**\n     * Relations node outputs\n     */\n    @ViewChildren(RelationNodeOutputSAComponent)\n    protected outputsChildren!: QueryList<RelationsOutput>;\n\n    //######################### public properties - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n    public zoomLevel: number = 1;\n\n    /**\n     * @inheritdoc\n     */\n    public get id(): string\n    {\n        return this.metadata?.id ?? '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public metadata: RelationsNodeMetadata<TOptions, TEditorOptions>|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public get allOutputs(): readonly RelationsOutput[]\n    {\n        return this.ɵAllOutputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get inputs(): Dictionary<RelationsInput>\n    {\n        return this.ɵInputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get outputs(): Dictionary<RelationsOutput>\n    {\n        return this.ɵOutputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get destroy(): Observable<void>\n    {\n        return this.destroySubject.asObservable();\n    }\n\n    //######################### constructor #########################\n    constructor(protected changeDetector: ChangeDetectorRef,\n                protected element: ElementRef<HTMLElement>,)\n    {\n        this.updatePosition();\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n    \n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        //initial change of metadata\n        if(nameof<RelationsNodeBase>('metadata') in changes && this.metadata)\n        {\n            if(this.metadata.nodeMetadata?.coordinates)\n            {\n                this.nodePosition = this.metadata.nodeMetadata.coordinates;\n                this.updatePosition();\n            }\n\n            this.metadataSet();\n        }\n    }\n\n    //######################### public methods - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this.changeDetector.detectChanges();\n\n        if(!this.initialized)\n        {\n            this.initialized = true;\n\n            this.initEndpoints();\n        }\n    }\n\n    //######################### protected methods methods - host listeners #########################\n\n    /**\n     * Mouse down event\n     * @param event\n     */\n    @HostListener('mousedown', ['$event'])\n    protected onMouseDown(event: MouseEvent): void\n    {\n        this.isDragging = true;\n        this.lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this.lastMouseDownNodePosition =\n        {\n            x: this.nodePosition.x,\n            y: this.nodePosition.y\n        };\n\n        event.stopImmediatePropagation();\n    }\n\n    /**\n     * Mouse move event\n     * @param event\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected onMouseMove(event: MouseEvent): void\n    {\n        if (this.isDragging)\n        {\n            this.nodePosition =\n            {\n                x: this.lastMouseDownNodePosition.x + (event.clientX - this.lastMouseDownPosition.x) * 1/this.zoomLevel,\n                y: this.lastMouseDownNodePosition.y + (event.clientY - this.lastMouseDownPosition.y) * 1/this.zoomLevel,\n            };\n\n            this.updatePosition();\n\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            this.updateRelations();\n        }\n    }\n\n    /**\n     * Mouse up event\n     * @param event\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected onMouseUp(event: MouseEvent): void\n    {\n        if (this.isDragging)\n        {\n            this.isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Initialize endpoints\n     */\n    protected initEndpoints(): void\n    {\n        const updateInputs = () =>\n        {\n            this.ɵInputs = {};\n\n            this.inputsChildren?.forEach(input =>\n            {\n                if(input.name)\n                {\n                    this.ɵInputs[input.name] = input;\n                }\n            });\n\n            Object.freeze(this.ɵInputs);\n        };\n\n        const updateOutputs = () =>\n        {\n            this.ɵAllOutputs = this.outputsChildren.toArray();\n            this.ɵOutputs = {};\n\n            this.outputsChildren?.forEach(output =>\n            {\n                if(output.name)\n                {\n                    this.ɵOutputs[output.name] = output;\n                }\n            });\n\n            Object.freeze(this.ɵOutputs);\n        };\n\n        this.inputsChildren?.changes.subscribe(() => updateInputs());\n        this.outputsChildren?.changes.subscribe(() => updateOutputs());\n\n        updateInputs();\n        updateOutputs();\n    }\n\n    /**\n     * Updates node relations\n     */\n    protected updateRelations(): void\n    {\n        this.inputsChildren.forEach(input =>\n        {\n            input.updateRelation();\n        });\n\n        this.outputsChildren.forEach(output =>\n        {\n            output.updateRelation();\n        });\n    }\n\n    /**\n     * Updates node position\n     */\n    protected updatePosition(): void\n    {\n        this.element.nativeElement.style.left = `${this.nodePosition.x}px`;\n        this.element.nativeElement.style.top = `${this.nodePosition.y}px`;\n\n        if(this.metadata?.nodeMetadata?.coordinates)\n        {\n            this.metadata.nodeMetadata.coordinates.x = this.nodePosition.x;\n            this.metadata.nodeMetadata.coordinates.y = this.nodePosition.y;\n        }\n    }\n\n    /**\n     * Allows code to be called after metadata were set\n     */\n    protected metadataSet(): void\n    {\n    }\n}","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\n\nimport {Coordinates, RelationsEndpoint, RelationsNode} from '../interfaces';\nimport {NodeRelationPath} from '../misc/nodeRelationPath';\nimport {RelationsNodeManager} from '../services';\nimport {RelationsCanvasSAComponent} from './relationsCanvas/relationsCanvas.component';\n\n/**\n * Base class for relations node endpoints (inputs/outputs)\n */\n@Directive()\nexport abstract class RelationNodeEndpointBase implements RelationsEndpoint, OnInit\n{\n    //######################### protected properties #########################\n\n    /**\n     * Node relation\n     */\n    protected _relation: NodeRelationPath|null|undefined;\n\n    /**\n     * Indication whether component is dragging\n     */\n    protected _isDragging: boolean = false;\n\n    /**\n     * Last mouse down position\n     */\n    protected _lastMouseDownPosition: Coordinates = \n    {\n        x: 0,\n        y: 0\n    };\n\n    //######################### public properties - implementation of RelationsEndpoint #########################\n\n    /**\n     * @inheritdoc\n     */\n    @Input()\n    public name: string|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public get parentId(): string\n    {\n        return this.parent?.id ?? '';\n    }\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Parent zoom level\n     */\n    @Input()\n    public zoomLevel: number = 1;\n\n    /**\n     * Parent node coordinates\n     */\n    @Input()\n    public parentCoordiantes: Coordinates = \n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Instance of parent node\n     */\n    @Input()\n    public parent: RelationsNode|undefined|null;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _relationManager: RelationsNodeManager,\n                protected _canvas: RelationsCanvasSAComponent,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        if(!this.parent)\n        {\n            throw new Error('Every input or output endpoint must have parent specified');\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * @inheritdoc\n     */\n    public getCoordinates(): Coordinates\n    {\n        return {\n            x: this.parentCoordiantes.x + this._element.nativeElement.offsetLeft + this._element.nativeElement.offsetWidth/2,\n            y: this.parentCoordiantes.y + this._element.nativeElement.offsetTop + this._element.nativeElement.offsetHeight/2\n        };\n    }\n\n    /**\n     * Updates relation coordinates\n     */\n    public abstract updateRelation(): void;\n}","import {Component, ChangeDetectionStrategy, HostListener, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationNodeEndpointBase} from '../relationsNodeEndpointBase';\nimport {RelationsInput} from '../../interfaces';\nimport {NodeRelationPath} from '../../misc/nodeRelationPath';\nimport {MouseButton} from '../../misc/enums';\nimport {INVALIDATE_DROP} from '../../misc/constants';\n\n/**\n * Component used to display relation node input\n */\n@Component(\n{\n    selector: 'relation-node-input',\n    template: '',\n    styleUrls: ['relationsNodeInput.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationNodeInputSAComponent extends RelationNodeEndpointBase implements RelationsInput, OnDestroy\n{\n    //######################### private properties #########################\n\n    /**\n     * Temporary relation path when updating existing relation\n     */\n    private _tempRelation: NodeRelationPath|null|undefined;\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._relation)\n        {\n            this._relation.destroy();\n        }\n    }\n\n    //######################### public methods - implementation of RelationsInput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public addRelation(relation: NodeRelationPath): boolean\n    {\n        if (this._relation)\n        {\n            //Same relation\n            if (this._relation.start?.x === relation.start?.x &&\n                this._relation.start?.y === relation.start?.y)\n            {\n                return false;\n            }\n\n            this._relation.destroy();\n        }\n\n        this._relation = relation;\n        \n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public endRelation(relation: NodeRelationPath): void\n    {\n        if(this.addRelation(relation))\n        {\n            this.updateRelation();\n        }\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * Updates node output relation\n     */\n    public updateRelation(): void\n    {\n        if (!this._relation)\n        {\n            return;\n        }\n\n        this._relation.end = this.getCoordinates();\n        this._relation.input = this;\n        this._relation.invalidateVisuals();\n    }\n\n    //######################### protected methods - host listeners #########################\n\n    /**\n     * Mouse enter event, marks input as active\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseenter', ['$event'])\n    protected _onMouseEnter(event: MouseEvent): void\n    {\n        if (event.buttons === MouseButton.LEFT)\n        {\n            this._relationManager.setActiveInput(this);\n        }\n    }\n\n    /**\n     * Mouse leave event, clears marked active input\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseleave', ['$event'])\n    protected _onMouseLeave(event: MouseEvent): void\n    {\n        if (event.buttons === MouseButton.LEFT)\n        {\n            this._relationManager.setActiveInput(null);\n        }\n    }\n\n    /**\n     * Mouse down event, starts dragging\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: MouseEvent): void\n    {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._tempRelation = this._relation;\n        this._relation = null;\n        this._isDragging = true;\n    }\n\n    /**\n     * Mouse move event on whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            if (this._tempRelation)\n            {\n                this._tempRelation.end =\n                {\n                    x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition?.x) * 1/this.zoomLevel,\n                    y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition?.y) * 1/this.zoomLevel\n                };\n    \n                this._tempRelation.invalidateVisuals();\n            }\n        }\n    }\n\n    /**\n     * Mouse up event on whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            this._tempRelation?.invalidateVisuals(INVALIDATE_DROP);\n        }\n    }\n}","import {Component, ChangeDetectionStrategy, HostListener, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationNodeEndpointBase} from '../relationsNodeEndpointBase';\nimport {RelationsOutput} from '../../interfaces';\nimport {NodeRelationPath} from '../../misc/nodeRelationPath';\nimport {INVALIDATE_DROP} from '../../misc/constants';\n\n/**\n * Component used to display relation node output\n */\n@Component(\n{\n    selector: 'relation-node-output',\n    template: '',\n    styleUrls: ['relationsNodeOutput.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationNodeOutputSAComponent extends RelationNodeEndpointBase implements RelationsOutput, OnDestroy\n{\n    //######################### protected properties #########################\n\n    /**\n     * Relations\n     */\n    protected _relations: NodeRelationPath[] = [];\n\n    //######################### public properties - implementation of RelationsOutput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get relations(): NodeRelationPath[]\n    {\n        return this._relations;\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._relations)\n        {\n            const relations = [...this._relations];\n\n            for(const relation of relations)\n            {\n                relation.destroy();\n            }\n        }\n    }\n\n    //######################### public methods - implementation of RelationsOutput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public startRelation(): NodeRelationPath\n    {\n        const relation = this._canvas.createRelation();\n\n        relation.start = this.getCoordinates();\n        relation.output = this;\n\n        relation.destroying.subscribe(() =>\n        {\n            const index = this._relations.indexOf(relation);\n\n            if(index >= 0)\n            {\n                this._relations.splice(index, 1);\n            }\n        });\n\n        this._relations.push(relation);\n\n        return relation;\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * Updates node output relations\n     */\n    public updateRelation(): void\n    {\n        if (!this._relations)\n        {\n            return;\n        }\n\n        for (const relation of this._relations)\n        {\n            relation.start = this.getCoordinates();\n            relation.invalidateVisuals();\n        }\n    }\n\n    //######################### protected methods - host listeners #########################\n\n    /**\n     * Mouse down event, creates new relation\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: DragEvent): void\n    {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n        this._isDragging = true;\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._relation = this.startRelation();\n    }\n\n    /**\n     * Mouse move event - whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: DragEvent): void\n    {\n        if (this._isDragging)\n        {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            if (this._relation)\n            {\n                this._relation.end =\n                {\n                    x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition.x) * 1/this.zoomLevel,\n                    y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition.y) * 1/this.zoomLevel\n                };\n\n                this._relation.invalidateVisuals();\n            }\n        }\n    }\n\n    /**\n     * Mouse up event - whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: DragEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            this._relation?.invalidateVisuals(INVALIDATE_DROP);\n        }\n    }\n}","import {Type} from '@angular/core';\n\nimport {RelationsComponent} from '../../interfaces';\n\n/**\n * Defines identification of relations component type\n */\ninterface ɵRelationsComponentTypeId\n{\n    /**\n     * Indication that this component is relations component\n     */\n    __ɵɵRelationsComponent: boolean;\n}\n\n/**\n * Tests object whether it is RelationsComponent type\n * @param obj - Object to be tested\n */\nexport function isRelationsComponentType(obj: unknown): obj is Type<RelationsComponent>\n{\n    const trgt = obj as ɵRelationsComponentTypeId;\n\n    return !!trgt.__ɵɵRelationsComponent;\n}\n\n/**\n * Marks component as pure relations component, cant be used on component that is also layout component!\n */\nexport function PureRelationsComponent(): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const trgt = target as unknown as ɵRelationsComponentTypeId;\n\n        trgt.__ɵɵRelationsComponent = true;\n\n        return target;\n    };\n}","import {SimpleChange, SimpleChanges} from '@angular/core';\n\n/**\n * Adds simple change into simple changes object\n * @param changes - Object with changes to be added to\n * @param key - Key under wich should be change stored\n * @param currentValue - Current value that is being changed\n * @param previousValue - Previous value that is being changed\n * @param firstChange - Indication whether is first change, defaults to false\n */\nexport function addSimpleChange<TObj, TValue = any>(changes: SimpleChanges, key: Extract<keyof TObj, string>, currentValue: TValue|undefined|null, previousValue: TValue|undefined|null, firstChange: boolean = false): void\n{\n    changes[key] = <SimpleChange>\n    {\n        currentValue,\n        previousValue,\n        firstChange,\n        isFirstChange: () => firstChange,\n    };\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in module items\n */\n@Injectable()\nexport class DefaultDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'basic-components':\n            {\n                try\n                {\n                    this._logger?.debug('DefaultDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`@anglr/dynamic/basic-components/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('DefaultDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            case 'material-components':\n            {\n                try\n                {\n                    this._logger?.debug('DefaultDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n        \n                    const dynamicItemModule = await import(`@anglr/dynamic/material-components/${source.name}/type`);\n        \n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('DefaultDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, resolvePromiseOr} from '@jscrpt/common';\n\nimport {DynamicModuleProvider, DynamicItemLoaderValidatorFn} from './dynamicItemLoader.interface';\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleDataExtractor} from '../dynamicModuleDataExtractor/dynamicModuleDataExtractor.service';\n\n//TODO: make no chace dynamic, observable\n\n/**\n * Service used for loading dynamic items\n */\nexport class DynamicItemLoader<TDynamicItemDef = any>\n{\n    //######################### protected cache #########################\n\n    /**\n     * Cached dynamic items definition\n     */\n    protected cachedDynamicItems: Dictionary<TDynamicItemDef|null> = {};\n\n    //######################### constructors #########################\n    constructor(protected providers: DynamicModuleProvider[],\n                protected extractors: DynamicModuleDataExtractor<TDynamicItemDef>[],\n                protected validatorFn: DynamicItemLoaderValidatorFn<TDynamicItemDef>,\n                protected logger?: Logger,\n                protected noCache?: boolean,)\n    {\n        //providers is not an array\n        if(!Array.isArray(this.providers))\n        {\n            this.logger?.error('DynamicItemLoader: missing providers!');\n\n            this.providers = [];\n        }\n\n        //extractors is not an array\n        if(!Array.isArray(this.extractors))\n        {\n            this.logger?.error('DynamicItemLoader: missing extractors!');\n\n            this.extractors = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Loads dynamic item, or null if not found\n     * @param source - Definition of source for dynamic item\n     */\n    public async loadItem(source: DynamicItemSource): Promise<TDynamicItemDef|null>\n    {\n        let dynamicModule: DynamicModule|null = null;\n        const cacheId = `${source.package}-${source.name}`;\n\n        //try to get from cache\n        if(cacheId in this.cachedDynamicItems && !this.noCache)\n        {\n            this.logger?.verbose('DynamicItemLoader: Loading from cache {@source}', {name: source.name, package: source.package});\n\n            return this.cachedDynamicItems[cacheId];\n        }\n\n        //loops all providers, return result from first that returns non null value\n        for(const provider of this.providers)\n        {\n            const asyncDynamicModule = provider.tryToGet(source);\n\n            if(asyncDynamicModule)\n            {\n                dynamicModule = await resolvePromiseOr(asyncDynamicModule);\n            }\n            else\n            {\n                dynamicModule = null;\n            }\n\n            if(dynamicModule)\n            {\n                break;\n            }\n        }\n\n        //no module found\n        if(!dynamicModule)\n        {\n            this.logger?.debug('DynamicItemLoader: Failed to get dynamic module {@source}', {name: source.name, package: source.package});\n\n            return null;\n        }\n\n        //loops all extractors, return result from first that returns non null value\n        for(const extractor of this.extractors)\n        {\n            const dynamicItem = await extractor.tryToExtract(dynamicModule);\n\n            if(dynamicItem)\n            {\n                this.cachedDynamicItems[cacheId] = this.validatorFn(dynamicItem) ? dynamicItem : null; \n\n                if(!this.cachedDynamicItems[cacheId])\n                {\n                    this.logger?.warn('DynamicItemLoader: Found dynamic item {@source} is not of requested type', {name: source.name, package: source.package});        \n                }\n\n                return this.cachedDynamicItems[cacheId];\n\n            }\n        }\n\n        this.logger?.debug('DynamicItemLoader: Failed to extract dynamic item {@source}', {name: source.name, package: source.package});\n\n        this.cachedDynamicItems[cacheId] = null;\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, extend, resolvePromiseOr, isEmptyObject} from '@jscrpt/common';\n\nimport {DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from './dynamicModuleDataExtractor.interface';\n\n/**\n * Extractor used for extracting dynamic data from dynamic module\n */\nexport class DynamicModuleDataExtractor<TData extends Dictionary<any> = any>\n{\n    //######################### constructor #########################\n\n    /**\n     * Creates new instance of DynamicModuleDataExtractor\n     * @param _extractorFunctions - Array of extractor functions used to create result\n     * @param _logger - Instance of logger used for logging, optional\n     */\n    constructor(protected _extractorFunctions: DynamicModuleDataExtractorFn[],\n                protected _logger?: Logger,)\n    {\n        //extractor functions is not an array\n        if(!Array.isArray(this._extractorFunctions))\n        {\n            this._logger?.error('DynamicModuleDataExtractor: missing extractor functions!');\n\n            this._extractorFunctions = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Tries to extract dynamic data from dynamic module\n     * @param module - Module containing dynamic data\n     */\n    public async tryToExtract(module: DynamicModule): Promise<TData|null>\n    {\n        const result: TData = {} as any;\n\n        for(const fn of this._extractorFunctions)\n        {\n            extend(true, result, await resolvePromiseOr(fn(module, this._logger)));\n        }\n\n        if(isEmptyObject(result))\n        {\n            return null;\n        }\n\n        return result;\n    }\n}","var map = {\n\t\"./checkbox/type\": [\n\t\t93833,\n\t\t294,\n\t\t3833\n\t],\n\t\"./datepicker/type\": [\n\t\t23489,\n\t\t3167,\n\t\t9101,\n\t\t4262,\n\t\t6038,\n\t\t3489\n\t],\n\t\"./numberField/type\": [\n\t\t62459,\n\t\t3167,\n\t\t4262,\n\t\t2459\n\t],\n\t\"./period/type\": [\n\t\t94391,\n\t\t3167,\n\t\t4262,\n\t\t4391\n\t],\n\t\"./radio/type\": [\n\t\t7570,\n\t\t5613,\n\t\t7570\n\t],\n\t\"./select/type\": [\n\t\t79838,\n\t\t3167,\n\t\t5887,\n\t\t9838\n\t],\n\t\"./textField/type\": [\n\t\t28945,\n\t\t3167,\n\t\t4262,\n\t\t8945\n\t],\n\t\"./textarea/type\": [\n\t\t13702,\n\t\t3167,\n\t\t4262,\n\t\t3702\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 13680;\nmodule.exports = webpackAsyncContext;","import {PromiseOr} from '../types/async';\n\n/**\n * Resolves `PromiseOr` value\n * @param value - Value to be solved\n */\nexport async function resolvePromiseOr<TResult>(value: PromiseOr<TResult>): Promise<TResult>\n{\n    if(value instanceof Promise)\n    {\n        return await value;\n    }\n\n    return value;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","RelationsResultNodeSAComponent","RelationsNodeBase","t","selectors","standalone","features","decls","vars","consts","template","i0","ctx","RelationNodeInputSAComponent","styles","changeDetection","RelationsResultRelationsEditorMetadata","constructor","metaInfo","name","description","group","nodeDefinition","freeze","this","changeDetector","element","initialized","isDragging","lastMouseDownPosition","x","y","lastMouseDownNodePosition","nodePosition","destroySubject","Subject","zoomLevel","updatePosition","metadata","allOutputs","ɵAllOutputs","inputs","ɵInputs","outputs","ɵOutputs","destroy","asObservable","ngOnChanges","changes","nameof","nodeMetadata","coordinates","metadataSet","invalidateVisuals","detectChanges","initEndpoints","onMouseDown","event","clientX","clientY","stopImmediatePropagation","onMouseMove","preventDefault","updateRelations","onMouseUp","updateInputs","inputsChildren","forEach","input","updateOutputs","outputsChildren","toArray","output","subscribe","updateRelation","nativeElement","style","left","top","viewQuery","RelationNodeOutputSAComponent","RelationNodeEndpointBase","_element","_relationManager","_canvas","_isDragging","_lastMouseDownPosition","parentCoordiantes","parentId","parent","ngOnInit","getCoordinates","offsetLeft","offsetWidth","offsetTop","offsetHeight","ngOnDestroy","_relation","addRelation","relation","start","endRelation","end","_onMouseEnter","buttons","MouseButton","setActiveInput","_onMouseLeave","_onMouseDown","_tempRelation","_onMouseMove","_onMouseUp","INVALIDATE_DROP","hostBindings","CommonModule","_relations","relations","startRelation","createRelation","destroying","index","indexOf","splice","push","isRelationsComponentType","obj","__ɵɵRelationsComponent","PureRelationsComponent","target","addSimpleChange","key","currentValue","previousValue","firstChange","isFirstChange","DefaultDynamicModuleItemsProvider","_logger","tryToGet","source","package","debug","LOGGER","factory","DynamicItemLoader","providers","extractors","validatorFn","logger","noCache","cachedDynamicItems","Array","isArray","error","loadItem","dynamicModule","cacheId","verbose","provider","asyncDynamicModule","resolvePromiseOr","extractor","dynamicItem","tryToExtract","warn","DynamicModuleDataExtractor","_extractorFunctions","result","fn","extend","isEmptyObject","all","slice","value"],"sourceRoot":""}