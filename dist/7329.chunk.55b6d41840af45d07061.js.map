{"version":3,"file":"7329.chunk.55b6d41840af45d07061.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/pages/+relationsStatic/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsStatic/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsStatic/relationsStatic.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsStatic/relationsStatic.module.ts","webpack://ng-universal-demo/../layout/src/types/textStyling.types.ts","webpack://ng-universal-demo/./app/services/demoData/demoData.service.ts","webpack://ng-universal-demo/../relations/src/decorators/pureRelationsComponent/pureRelationsComponent.decorator.ts","webpack://ng-universal-demo/../relations/src/misc/extractors/relations.extractor.ts","webpack://ng-universal-demo/../relations/src/misc/providers.ts","webpack://ng-universal-demo/../relations/src/misc/utils.ts","webpack://ng-universal-demo/../relations/src/modules/dynamicRelations.module.ts","webpack://ng-universal-demo/../src/services/basicComponentsDynamicModuleItemsProvider/basicComponentsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/services/dynamicItemLoader/dynamicItemLoader.service.ts","webpack://ng-universal-demo/../src/services/dynamicModuleDataExtractor/dynamicModuleDataExtractor.service.ts","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../src/utils/async.ts"],"sourcesContent":["var map = {\n\t\"./button/type\": [\n\t\t38206,\n\t\t8206\n\t],\n\t\"./gridPanel/type\": [\n\t\t49,\n\t\t49\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t9918,\n\t\t9918\n\t],\n\t\"./sampleChange/type\": [\n\t\t89354,\n\t\t9354\n\t],\n\t\"./sampleSource/type\": [\n\t\t51133,\n\t\t1133\n\t],\n\t\"./stackPanel/type\": [\n\t\t14433,\n\t\t4433\n\t],\n\t\"./textBlock/type\": [\n\t\t2252,\n\t\t2252\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 84635;\nmodule.exports = webpackAsyncContext;","<div>\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"visible = !visible\">\n        <span>click</span>\n    </button>\n</div>\n\n<div *ngIf=\"visible\">\n    <div class=\"bold\">relations sample click</div>\n    <relations-sample-click></relations-sample-click>\n</div>\n\n<div>\n    <div class=\"bold\">relations result</div>\n    <relations-result></relations-result>\n</div>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsManager} from '@anglr/dynamic/relations';\n\nimport {DemoData} from '../../../services/demoData';\n\n/**\n * Page for displaying relations\n */\n@Component(\n{\n    selector: 'relations-view',\n    templateUrl: 'relations.component.html',\n    // styleUrls: ['relations.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is relations sample click component visible\n     */\n    protected visible: boolean = true;\n\n    //######################### constructor #########################\n    constructor(private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._relationsManager.setRelations(DemoData.relationsStaticDemo);\n    }\n}","import {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    RelationsComponent,\n];","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsModule} from '@anglr/dynamic/relations';\n\nimport {components} from './relationsStatic.routes';\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Module for relations with static components samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        RelationsSampleClickSAComponent,\n        RelationsResultSAComponent,\n        DynamicRelationsModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsStaticModule\n{\n}","/**\n * Available types of font weight\n */\nexport enum TextFontWeight\n{\n    /**\n     * Font weight light\n     */\n    Light = 200,\n\n    /**\n     * Font weight normal\n     */\n    Normal = 400,\n\n    /**\n     * Font weight semi-bold\n     */\n    SemiBold = 600,\n\n    /**\n     * Font weight bold\n     */\n    Bold = 700,\n}\n\n/**\n * Available types of font size units\n */\nexport enum StyleSizeUnit\n{\n    /**\n     * Style size unit is in pixels\n     */\n    px,\n\n    /**\n     * Style size unit is in points\n     */\n    pt,\n    \n    /**\n     * Style size unit is in em\n     */\n    em,\n}","import {ComponentStylingOptions, LayoutComponentMetadata, TextFontWeight} from '@anglr/dynamic/layout';\nimport {ButtonComponentOptions, GridPanelCellComponentOptions, GridPanelComponentOptions, StackPanelComponentOptions, StackPanelFlexExtensionOptions, TextBlockComponentOptions} from '@anglr/dynamic/basic-components';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\n/**\n * Class storing demo data\n */\nexport class DemoData\n{\n    public static demoLayout: LayoutComponentMetadata =\n    {\n        id: 'gridPanelTest',\n        package: 'basic-components',\n        name: 'gridPanel',\n        options: <GridPanelComponentOptions&ComponentStylingOptions>\n        {\n            columns:\n            [\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '2fr'\n                },\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '100px'\n                },\n            ],\n            rows:\n            [\n                {\n                    height: '300px'\n                },\n            ],\n            cells:\n            [\n                {\n                    id: 'celltest',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 2,\n                        gridColumnEnd: 3,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelTest',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions&ComponentStylingOptions>\n                            {\n                                padding:\n                                {\n                                    top: '20px'\n                                },\n                                children:\n                                [\n                                    {\n                                        id: 'textTest',\n                                        package: 'basic-components',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions&StackPanelFlexExtensionOptions>\n                                        {\n                                            text: 'toto je text',\n                                            margin:\n                                            {\n                                                top: '10px',\n                                                bottom: '6px',\n                                                left: '12px',\n                                                right: '14pt'\n                                            },\n                                            padding:\n                                            {\n                                                top: '8px',\n                                                bottom: '8px',\n                                                left: '12px',\n                                                right: '12px'\n                                            },\n                                            textStyling:\n                                            {\n                                                fontSize: '20px'\n                                            },\n                                            flex: '1'\n                                        }\n                                    },\n                                    {\n                                        id: 'text2Test',\n                                        package: 'basic-components',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions>\n                                        {\n                                            text: 'druhý riadok je toto',\n                                            textStyling:\n                                            {\n                                                fontWeight: TextFontWeight.Bold\n                                            }\n                                        }\n                                    },\n                                    {\n                                        id: 'button-test',\n                                        package: 'basic-components',\n                                        name: 'button',\n                                        options: <ButtonComponentOptions>\n                                        {\n                                            text: 'test btn',\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'anotherCell',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 3,\n                        gridColumnEnd: 4,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            package: 'basic-components',\n                            id: 'textJeTo',\n                            name: 'textBlock',\n                            options: <TextBlockComponentOptions>\n                            {\n                                text: 'nový text',\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'gridCellxxx',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 4,\n                        gridColumnEnd: 5,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelxxx',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions>\n                            {\n                                horizontal: true,\n                                children: []\n                            }\n                        }\n                    }\n                },\n            ]\n        }\n    };\n\n    public static relationsDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes2',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes2',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 40\n                },\n                options: null\n            }\n        },\n    ];\n\n    public static relationsStaticDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-sample-click',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-sample-click',\n            package: 'static-components',\n            name: 'relations-sample-click',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 80\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-result',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-result',\n            package: 'static-components',\n            name: 'relations-result',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 630,\n                    y: 60\n                },\n                options: null\n            }\n        }\n    ];\n\n    public static relationsStaticWithEditorDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-sample-click',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-sample-click',\n            package: 'static-components',\n            name: 'relations-sample-click',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 80\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-result',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-result',\n            package: 'static-components',\n            name: 'relations-result',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 630,\n                    y: 60\n                },\n                options: null\n            }\n        }\n    ];\n}","import {Type} from '@angular/core';\n\nimport {RelationsComponent} from '../../interfaces';\n\n/**\n * Defines identification of relations component type\n */\ninterface ɵRelationsComponentTypeId\n{\n    /**\n     * Indication that this component is relations component\n     */\n    __ɵɵRelationsComponent: boolean;\n}\n\n/**\n * Tests object whether it is RelationsComponent type\n * @param obj - Object to be tested\n */\nexport function isRelationsComponentType(obj: unknown): obj is Type<RelationsComponent>\n{\n    const trgt = obj as ɵRelationsComponentTypeId;\n\n    return !!trgt.__ɵɵRelationsComponent;\n}\n\n/**\n * Marks component as pure relations component, cant be used on component that is also layout component!\n */\nexport function PureRelationsComponent(): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const trgt = target as unknown as ɵRelationsComponentTypeId;\n\n        trgt.__ɵɵRelationsComponent = true;\n\n        return target;\n    };\n}","import {Type} from '@angular/core';\nimport {DynamicItemDefData, DynamicModule, DynamicModuleDataExtractorFn} from '@anglr/dynamic';\nimport {isPresent, isType} from '@jscrpt/common';\n\nimport {RelationsComponent} from '../../interfaces';\nimport {isRelationsComponentType} from '../../decorators';\n\n/**\n * Module with relations exports\n */\ninterface ɵDynamicModuleWithRelations extends DynamicModule\n{\n    /**\n     * Default export value\n     */\n    default?: Type<RelationsComponent>;\n\n    /**\n     * Relations named export value\n     */\n    relations?: Type<RelationsComponent>;\n}\n\n/**\n * Extracts dynamic relations from default locations\n * \n * - relations export\n * - default export\n */\nexport const relationsExportExtractor: DynamicModuleDataExtractorFn<DynamicItemDefData<Type<RelationsComponent>>> = (module, logger) =>\n{\n    const localModule = module as ɵDynamicModuleWithRelations;\n\n    logger?.debug('relationsExportExtractor: trying to extract dynamic relations');\n\n    if(isPresent(localModule.relations) && isType(localModule.relations) && isRelationsComponentType(localModule.relations))\n    {\n        return {\n            data: localModule.relations\n        };\n    }\n\n    if(isPresent(localModule.default) && isType(localModule.default) && isRelationsComponentType(localModule.default))\n    {\n        return {\n            data: localModule.default\n        };\n    }\n\n    return null;\n};","import {ClassProvider, FactoryProvider, inject, Optional} from '@angular/core';\nimport {BasicComponentsDynamicModuleItemsProvider, DynamicItemLoader, DynamicModuleDataExtractor} from '@anglr/dynamic';\nimport {LOGGER, Logger} from '@anglr/common';\n\nimport {RELATIONS_COMPONENTS_LOADER, RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS, RELATIONS_COMPONENTS_MODULE_PROVIDERS} from './tokens';\nimport {relationsExportExtractor} from './extractors';\nimport {isRelationsComponentDef} from './utils';\n\n/**\n * Provider for basic components package relations components provider\n */\nexport const BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: BasicComponentsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for default relations components extractor\n */\nexport const DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR: FactoryProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS,\n    useFactory: (logger?: Logger) =>\n    {\n        return new DynamicModuleDataExtractor([\n                                                  relationsExportExtractor,\n                                              ],\n                                              logger);\n    },\n    deps: [[new Optional(), LOGGER]],\n    multi: true\n};\n\n/**\n * Provider for relations components loader\n */\nexport const RELATIONS_COMPONENTS_LOADER_PROVIDER: FactoryProvider =\n{\n    provide: RELATIONS_COMPONENTS_LOADER,\n    useFactory: () => new DynamicItemLoader(inject(RELATIONS_COMPONENTS_MODULE_PROVIDERS),\n                                            inject(RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS),\n                                            isRelationsComponentDef,\n                                            inject(LOGGER, {optional: true}) ?? undefined)\n};","import {Provider} from '@angular/core';\nimport {DynamicItemLoaderValidatorFn} from '@anglr/dynamic';\nimport {isBlank, isType} from '@jscrpt/common';\n\nimport {RelationsComponentDef} from './types';\nimport {BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER, DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR, RELATIONS_COMPONENTS_LOADER_PROVIDER} from './providers';\nimport {RelationsComponentManager, RelationsManager, RelationsProcessor} from '../services';\n\n/**\n * Checks whether data is relations component def\n * @param data - Data to be checked\n */\nexport const isRelationsComponentDef: DynamicItemLoaderValidatorFn<RelationsComponentDef> = function(data): data is RelationsComponentDef\n{\n    //type is required and must be type\n    if(isBlank(data?.data) || !isType(data.data))\n    {\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Default providers for relations subpackage\n */\nexport function provideRelations(): Provider[]\n{\n    return [\n        BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER,\n        DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR,\n        RELATIONS_COMPONENTS_LOADER_PROVIDER,\n        RelationsComponentManager,\n        RelationsManager,\n        RelationsProcessor,\n    ];\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {provideRelations} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic relations rendering\n */\n@NgModule(\n{\n})\nexport class DynamicRelationsModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsModule>\n    {\n        return {\n            ngModule: DynamicRelationsModule,\n            providers:\n            [\n                provideRelations(),\n            ]\n        };\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in basic-components\n */\n@Injectable()\nexport class BasicComponentsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with basic-components\n        if(source.package != 'basic-components' && source.package != '@anglr/dynamic/basic-components')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            const dynamicItemModule = await import(`@anglr/dynamic/basic-components/${source.name}/type`);\n\n            return dynamicItemModule;\n        }\n        catch(e)\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n        }\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, resolvePromiseOr} from '@jscrpt/common';\n\nimport {DynamicModuleProvider, DynamicItemLoaderValidatorFn} from './dynamicItemLoader.interface';\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleDataExtractor} from '../dynamicModuleDataExtractor/dynamicModuleDataExtractor.service';\n\n/**\n * Service used for loading dynamic items\n */\nexport class DynamicItemLoader<TDynamicItemDef = any>\n{\n    //######################### protected cache #########################\n\n    /**\n     * Cached dynamic items definition\n     */\n    protected _cachedDynamicItems: Dictionary<TDynamicItemDef|null> = {};\n\n    //######################### constructors #########################\n    constructor(protected _providers: DynamicModuleProvider[],\n                protected _extractors: DynamicModuleDataExtractor<TDynamicItemDef>[],\n                protected _validatorFn: DynamicItemLoaderValidatorFn<TDynamicItemDef>,\n                protected _logger?: Logger,)\n    {\n        //providers is not an array\n        if(!Array.isArray(this._providers))\n        {\n            this._logger?.error('DynamicItemLoader: missing providers!');\n\n            this._providers = [];\n        }\n\n        //extractors is not an array\n        if(!Array.isArray(this._extractors))\n        {\n            this._logger?.error('DynamicItemLoader: missing extractors!');\n\n            this._extractors = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Loads dynamic item, or null if not found\n     * @param source - Definition of source for dynamic item\n     */\n    public async loadItem(source: DynamicItemSource): Promise<TDynamicItemDef|null>\n    {\n        let dynamicModule: DynamicModule|null = null;\n        const cacheId = `${source.package}-${source.name}`;\n\n        //try to get from cache\n        if(cacheId in this._cachedDynamicItems)\n        {\n            this._logger?.verbose('DynamicItemLoader: Loading from cache {@source}', {name: source.name, package: source.package});\n\n            return this._cachedDynamicItems[cacheId];\n        }\n\n        //loops all providers, return result from first that returns non null value\n        for(const provider of this._providers)\n        {\n            const asyncDynamicModule = provider.tryToGet(source);\n\n            if(asyncDynamicModule)\n            {\n                dynamicModule = await resolvePromiseOr(asyncDynamicModule);\n            }\n            else\n            {\n                dynamicModule = null;\n            }\n\n            if(dynamicModule)\n            {\n                break;\n            }\n        }\n\n        //no module found\n        if(!dynamicModule)\n        {\n            this._logger?.debug('DynamicItemLoader: Failed to get dynamic module {@source}', {name: source.name, package: source.package});\n\n            return null;\n        }\n\n        //loops all extractors, return result from first that returns non null value\n        for(const extractor of this._extractors)\n        {\n            const dynamicItem = await extractor.tryToExtract(dynamicModule);\n\n            if(dynamicItem)\n            {\n                this._cachedDynamicItems[cacheId] = this._validatorFn(dynamicItem) ? dynamicItem : null; \n\n                if(!this._cachedDynamicItems[cacheId])\n                {\n                    this._logger?.warn('DynamicItemLoader: Found dynamic item {@source} is not of requested type', {name: source.name, package: source.package});        \n                }\n\n                return this._cachedDynamicItems[cacheId];\n\n            }\n        }\n\n        this._logger?.debug('DynamicItemLoader: Failed to extract dynamic item {@source}', {name: source.name, package: source.package});\n\n        this._cachedDynamicItems[cacheId] = null;\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, extend, resolvePromiseOr, isEmptyObject} from '@jscrpt/common';\n\nimport {DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from './dynamicModuleDataExtractor.interface';\n\n/**\n * Extractor used for extracting dynamic data from dynamic module\n */\nexport class DynamicModuleDataExtractor<TData extends Dictionary<any> = any>\n{\n    //######################### constructor #########################\n\n    /**\n     * Creates new instance of DynamicModuleDataExtractor\n     * @param _extractorFunctions - Array of extractor functions used to create result\n     * @param _logger - Instance of logger used for logging, optional\n     */\n    constructor(protected _extractorFunctions: DynamicModuleDataExtractorFn[],\n                protected _logger?: Logger,)\n    {\n        //extractor functions is not an array\n        if(!Array.isArray(this._extractorFunctions))\n        {\n            this._logger?.error('DynamicModuleDataExtractor: missing extractor functions!');\n\n            this._extractorFunctions = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Tries to extract dynamic data from dynamic module\n     * @param module - Module containing dynamic data\n     */\n    public async tryToExtract(module: DynamicModule): Promise<TData|null>\n    {\n        const result: TData = {} as any;\n\n        for(const fn of this._extractorFunctions)\n        {\n            extend(true, result, await resolvePromiseOr(fn(module, this._logger)));\n        }\n\n        if(isEmptyObject(result))\n        {\n            return null;\n        }\n\n        return result;\n    }\n}","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}","import {PromiseOr} from '../types/async';\n\n/**\n * Resolves `PromiseOr` value\n * @param value - Value to be solved\n */\nexport async function resolvePromiseOr<TResult>(value: PromiseOr<TResult>): Promise<TResult>\n{\n    if(value instanceof Promise)\n    {\n        return await value;\n    }\n\n    return value;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","i0","RelationsComponent","constructor","_relationsManager","visible","ngOnInit","this","setRelations","DemoData","selectors","decls","vars","consts","template","ComponentRoute","path","RelationsManager","components","RelationsStaticModule","CommonModule","RelationsSampleClickSAComponent","RelationsResultSAComponent","DynamicRelationsModule","ModuleRoutes","TextFontWeight","StyleSizeUnit","package","name","options","columns","width","rows","height","cells","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","component","padding","top","children","text","margin","bottom","left","right","textStyling","fontSize","flex","fontWeight","Bold","horizontal","relationsOptions","outputs","outputName","inputs","inputName","nodeMetadata","coordinates","x","y","isRelationsComponentType","obj","__ɵɵRelationsComponent","PureRelationsComponent","target","relationsExportExtractor","logger","localModule","debug","isPresent","relations","isType","data","default","BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER","provide","RELATIONS_COMPONENTS_MODULE_PROVIDERS","useClass","BasicComponentsDynamicModuleItemsProvider","multi","DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR","RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS","useFactory","DynamicModuleDataExtractor","deps","Optional","LOGGER","RELATIONS_COMPONENTS_LOADER_PROVIDER","RELATIONS_COMPONENTS_LOADER","DynamicItemLoader","inject","isRelationsComponentDef","optional","undefined","isBlank","ngModule","providers","RelationsComponentManager","RelationsProcessor","_logger","tryToGet","source","factory","_providers","_extractors","_validatorFn","_cachedDynamicItems","Array","isArray","error","loadItem","dynamicModule","cacheId","verbose","provider","asyncDynamicModule","resolvePromiseOr","extractor","dynamicItem","tryToExtract","warn","_extractorFunctions","result","fn","extend","isEmptyObject","route","rt","routeDecoratedComponent","routeValues","defineProperty","enumerable","configurable","writable","value","push"],"sourceRoot":""}