{"version":3,"file":"4414.chunk.48cb2b319a2b429e29cc.js","mappings":"uHAGO,IAAKA,EA0BAC,E,iBA1BZ,SAAYD,GAKRA,EAAAA,EAAAA,MAAAA,KAAAA,QAKAA,EAAAA,EAAAA,OAAAA,KAAAA,SAKAA,EAAAA,EAAAA,SAAAA,KAAAA,WAKAA,EAAAA,EAAAA,KAAAA,KAAAA,MApBJ,EAAYA,IAAAA,EAAc,KA0B1B,SAAYC,GAKRA,EAAAA,EAAAA,GAAAA,GAAAA,KAKAA,EAAAA,EAAAA,GAAAA,GAAAA,KAKAA,EAAAA,EAAAA,GAAAA,GAAAA,IAfJ,EAAYA,IAAAA,EAAa,KCtBnB,MAAOC,GAEKA,EAAAA,WACd,CACIC,GAAI,gBACJC,QAAS,mBACTC,KAAM,YACNC,QACA,CACIC,QACA,CACI,CACIC,MAAO,OAEX,CACIA,MAAO,OAEX,CACIA,MAAO,OAEX,CACIA,MAAO,UAGfC,KACA,CACI,CACIC,OAAQ,UAGhBC,MACA,CACI,CACIR,GAAI,WACJC,QAAS,mBACTC,KAAM,gBACNC,QACA,CACIM,gBAAiB,EACjBC,cAAe,EACfC,aAAc,EACdC,WAAY,EACZC,UACA,CACIb,GAAI,iBACJC,QAAS,mBACTC,KAAM,aACNC,QACA,CACIW,QACA,CACIC,IAAK,QAETC,SACA,CACI,CACIhB,GAAI,WACJC,QAAS,mBACTC,KAAM,YACNC,QACA,CACIc,KAAM,eACNC,OACA,CACIH,IAAK,OACLI,OAAQ,MACRC,KAAM,OACNC,MAAO,QAEXP,QACA,CACIC,IAAK,MACLI,OAAQ,MACRC,KAAM,OACNC,MAAO,QAEXC,YACA,CACIC,SAAU,QAEdC,KAAM,MAGd,CACIxB,GAAI,YACJC,QAAS,mBACTC,KAAM,YACNC,QACA,CACIc,KAAM,uBACNK,YACA,CACIG,WAAY5B,EAAe6B,QAIvC,CACI1B,GAAI,cACJC,QAAS,mBACTC,KAAM,SACNC,QACA,CACIc,KAAM,kBAQlC,CACIjB,GAAI,cACJC,QAAS,mBACTC,KAAM,gBACNC,QACA,CACIM,gBAAiB,EACjBC,cAAe,EACfC,aAAc,EACdC,WAAY,EACZC,UACA,CACIZ,QAAS,mBACTD,GAAI,WACJE,KAAM,YACNC,QACA,CACIc,KAAM,gBAKtB,CACIjB,GAAI,cACJC,QAAS,mBACTC,KAAM,gBACNC,QACA,CACIM,gBAAiB,EACjBC,cAAe,EACfC,aAAc,EACdC,WAAY,EACZC,UACA,CACIb,GAAI,gBACJC,QAAS,mBACTC,KAAM,aACNC,QACA,CACIwB,YAAY,EACZX,SAAU,UASxBjB,EAAAA,cACd,CACI,CACIC,GAAI,gBACJC,QAAS,mBACTC,KAAM,eACN0B,iBAAkB,KAClBC,QACA,CACI,CACIC,WAAY,SACZC,OACA,CACI,CACI/B,GAAI,iBACJgC,UAAW,YAK3BC,aACA,CACIC,YACA,CACIC,EAAG,GACHC,EAAG,IAEPjC,QAAS,OAGjB,CACIH,GAAI,iBACJC,QAAS,mBACTC,KAAM,eACN0B,iBAAkB,KAClBC,QACA,CACI,CACIC,WAAY,SACZC,OACA,CACI,CACI/B,GAAI,kBACJgC,UAAW,YAK3BC,aACA,CACIC,YACA,CACIC,EAAG,IACHC,EAAG,KAEPjC,QAAS,OAGjB,CACIH,GAAI,kBACJC,QAAS,mBACTC,KAAM,eACN0B,iBAAkB,KAClBC,QAAS,GACTI,aACA,CACIC,YACA,CACIC,EAAG,IACHC,EAAG,IAEPjC,QAAS,QAKPJ,EAAAA,oBACd,CACI,CACIC,GAAI,gBACJC,QAAS,mBACTC,KAAM,eACN0B,iBAAkB,KAClBC,QACA,CACI,CACIC,WAAY,SACZC,OACA,CACI,CACI/B,GAAI,yBACJgC,UAAW,YAK3BC,aACA,CACIC,YACA,CACIC,EAAG,GACHC,EAAG,IAEPjC,QAAS,OAGjB,CACIH,GAAI,yBACJC,QAAS,oBACTC,KAAM,yBACN0B,iBAAkB,KAClBC,QACA,CACI,CACIC,WAAY,SACZC,OACA,CACI,CACI/B,GAAI,iBACJgC,UAAW,YAK3BC,aACA,CACIC,YACA,CACIC,EAAG,IACHC,EAAG,IAEPjC,QAAS,OAGjB,CACIH,GAAI,iBACJC,QAAS,mBACTC,KAAM,eACN0B,iBAAkB,KAClBC,QACA,CACI,CACIC,WAAY,SACZC,OACA,CACI,CACI/B,GAAI,mBACJgC,UAAW,YA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","sources":["webpack://ng-universal-demo/../layout/src/types/textStyling.types.ts","webpack://ng-universal-demo/./app/services/demoData/demoData.service.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutEditor/layoutEditor.component.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutEditor/layoutEditor.component.html","webpack://ng-universal-demo/../layout-editor/src/services/layoutDesignerDynamicModuleItemsProvider/layoutDesignerDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../layout-editor/src/services/defaultDynamicModuleTypesProvider/defaultDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../layout-editor/src/misc/providers.ts","webpack://ng-universal-demo/../layout-editor/src/misc/transforms/layoutDesignerComponentTransform.ts","webpack://ng-universal-demo/../layout-editor/src/misc/types.ts","webpack://ng-universal-demo/../layout-editor/src/misc/utils.ts","webpack://ng-universal-demo/../layout-editor/src/modules/dynamicLayoutEditor.module.ts","webpack://ng-universal-demo/../src/services/materialComponentsDynamicModuleItemsProvider/materialComponentsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/misc/extractors/extensionsExports.extractor.ts","webpack://ng-universal-demo/../layout/src/misc/providers.ts","webpack://ng-universal-demo/../layout/src/misc/utils.ts","webpack://ng-universal-demo/../layout/src/modules/dynamicLayout.module.ts","webpack://ng-universal-demo/../material-components/src/ lazy ^\\.\\/.*\\/type$ namespace object"],"sourcesContent":["/**\n * Available types of font weight\n */\nexport enum TextFontWeight\n{\n    /**\n     * Font weight light\n     */\n    Light = 200,\n\n    /**\n     * Font weight normal\n     */\n    Normal = 400,\n\n    /**\n     * Font weight semi-bold\n     */\n    SemiBold = 600,\n\n    /**\n     * Font weight bold\n     */\n    Bold = 700,\n}\n\n/**\n * Available types of font size units\n */\nexport enum StyleSizeUnit\n{\n    /**\n     * Style size unit is in pixels\n     */\n    px,\n\n    /**\n     * Style size unit is in points\n     */\n    pt,\n    \n    /**\n     * Style size unit is in em\n     */\n    em,\n}","import {ComponentStylingOptions, LayoutComponentMetadata, TextFontWeight} from '@anglr/dynamic/layout';\nimport {ButtonComponentOptions, GridPanelCellComponentOptions, GridPanelComponentOptions, StackPanelComponentOptions, StackPanelFlexExtensionOptions, TextBlockComponentOptions} from '@anglr/dynamic/basic-components';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\n/**\n * Class storing demo data\n */\nexport class DemoData\n{\n    public static demoLayout: LayoutComponentMetadata =\n    {\n        id: 'gridPanelTest',\n        package: 'basic-components',\n        name: 'gridPanel',\n        options: <GridPanelComponentOptions&ComponentStylingOptions>\n        {\n            columns:\n            [\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '2fr'\n                },\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '100px'\n                },\n            ],\n            rows:\n            [\n                {\n                    height: '300px'\n                },\n            ],\n            cells:\n            [\n                {\n                    id: 'celltest',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 2,\n                        gridColumnEnd: 3,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelTest',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions&ComponentStylingOptions>\n                            {\n                                padding:\n                                {\n                                    top: '20px'\n                                },\n                                children:\n                                [\n                                    {\n                                        id: 'textTest',\n                                        package: 'basic-components',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions&StackPanelFlexExtensionOptions>\n                                        {\n                                            text: 'toto je text',\n                                            margin:\n                                            {\n                                                top: '10px',\n                                                bottom: '6px',\n                                                left: '12px',\n                                                right: '14pt'\n                                            },\n                                            padding:\n                                            {\n                                                top: '8px',\n                                                bottom: '8px',\n                                                left: '12px',\n                                                right: '12px'\n                                            },\n                                            textStyling:\n                                            {\n                                                fontSize: '20px'\n                                            },\n                                            flex: '1'\n                                        }\n                                    },\n                                    {\n                                        id: 'text2Test',\n                                        package: 'basic-components',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions>\n                                        {\n                                            text: 'druhý riadok je toto',\n                                            textStyling:\n                                            {\n                                                fontWeight: TextFontWeight.Bold\n                                            }\n                                        }\n                                    },\n                                    {\n                                        id: 'button-test',\n                                        package: 'basic-components',\n                                        name: 'button',\n                                        options: <ButtonComponentOptions>\n                                        {\n                                            text: 'test btn',\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'anotherCell',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 3,\n                        gridColumnEnd: 4,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            package: 'basic-components',\n                            id: 'textJeTo',\n                            name: 'textBlock',\n                            options: <TextBlockComponentOptions>\n                            {\n                                text: 'nový text',\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'gridCellxxx',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 4,\n                        gridColumnEnd: 5,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelxxx',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions>\n                            {\n                                horizontal: true,\n                                children: []\n                            }\n                        }\n                    }\n                },\n            ]\n        }\n    };\n\n    public static relationsDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes2',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes2',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 40\n                },\n                options: null\n            }\n        },\n    ];\n\n    public static relationsStaticDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-sample-click',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-sample-click',\n            package: 'static-components',\n            name: 'relations-sample-click',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 80\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-result',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-result',\n            package: 'static-components',\n            name: 'relations-result',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 630,\n                    y: 60\n                },\n                options: null\n            }\n        }\n    ];\n\n    public static relationsStaticWithEditorDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-sample-click',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-sample-click',\n            package: 'static-components',\n            name: 'relations-sample-click',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 80\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-result',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-result',\n            package: 'static-components',\n            name: 'relations-result',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 630,\n                    y: 60\n                },\n                options: null\n            }\n        }\n    ];\n}","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LayoutComponentMetadata, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\nimport {ComponentsPaletteSAComponent} from '../componentsPalette/componentsPalette.component';\nimport {ComponentsTreeSAComponent} from '../componentsTree/componentsTree.component';\nimport {PropertiesEditorSAComponent} from '../propertiesEditor/propertiesEditor.component';\nimport {LAYOUT_DESIGNER_COMPONENT_TRANSFORM} from '../../misc/providers';\n\n/**\n * Component that represents layout editor with palette, tree and properties\n */\n@Component(\n{\n    selector: 'layout-editor',\n    templateUrl: 'layoutEditor.component.html',\n    // styleUrls: ['layoutEditor.component.css'],\n    styles: [HostDisplayBlockStyle],\n    providers:\n    [\n        LAYOUT_DESIGNER_COMPONENT_TRANSFORM,\n    ],\n    standalone: true,\n    imports:\n    [\n        ComponentsTreeSAComponent,\n        ComponentsPaletteSAComponent,\n        PropertiesEditorSAComponent,\n        LayoutComponentRendererSADirective,\n        MatTabsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutEditorSAComponent\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Metadata that are used for rendering\n     */\n    @Input()\n    public metadata: LayoutComponentMetadata|undefined|null = null;\n}","<div class=\"flex-row margin-top-big flex-1\">\n    <mat-tab-group>\n        <mat-tab label=\"Hierarchy\">\n            <components-tree></components-tree>\n        </mat-tab>\n\n        <mat-tab label=\"Palette\">\n            <components-palette></components-palette>\n        </mat-tab>\n    </mat-tab-group>\n      \n    <div class=\"flex-1\">\n        <ng-container [layoutComponentRenderer]=\"metadata\"></ng-container>\n    </div>\n\n    <properties-editor></properties-editor>\n</div>","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicModuleProvider, DynamicModule, DynamicItemSource} from '@anglr/dynamic';\n\n/**\n * Dynamic module items provider for built-in layout designer components\n */\n@Injectable()\nexport class LayoutDesignerDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with layout-editor\n        if(source.package != '@anglr/dynamic/layout-editor')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('LayoutDesignerDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            if(source.name == 'layout-designer')\n            {\n                return await import('../../components/layoutDesigner/type');\n            }\n        }\n        catch(e)\n        {\n            this._logger?.warn('LayoutDesignerDynamicModuleItemsProvider: item {@item} was not found, reason:' + e, {name: source.name, package: source.package});\n        }\n\n        this._logger?.debug('LayoutDesignerDynamicModuleItemsProvider: item {@item} was not found', {name: source.name, package: source.package});\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Default dynamic module types provider, for built-in types\n */\n@Injectable()\nexport class DefaultDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('DefaultDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'basic-components':\n                    return await import('@anglr/dynamic/basic-components/types');\n                case 'material-components':\n                    return await import('@anglr/dynamic/material-components/types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('DefaultDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider, FactoryProvider, inject, Optional, ValueProvider} from '@angular/core';\nimport {defaultExportExtractor, DynamicItemLoader, DynamicModuleDataExtractor} from '@anglr/dynamic';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS, LAYOUT_COMPONENT_TRANSFORM} from '@anglr/dynamic/layout';\nimport {LOGGER, Logger} from '@anglr/common';\n\nimport {DefaultDynamicModuleTypesProvider, LayoutDesignerDynamicModuleItemsProvider} from '../services';\nimport {LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES, LAYOUT_MODULE_TYPES_DATA_EXTRACTORS, LAYOUT_MODULE_TYPES_LOADER, LAYOUT_MODULE_TYPES_PROVIDERS} from './tokens';\nimport {layoutDesignerComponentTransform} from './transforms/layoutDesignerComponentTransform';\nimport {LayoutPropertyMetadata} from './types';\nimport {isLayoutModuleTypes} from './utils';\n\n/**\n * Provider for layout designer components providers\n */\nexport const LAYOUT_DESIGNER_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: LayoutDesignerDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for LAYOUT_COMPONENT_TRANSFORM, which allows transformation for layout designer component\n */\nexport const LAYOUT_DESIGNER_COMPONENT_TRANSFORM: ValueProvider =\n{\n    provide: LAYOUT_COMPONENT_TRANSFORM,\n    useValue: layoutDesignerComponentTransform\n};\n\n/**\n * Provider for default dynamic layout module types provider for all built-in types in dynamic\n */\nexport const DYNAMIC_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: DefaultDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for default layout module types extractor\n */\nexport const DEFAULT_LAYOUT_MODULE_TYPES_EXTRACTOR: FactoryProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_DATA_EXTRACTORS,\n    useFactory: (logger?: Logger) =>\n    {\n        return new DynamicModuleDataExtractor([\n                                                  defaultExportExtractor,\n                                              ],\n                                              logger);\n    },\n    deps: [[new Optional(), LOGGER]],\n    multi: true\n};\n\n/**\n * Provider for layout editor property metadata\n */\nexport const LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES_PROVIDER: ValueProvider =\n{\n    provide: LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES,\n    useValue:\n    [\n        LayoutPropertyMetadata\n    ]\n};\n\n/**\n * Provider for layout module types loader\n */\nexport const LAYOUT_MODULE_TYPES_LOADER_PROVIDER: FactoryProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_LOADER,\n    useFactory: () => new DynamicItemLoader(inject(LAYOUT_MODULE_TYPES_PROVIDERS),\n                                            inject(LAYOUT_MODULE_TYPES_DATA_EXTRACTORS),\n                                            isLayoutModuleTypes,\n                                            inject(LOGGER, {optional: true}) ?? undefined)\n};","import {Injector} from '@angular/core';\nimport {LayoutComponentMetadata, LayoutComponentTransform} from '@anglr/dynamic/layout';\n\nimport {LayoutDesignerComponentOptions} from '../../components/layoutDesigner/layoutDesigner.options';\nimport {LAYOUT_DESIGNER_COMPONENT_ID_SUFFIX} from '../constants';\n\n/**\n * Transformation function for layout designer component metadata\n * @param metadata - Metadata to be transformed\n * @param injector - Injector used for obtaining dependencies\n */\nexport const layoutDesignerComponentTransform: LayoutComponentTransform = function(metadata: LayoutComponentMetadata, injector: Injector): LayoutComponentMetadata\n{\n    return {\n        id: `${metadata.id}${LAYOUT_DESIGNER_COMPONENT_ID_SUFFIX}`,\n        package: '@anglr/dynamic/layout-editor',\n        name: 'layout-designer',\n        options: <LayoutDesignerComponentOptions>\n        {\n            typeMetadata: metadata\n        }\n    };\n};","\nimport {LayoutPropertyDescriptionData, LayoutPropertyNameData, LayoutPropertyValuesData} from '../decorators';\n\n/**\n * Default built-in property types\n */\nexport type DefaultKnownPropertyTypes = 'textarea'|'inputString'|'inputNumber'|'inputSize'|'inputBoolean'|'selectValue'|'selectValues';\n\n/**\n * Minimal layout editor property metadata\n */\nexport type LayoutEditorPropertyMetadata<TValues = any> = LayoutPropertyDescriptionData&LayoutPropertyNameData&LayoutPropertyValuesData<TValues>;\n\n/**\n * Symbol defining property storing layout properties metadata\n */\nexport const LayoutPropertyMetadata = Symbol('LayoutPropertyMetadata');\n","import {Provider} from '@angular/core';\nimport {DynamicItemLoaderValidatorFn} from '@anglr/dynamic';\nimport {provideLayout} from '@anglr/dynamic/layout';\nimport {isBlank} from '@jscrpt/common';\n\nimport {LayoutModuleTypes} from '../components';\nimport {DEFAULT_LAYOUT_MODULE_TYPES_EXTRACTOR, DYNAMIC_LAYOUT_MODULE_TYPES_PROVIDER, LAYOUT_DESIGNER_COMPONENTS_PROVIDER, LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES_PROVIDER, LAYOUT_MODULE_TYPES_LOADER_PROVIDER} from './providers';\nimport {LayoutEditorMetadataExtractor, LayoutEditorMetadataManager, LayoutEditorPropertyMetadataExtractor} from '../services';\n\n/**\n * Default providers for layout editor subpackage, including providers for layout subpackage\n */\nexport function provideLayoutEditor(): Provider[]\n{\n    return [\n        ...provideLayout(),\n        LAYOUT_DESIGNER_COMPONENTS_PROVIDER,\n        DYNAMIC_LAYOUT_MODULE_TYPES_PROVIDER,\n        DEFAULT_LAYOUT_MODULE_TYPES_EXTRACTOR,\n        LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES_PROVIDER,\n        LAYOUT_MODULE_TYPES_LOADER_PROVIDER,\n        LayoutEditorMetadataExtractor,\n        LayoutEditorPropertyMetadataExtractor,\n        LayoutEditorMetadataManager,\n    ];\n}\n\n/**\n * Checks whether data is layout module types\n * @param data - Data to be checked\n */\nexport const isLayoutModuleTypes: DynamicItemLoaderValidatorFn<LayoutModuleTypes> = function(data): data is LayoutModuleTypes\n{\n    if(isBlank(data?.data) || !Array.isArray(data.data))\n    {\n        return false;\n    }\n\n    return true;\n};","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {DynamicLayoutModule} from '@anglr/dynamic/layout';\n\nimport {LayoutEditorSAComponent} from '../components';\nimport {provideLayoutEditor} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic layout editor rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        LayoutEditorSAComponent,\n    ],\n    exports:\n    [\n        LayoutEditorSAComponent,\n        DynamicLayoutModule,\n    ],\n})\nexport class DynamicLayoutEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicLayoutEditorModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicLayoutEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutEditorModule,\n            providers:\n            [\n                provideLayoutEditor(),\n            ]\n        };\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in material-components\n */\n@Injectable()\nexport class MaterialComponentsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with material-components\n        if(source.package != 'material-components' && source.package != '@anglr/dynamic/material-components')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('MaterialComponentsDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            const dynamicItemModule = await import(`@anglr/dynamic/material-components/${source.name}/type`);\n\n            return dynamicItemModule;\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialComponentsDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n        }\n\n        return null;\n    }\n}","import {isJsObject} from '@jscrpt/common';\n\nimport {DynamicItemExtensions, DynamicItemExtensionType, DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from '../../services';\n\n/**\n * Module with extensions named exports\n */\ninterface ɵDynamicModuleNamedExtensions extends DynamicModule\n{\n    /**\n     * Extensions applied directly to self or object storing extensions and child extensions\n     */\n    extensions?: DynamicItemExtensionType[]|DynamicItemExtensions;\n\n    /**\n     * Extensions applied to children\n     */\n    childExtensions?: DynamicItemExtensionType[];\n}\n\n/**\n * Extracts dynamic item extensions which are exported as named exports of module\n */\nexport const extensionsExportsExtractor: DynamicModuleDataExtractorFn<DynamicItemExtensions> = (module, logger) =>\n{\n    const localModule = module as ɵDynamicModuleNamedExtensions;\n    const extensionsObject = localModule.extensions as DynamicItemExtensions;\n\n    logger?.debug('extensionsExportsExtractor: trying to extract dynamic item extensions');\n\n    //extensions stored as object\n    if(extensionsObject && isJsObject(extensionsObject) && (extensionsObject.extensions || extensionsObject.childExtensions))\n    {\n        return {\n            extensions: extensionsObject.extensions,\n            childExtensions: extensionsObject.childExtensions,\n        };\n    }\n\n    if(localModule.childExtensions || localModule.extensions)\n    {\n        return {\n            extensions: localModule.extensions as DynamicItemExtensionType[],\n            childExtensions: localModule.childExtensions,\n        };\n    }\n\n    return null;\n};\n","import {ClassProvider, FactoryProvider, inject, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {BasicComponentsDynamicModuleItemsProvider, defaultExportExtractor, DynamicItemLoader, DynamicModuleDataExtractor, extensionsExportsExtractor, MaterialComponentsDynamicModuleItemsProvider} from '@anglr/dynamic';\n\nimport {LAYOUT_COMPONENTS_LOADER, LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS, LAYOUT_COMPONENTS_MODULE_PROVIDERS} from './tokens';\nimport {isLayoutComponentDef} from './utils';\n\n/**\n * Provider for basic components package layout components provider\n */\nexport const BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: BasicComponentsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material components package layout components provider\n */\nexport const MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialComponentsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for default layout components extractor\n */\nexport const DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR: FactoryProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS,\n    useFactory: (logger?: Logger) =>\n    {\n        return new DynamicModuleDataExtractor([\n                                                  defaultExportExtractor,\n                                                  extensionsExportsExtractor,\n                                              ],\n                                              logger);\n    },\n    deps: [[new Optional(), LOGGER]],\n    multi: true\n};\n\n/**\n * Provider for layout components loader\n */\nexport const LAYOUT_COMPONENTS_LOADER_PROVIDER: FactoryProvider =\n{\n    provide: LAYOUT_COMPONENTS_LOADER,\n    useFactory: () =>\n    {\n        return new DynamicItemLoader(inject(LAYOUT_COMPONENTS_MODULE_PROVIDERS),\n                                     inject(LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS),\n                                     isLayoutComponentDef,\n                                     inject(LOGGER, {optional: true}) ?? undefined);\n    }\n};","import {Provider} from '@angular/core';\nimport {DynamicItemLoaderValidatorFn} from '@anglr/dynamic';\nimport {isBlank, isPresent, isType} from '@jscrpt/common';\n\nimport {LayoutComponentDef} from './types';\nimport {BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER, DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR, LAYOUT_COMPONENTS_LOADER_PROVIDER, MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER} from './providers';\n\n/**\n * Checks whether data is layout component def\n * @param data - Data to be checked\n */\nexport const isLayoutComponentDef: DynamicItemLoaderValidatorFn<LayoutComponentDef> = function(data): data is LayoutComponentDef\n{\n    //type is required and must be type\n    if(isBlank(data?.data) || !isType(data.data))\n    {\n        return false;\n    }\n\n    if(isPresent(data?.childExtensions) && (!Array.isArray(data.childExtensions) || data.childExtensions.some(itm => !isType(itm))))\n    {\n        return false;\n    }\n\n    if(isPresent(data?.extensions) && (!Array.isArray(data.extensions) || data.extensions.some(itm => !isType(itm))))\n    {\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Default providers for layout subpackage\n */\nexport function provideLayout(): Provider[]\n{\n    return [\n        LAYOUT_COMPONENTS_LOADER_PROVIDER,\n        BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER,\n        MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER,\n        DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR,\n    ];\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {LayoutComponentRendererSADirective} from '../directives';\nimport {provideLayout} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic layout rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    exports:\n    [\n        LayoutComponentRendererSADirective,\n    ]\n})\nexport class DynamicLayoutModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicLayoutModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicLayoutModule>\n    {\n        return {\n            ngModule: DynamicLayoutModule,\n            providers:\n            [\n                provideLayout(),\n            ]\n        };\n    }\n}","var map = {\n\t\"./checkbox/type\": [\n\t\t93833,\n\t\t294,\n\t\t3833\n\t],\n\t\"./datepicker/type\": [\n\t\t23489,\n\t\t3167,\n\t\t4262,\n\t\t9101,\n\t\t6038,\n\t\t3489\n\t],\n\t\"./numberField/type\": [\n\t\t62459,\n\t\t3167,\n\t\t4262,\n\t\t2459\n\t],\n\t\"./period/type\": [\n\t\t94391,\n\t\t3167,\n\t\t4262,\n\t\t4391\n\t],\n\t\"./radio/type\": [\n\t\t7570,\n\t\t5613,\n\t\t7570\n\t],\n\t\"./select/type\": [\n\t\t79838,\n\t\t3167,\n\t\t5887,\n\t\t9838\n\t],\n\t\"./textField/type\": [\n\t\t28945,\n\t\t3167,\n\t\t4262,\n\t\t8945\n\t],\n\t\"./textarea/type\": [\n\t\t13702,\n\t\t3167,\n\t\t4262,\n\t\t3702\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 13680;\nmodule.exports = webpackAsyncContext;"],"names":["TextFontWeight","StyleSizeUnit","DemoData","id","package","name","options","columns","width","rows","height","cells","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","component","padding","top","children","text","margin","bottom","left","right","textStyling","fontSize","flex","fontWeight","Bold","horizontal","relationsOptions","outputs","outputName","inputs","inputName","nodeMetadata","coordinates","x","y","LayoutEditorSAComponent","constructor","metadata","selectors","standalone","features","LAYOUT_DESIGNER_COMPONENT_TRANSFORM","i0","decls","vars","consts","template","ComponentsTreeSAComponent","ComponentsPaletteSAComponent","PropertiesEditorSAComponent","LayoutComponentRendererSADirective","MatTabsModule","i1","styles","changeDetection","LayoutDesignerDynamicModuleItemsProvider","_logger","tryToGet","source","debug","e","warn","LOGGER","factory","DefaultDynamicModuleTypesProvider","moduleName","LAYOUT_DESIGNER_COMPONENTS_PROVIDER","provide","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","LAYOUT_COMPONENT_TRANSFORM","useValue","injector","typeMetadata","DYNAMIC_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","DEFAULT_LAYOUT_MODULE_TYPES_EXTRACTOR","LAYOUT_MODULE_TYPES_DATA_EXTRACTORS","useFactory","logger","DynamicModuleDataExtractor","defaultExportExtractor","deps","Optional","LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES_PROVIDER","LAYOUT_EDITOR_PROPERTY_METADATA_PROPERTIES","LayoutPropertyMetadata","LAYOUT_MODULE_TYPES_LOADER_PROVIDER","LAYOUT_MODULE_TYPES_LOADER","DynamicItemLoader","inject","isLayoutModuleTypes","optional","undefined","Symbol","provideLayoutEditor","provideLayout","LayoutEditorMetadataExtractor","LayoutEditorPropertyMetadataExtractor","LayoutEditorMetadataManager","data","isBlank","Array","isArray","DynamicLayoutEditorModule","ngModule","providers","DynamicLayoutModule","MaterialComponentsDynamicModuleItemsProvider","extensionsExportsExtractor","module","localModule","extensionsObject","extensions","isJsObject","childExtensions","BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER","BasicComponentsDynamicModuleItemsProvider","MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER","DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR","LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS","LAYOUT_COMPONENTS_LOADER_PROVIDER","LAYOUT_COMPONENTS_LOADER","isLayoutComponentDef","isType","isPresent","some","itm","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","all","slice","keys","Object","exports"],"sourceRoot":""}