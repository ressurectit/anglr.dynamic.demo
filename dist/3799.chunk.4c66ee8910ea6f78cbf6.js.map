{"version":3,"file":"3799.chunk.4c66ee8910ea6f78cbf6.js","mappings":"iMAUM,MAAOA,EAgBTC,YAAYC,GARL,KAAAC,YAA2B,KAK3B,KAAAC,iBAA+DC,EAMlEC,EAAAA,GAAAA,KAAqBC,KAArBD,CAA2BJ,EAC9B,GAZDM,EAAAA,EAAAA,IAAAA,EAHCC,EAAAA,EAAAA,GAAmB,iBACnBC,EAAAA,EAAAA,GAA0B,sBAC1BC,EAAAA,EAAAA,GAA8C,gBAC/C,gE,sFCTG,MAAMC,EAAuE,IAAIC,EAAAA,EAAyC,8BAKpHC,EAAgF,IAAID,EAAAA,EAA2C,qCAK/HE,EAAyF,IAAIF,EAAAA,EAA6C,4CAK1IG,EAA8E,IAAIH,EAAAA,EAAwC,sCAK1HI,EAAkF,IAAIJ,EAAAA,EAAsD,2B,+KCnBnJ,MAAOK,UAA2BlB,EAAAA,EAapCC,YAAYC,GAERiB,MAAMjB,GALH,KAAAkB,QAAiC,KAOpCd,EAAAA,GAAAA,KAAqBC,KAArBD,CAA2BJ,EAC9B,GARDM,EAAAA,EAAAA,IAAAA,EAHCC,EAAAA,EAAAA,GAAmB,YACnBC,EAAAA,EAAAA,GAA0B,kBAC1BC,EAAAA,EAAAA,GAA8C,gBAC/C,6DCXE,MAAOU,EAuCTpB,cAhCO,KAAAqB,SACP,CACIC,KAAM,QACNC,YAAa,iBACbC,gBACA,CACIC,mBACA,CACI,CACIC,UAAWC,EAAAA,EACXC,mBACA,CACIC,EAAAA,IAGR,CACIH,UAAWT,EACXW,mBACA,EACIE,EAAAA,EAAAA,GAAgD,CAAC,UAAW,oBAK5EC,eACA,CACIZ,QAAS,SAEba,MAAO,wBAMPC,OAAOC,OAAO5B,KACjB,E","sources":["webpack://ng-universal-demo/../form/src/metadata/formComponentBase.model.ts","webpack://ng-universal-demo/../layout/src/misc/tokens.ts","webpack://ng-universal-demo/../material-components/src/radio/metadata/radio.model.ts","webpack://ng-universal-demo/../material-components/src/radio/metadata/radio.layoutMetadata.ts"],"sourcesContent":["import {Type} from '@angular/core';\nimport {FormControl, FormGroup, FormArray} from '@angular/forms';\nimport {LayoutPropertyName, LayoutPropertyDescription, LayoutPropertyType, DefaultKnownPropertyTypes} from '@anglr/dynamic/layout-editor';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {FormComponentOptions} from '../misc/formComponentBase.options';\n\n/**\n * Base form component model for properties editor\n */\nexport class FormComponentBaseModel implements FormComponentOptions\n{\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Control name')\n    @LayoutPropertyDescription('Form control name')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public controlName: string|null = null;\n\n    /**\n     * @inheritdoc\n     */\n    public controlType: Type<FormControl|FormGroup|FormArray>|undefined = undefined;\n\n    //######################### constructor #########################\n    constructor(value: FormComponentOptions|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","import {InjectionToken} from '@angular/core';\nimport {DynamicItemExtensionType, DynamicItemLoader, DynamicModuleDataExtractor, DynamicModuleProvider} from '@anglr/dynamic';\n\nimport {LayoutComponentTransform} from '../interfaces';\nimport {LayoutComponentDef} from './types';\n\n/**\n * Injection token for layout component metadata transformation function\n */\nexport const LAYOUT_COMPONENT_TRANSFORM: InjectionToken<LayoutComponentTransform> = new InjectionToken<LayoutComponentTransform>('LAYOUT_COMPONENT_TRANSFORM');\n\n/**\n * Injection token for layout component child extension types\n */\nexport const LAYOUT_COMPONENT_CHILD_EXTENSIONS: InjectionToken<DynamicItemExtensionType[]> = new InjectionToken<DynamicItemExtensionType[]>('LAYOUT_COMPONENT_CHILD_EXTENSIONS');\n\n/**\n * Injection token for layout components module data extractors\n */\nexport const LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS');\n\n/**\n * Injection token for layout components module providers\n */\nexport const LAYOUT_COMPONENTS_MODULE_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('LAYOUT_COMPONENTS_MODULE_PROVIDERS');\n\n/**\n * Injection token for layout components loader\n */\nexport const LAYOUT_COMPONENTS_LOADER: InjectionToken<DynamicItemLoader<LayoutComponentDef>> = new InjectionToken<DynamicItemLoader<LayoutComponentDef>>('LAYOUT_COMPONENTS_LOADER');\n","import {LayoutPropertyName, LayoutPropertyDescription, LayoutPropertyType, DefaultKnownPropertyTypes} from '@anglr/dynamic/layout-editor';\nimport {FormComponentBaseModel} from '@anglr/dynamic/form';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {MaterialRadioComponentOptions} from '../radio.options';\n\n\n/**\n * Material radio model for properties editor\n */\nexport class MaterialRadioModel extends FormComponentBaseModel implements MaterialRadioComponentOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    @LayoutPropertyName('Options')\n    @LayoutPropertyDescription('Radio options')\n    @LayoutPropertyType<DefaultKnownPropertyTypes>('inputString')\n    public options: string|undefined|null = null;\n    \n    //######################### constructor #########################\n    constructor(value: MaterialRadioComponentOptions|undefined|null)\n    {\n        super(value);\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","import {ComponentStylingModel, ComponentStylingPropertiesControlComponent, genericPropertiesControlFor, LayoutEditorMetadataDescriptor, LayoutEditorMetadataInfo} from '@anglr/dynamic/layout-editor';\n\nimport {MaterialRadioComponentOptions} from '../radio.options';\nimport {MaterialRadioModel} from './radio.model';\n\n\n/**\n * Material text field layout metadata\n */\nexport class MaterialRadioLayoutEditorMetadata implements LayoutEditorMetadataDescriptor<MaterialRadioComponentOptions>\n{\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: LayoutEditorMetadataInfo<MaterialRadioComponentOptions> =\n    {\n        name: 'Radio',\n        description: 'Material radio',\n        optionsMetadata:\n        {\n            propertiesMetadata:\n            [\n                {\n                    modelType: ComponentStylingModel,\n                    propertiesControls: \n                    [\n                        ComponentStylingPropertiesControlComponent,\n                    ],\n                },\n                {\n                    modelType: MaterialRadioModel,\n                    propertiesControls: \n                    [\n                        genericPropertiesControlFor<MaterialRadioModel>(['options', 'controlName']),\n                    ],\n                },\n            ],\n        },\n        defaultOptions:\n        {\n            options: 'Radio'\n        },\n        group: 'Material form fields'\n    };\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["FormComponentBaseModel","constructor","value","controlName","controlType","undefined","mapValuesToThis","this","__decorate","LayoutPropertyName","LayoutPropertyDescription","LayoutPropertyType","LAYOUT_COMPONENT_TRANSFORM","InjectionToken","LAYOUT_COMPONENT_CHILD_EXTENSIONS","LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS","LAYOUT_COMPONENTS_MODULE_PROVIDERS","LAYOUT_COMPONENTS_LOADER","MaterialRadioModel","super","options","MaterialRadioLayoutEditorMetadata","metaInfo","name","description","optionsMetadata","propertiesMetadata","modelType","ComponentStylingModel","propertiesControls","ComponentStylingPropertiesControlComponent","genericPropertiesControlFor","defaultOptions","group","Object","freeze"],"sourceRoot":""}