{"version":3,"file":"6371.chunk.db9a883d98dbff19b9b3.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.html","webpack://ng-universal-demo/../../../../src/cdk/clipboard/pending-copy.ts","webpack://ng-universal-demo/../../../../src/cdk/clipboard/clipboard.ts","webpack://ng-universal-demo/../../../../material/src/directives/debugDataCopyClick/debugDataCopyClick.directive.ts","webpack://ng-universal-demo/../node_modules/@anglr/common/src/modules/debugData/components/debugData/debugData.component.html","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/services/complexStaticRegister/complexStaticRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.module.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ExistingProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadataManager, provideLayoutEditor} from '@anglr/dynamic/layout-editor';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoStorage} from '../../../services/metadataStorage';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    providers:\n    [\n        DemoStorage,\n        <ExistingProvider>\n        {\n            provide: MetadataStorage,\n            useExisting: DemoStorage\n        },\n        provideLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: LayoutEditorMetadataManager,\n                protected _store: StoreDataService<LayoutRelationsMetadata>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutRelationsMetadata\n    {\n        return {\n            layout: this._manager.getMetadata()\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsComplex/layout\" (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nexport class PendingCopy {\n  private _textarea: HTMLTextAreaElement | undefined;\n\n  constructor(text: string, private readonly _document: Document) {\n    const textarea = (this._textarea = this._document.createElement('textarea'));\n    const styles = textarea.style;\n\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    this._document.body.appendChild(textarea);\n  }\n\n  /** Finishes copying the text. */\n  copy(): boolean {\n    const textarea = this._textarea;\n    let successful = false;\n\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement as HTMLOrSVGElement | null;\n\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n\n    return successful;\n  }\n\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {PendingCopy} from './pending-copy';\n\n/**\n * A service for copying text to the clipboard.\n */\n@Injectable({providedIn: 'root'})\nexport class Clipboard {\n  private readonly _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text: string): boolean {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n\n    return successful;\n  }\n\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text: string): PendingCopy {\n    return new PendingCopy(text, this._document);\n  }\n}\n","import {Directive, HostBinding, HostListener, Input} from '@angular/core';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\n/**\n * Directive that allows to copy data to clipboard on click on debug-data\n */\n@Directive(\n{\n    selector: 'debug-data[copyClick]'\n})\nexport class DebugDataCopyClickDirective\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data to be copied as serialized json\n     */\n    @Input('copyClick')\n    public data: any;\n\n    //######################### public properties - host #########################\n\n    /**\n     * Adds css class clickable to this element\n     * \n     * @internal\n     */\n    @HostBinding('class.clickable')\n    public clickable: boolean = true;\n\n    //######################### constructor #########################\n    constructor(protected _clipboard: Clipboard)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Copies data to clipboard on click\n     * \n     * @internal\n     */\n    @HostListener('click')\n    public copyData(): void\n    {\n        this._clipboard.copy(JSON.stringify(this.data, null, 4));\n    }\n}",null,"import {Component, ChangeDetectionStrategy, OnDestroy, OnInit, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DebugDataEnabledService} from '../../services/debugDataEnabled/debugDataEnabled.service';\n\n/**\n * Name of css class for enabled debug data\n */\nconst ENABLED = 'enabled';\n\n/**\n * Component used for displaying debug data\n */\n@Component(\n{\n    selector: 'debug-data',\n    templateUrl: 'debugData.component.html',\n    styleUrls: ['debugData.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DebugDataComponent implements OnDestroy, OnInit\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscription for changes of debug data enabled\n     */\n    protected _debugDataEnabledChangeSubscription: Subscription;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is debug data enabled\n     *\n     * @internal\n     */\n    public enabled: boolean = false;\n\n    //######################### constructor #########################\n    constructor(protected _debugDataEnabledSvc: DebugDataEnabledService,\n                protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.enabled = this._debugDataEnabledSvc.enabled;\n        this._setEnabledCssClass();\n\n        this._debugDataEnabledChangeSubscription = this._debugDataEnabledSvc.enabledChange.subscribe(() =>\n        {\n            this.enabled = this._debugDataEnabledSvc.enabled;\n            this._setEnabledCssClass();\n\n            this._changeDetector.detectChanges();\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._debugDataEnabledChangeSubscription?.unsubscribe();\n        this._debugDataEnabledChangeSubscription = null;\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Sets enabled css class according enabled state\n     */\n    private _setEnabledCssClass(): void\n    {\n        if(this.enabled)\n        {\n            this._element.nativeElement.classList.add(ENABLED);\n        }\n        else\n        {\n            this._element.nativeElement.classList.remove(ENABLED);\n        }\n    }\n}","<ng-template [ngIf]=\"enabled\">\r\n    <ng-content></ng-content>\r\n</ng-template>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static input relations metadata loader\n */\nexport const StaticInputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticInput.relationsMetadata')).StaticInputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {DynamicOutput, RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticInputRelationsMetadataLoader} from './staticInput.metadata';\n\n/**\n * Static input component\n */\n@Component(\n{\n    selector: 'static-input',\n    templateUrl: 'staticInput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticInputRelationsMetadataLoader)\nexport class StaticInputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-input';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Defines form control for string value\n     */\n    protected stringForm: FormControl<string> = new FormControl<string>('');\n\n    /**\n     * Defines form control for boolean value\n     */\n    protected booleanForm: FormControl<boolean> = new FormControl<boolean>(false);\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * String output\n     */\n    @DynamicOutput()\n    public stringOutput: string;\n\n    /**\n     * Boolean output\n     */\n    @DynamicOutput()\n    public booleanOutput: boolean;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n        this.stringForm.valueChanges.subscribe(value => this.stringOutput = value);\n        this.booleanForm.valueChanges.subscribe(value => this.booleanOutput = value);\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticInputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticInputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div>INPUT:</div>\n<div class=\"flex-column\">\n    <input type=\"text\" [formControl]=\"stringForm\">\n    <input type=\"checkbox\" [formControl]=\"booleanForm\">\n</div>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static output relations metadata loader\n */\nexport const StaticOutputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticOutput.relationsMetadata')).StaticOutputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, OnInit, OnDestroy} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticOutputRelationsMetadataLoader} from './staticOutput.metadata';\n\n/**\n * Static output component\n */\n@Component(\n{\n    selector: 'static-output',\n    templateUrl: 'staticOutput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticOutputRelationsMetadataLoader)\nexport class StaticOutputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-output';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Boolean input\n     */\n    @Input()\n    public booleanInput: boolean;\n\n    /**\n     * String input\n     */\n    @Input()\n    public stringInput: string;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticOutputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticOutputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticOutputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticOutputSAComponent.relationsId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/layout', _available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/relations', _available.value]\">relations</a>\r\n\r\n    <ng-select [formControl]=\"_available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n\r\n    <debug-data [copyClick]=\"selectedMetadata\"><div class=\"margin-horizontal-small\">{{_available.value}}</div></debug-data>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <static-input class=\"margin-right-extra-small\"></static-input>\r\n\r\n    <div class=\"flex-1 overflow-vertical-scroll thin-scrollbar\" style=\"border: 1px dotted #666;\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n\r\n    <static-output style=\"width: 200px;\"></static-output>\r\n</div>","<div>OUTPUT:</div>\n<div>\n    <div>string: {{stringInput}}</div>\n    <div>boolean: {{booleanInput}}</div>\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, provideLayout} from '@anglr/dynamic/layout';\nimport {provideRelations, RelationsManager} from '@anglr/dynamic/relations';\nimport {provideCssLayout} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayout, provideTinyMceRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayout, provideHandlebarsRelations} from '@anglr/dynamic/handlebars-components';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        provideLayout(),\n        provideRelations(),\n        provideCssLayout(),\n        provideTinyMceLayout(),\n        provideTinyMceRelations(),\n        provideHandlebarsLayout(),\n        provideHandlebarsRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected selectedMetadata: LayoutRelationsMetadata|null = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _router: Router,\n                private _relationsManager: RelationsManager,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                const meta = this.selectedMetadata = this._store.getData(id);\n                this._metadata = meta?.layout;\n                this._relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this.selectedMetadata = null;\n                this._relationsManager.setRelations([]);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/relationsComplex/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {StaticInputSAComponent} from '../../components/staticInput/staticInput.component';\nimport {StaticOutputSAComponent} from '../../components/staticOutput/staticOutput.component';\n\n/**\n * Static components register for relations complex sample\n */\n@Injectable()\nexport class ComplexStaticRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[StaticInputSAComponent.relationsId] = StaticInputSAComponent;\n        result[StaticOutputSAComponent.relationsId] = StaticOutputSAComponent;\n\n        return result;\n    }\n}","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager, provideLayoutRelationsEditorWithStatic} from '@anglr/dynamic/layout-relations';\nimport {provideTinyMceLayoutRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {provideCssLayoutRelationsEditor} from '@anglr/dynamic/css-components';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {ComplexStaticRegister} from '../misc';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    providers:\n    [\n        // DemoStorage,\n        // <ExistingProvider>\n        // {\n        //     provide: MetadataStorage,\n        //     useExisting: DemoStorage\n        // },\n        provideLayoutRelationsEditorWithStatic(ComplexStaticRegister),\n        provideHandlebarsLayoutRelationsEditor(),\n        provideTinyMceLayoutRelationsEditor(),\n        provideCssLayoutRelationsEditor(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,\n                protected _store: StoreDataService<LayoutRelationsMetadata>,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutRelationsMetadata\n    {\n        return {\n            relations: this._manager.getMetadata()\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexRelations;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsComplex/relations\" (metadataChange)=\"setMetadata($event)\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    LayoutComponent,\n    RelationsComponent,\n    PreviewComponent,\n];","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DebugDataCopyClickModule} from '@anglr/common/material';\nimport {NgSelectModule} from '@anglr/select';\nimport {GoBackModule} from '@anglr/common';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\n\nimport {components} from './relationsComplex.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {StaticInputSAComponent, StaticOutputSAComponent} from './misc';\n\n/**\n * Module for relations complex sample with editor, static components and layout components samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackModule,\n        DynamicLayoutRelationsEditorModule,\n        DebugDataCopyClickModule,\n        LoadSaveNewSAComponent,\n        StaticInputSAComponent,\n        StaticOutputSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_COMPLEX_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsComplexModule\n{\n}"],"names":["LayoutComponent","constructor","_manager","_store","_metadata","emptyMetadata","id","generateId","displayName","package","name","options","children","_getMetadata","layout","this","getMetadata","_loadDemo","DemoData","i0","selectors","features","DemoStorage","provide","MetadataStorage","useExisting","provideLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","LayoutEditorMetadataManager","StoreDataService","PendingCopy","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","DOCUMENT","DebugDataCopyClickDirective","_clipboard","clickable","copyData","JSON","stringify","data","i1","ENABLED","DebugDataComponent","_debugDataEnabledSvc","_changeDetector","_element","enabled","ngOnInit","_setEnabledCssClass","_debugDataEnabledChangeSubscription","enabledChange","subscribe","detectChanges","ngOnDestroy","unsubscribe","nativeElement","classList","add","i2","StaticInputRelationsMetadataLoader","StaticInputRelationsEditorMetadata","StaticInputSAComponent","_relationsProcessor","_componentManager","stringForm","FormControl","booleanForm","valueChanges","stringOutput","booleanOutput","relationsId","registerComponent","StaticInputSAComponent_1","initialized","updateRelations","destroyComponent","unregisterComponent","invalidateVisuals","standalone","ReactiveFormsModule","encapsulation","changeDetection","DynamicOutput","RelationsEditorMetadata","ChangeDetectorRef","RelationsProcessor","RelationsComponentManager","StaticOutputRelationsMetadataLoader","StaticOutputRelationsEditorMetadata","StaticOutputSAComponent","StaticOutputSAComponent_1","val_r1","inputs","booleanInput","stringInput","PreviewComponent","_router","_relationsManager","_route","_available","selectedMetadata","_availableNames","getStored","params","setValue","meta","getData","setRelations","relations","val","navigate","skipLocationChange","replaceUrl","provideLayout","provideRelations","provideCssLayout","provideTinyMceLayout","provideTinyMceRelations","provideHandlebarsLayout","provideHandlebarsRelations","Router","RelationsManager","ActivatedRoute","ComplexStaticRegister","Register","getDefinedTypes","result","t","factory","RelationsComponent","_layoutManager","setMetadata","metadata","setLayout","provideLayoutRelationsEditorWithStatic","provideHandlebarsLayoutRelationsEditor","provideTinyMceLayoutRelationsEditor","provideCssLayoutRelationsEditor","RelationsNodeManager","LayoutManager","components","RelationsComplexModule","createStoreDataServiceFactory","imports","CommonModule","RouterModule","NgSelectModule","GoBackModule","DynamicLayoutRelationsEditorModule","DebugDataCopyClickModule","LoadSaveNewSAComponent","ModuleRoutes"],"sourceRoot":""}