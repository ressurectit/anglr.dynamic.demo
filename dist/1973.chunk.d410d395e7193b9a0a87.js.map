{"version":3,"file":"1973.chunk.d410d395e7193b9a0a87.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+layoutEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+layoutEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+layoutEditor/layoutEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+layoutEditor/layoutEditor.module.ts","webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../src/modules/packageManager/components/packageManager/packageManager.component.html","webpack://ng-universal-demo/../src/modules/packageManager/components/packageManager/packageManager.component.ts","webpack://ng-universal-demo/../src/modules/packageManager/modules/packageManager.module.ts","webpack://ng-universal-demo/../src/services/packageManager/packageManager.service.ts","webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object"],"sourcesContent":["import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {MetadataHistoryManager} from '@anglr/dynamic';\nimport {LAYOUT_HISTORY_MANAGER} from '@anglr/dynamic/layout-editor';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'editor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\n@ComponentRoute({path: 'editor/:id'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(protected store: StoreDataService,\n        \n                @Inject(LAYOUT_HISTORY_MANAGER) protected history: MetadataHistoryManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: LayoutComponentMetadata): LayoutComponentMetadata\n    {\n        return metadata;\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <load-save-new [store]=\"store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/layout/editor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","import {EditorComponent} from './editor/editor.component';\n\nexport const components =\n[\n    EditorComponent,\n];","import {ClassProvider, FactoryProvider, NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicLayoutEditorModule} from '@anglr/dynamic/layout-editor';\nimport {provideBasicLayoutEditor} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayoutEditor} from '@anglr/dynamic/material-components';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideFormLayoutEditor} from '@anglr/dynamic/form';\n\nimport {components} from './layoutEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DemoLayoutPackageManager} from '../../services/demoLayoutPackageManager/demoLayoutPackageManager.service';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for layout editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        DynamicLayoutEditorModule.withProviders(),\n        LoadSaveNewSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutComponentMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('LAYOUT_DATA'),\n        provideBasicLayoutEditor(),\n        provideMaterialLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n        provideFormLayoutEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoLayoutPackageManager,\n        },\n    ]\n})\n@ModuleRoutes(components)\nexport class LayoutEditorModule\n{\n}","export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|null|undefined, parentControl: AbstractControl|undefined, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","<div class=\"dynamic-flex-row\">\n    <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-right-extra-small\" (click)=\"detailVisible = !detailVisible\">\n        <span class=\"fas\" [class.fa-plus]=\"!detailVisible\" [class.fa-minus]=\"detailVisible\"></span>\n    </button>\n\n    <div class=\"pm-header\">packages</div>\n</div>\n\n<div *ngIf=\"detailVisible\">\n    <div class=\"dynamic-flex-row\">\n        <select class=\"dynamic-form-control dynamic-flex-1\" #avPkgs>\n            <option *ngFor=\"let package of availablePackages\" [value]=\"package\">{{package}}</option>\n        </select>\n\n        <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-left-extra-small\" (click)=\"addPackage(availablePackages[avPkgs.selectedIndex])\">\n            <span class=\"fas fa-plus\"></span>\n        </button>\n    </div>\n\n    <div class=\"dynamic-flex-row dynamic-align-items-center dynamic-margin-top-small\" *ngFor=\"let package of usedPackages\">\n        <div class=\"dynamic-flex-1\">{{package}}</div>\n\n        <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-left-extra-small\" (click)=\"removePackage(package)\">\n            <span class=\"fas fa-times\"></span>\n        </button>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, OnInit} from '@angular/core';\n\nimport {PackageManager} from '../../../../services';\n\n//TODO: animations\n\n/**\n * Component used as package manager of dynamic packages/modules\n */\n@Component(\n{\n    selector: 'package-manager',\n    templateUrl: 'packageManager.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PackageManagerComponent implements OnInit\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is detail visible\n     */\n    protected detailVisible: boolean = false;\n\n    /**\n     * Array of used packages\n     */\n    protected usedPackages: string[] = [];\n\n    /**\n     * Array of available packages\n     */\n    protected availablePackages: readonly string[] = [];\n\n    //######################### constructor #########################\n    constructor(protected packageManager: PackageManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.usedPackages = this.packageManager.usedPackages;\n        this.updatedAvailablePackages();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds package to used packages\n     * @param packageName - Name of package to be added\n     */\n    protected addPackage(packageName: string|null): void\n    {\n        if(!packageName)\n        {\n            return;\n        }\n\n        this.usedPackages = [...this.usedPackages, packageName];\n        this.updatedAvailablePackages();\n        this.packageManager.setUsedPackages(this.usedPackages);\n    }\n\n    /**\n     * Removes package from used packages\n     * @param packageName - Name of package to be removed\n     */\n    protected removePackage(packageName: string): void\n    {\n        this.usedPackages = this.usedPackages.filter(itm => itm != packageName);\n        this.updatedAvailablePackages();\n        this.packageManager.setUsedPackages(this.usedPackages);\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Updates available packages using used packages\n     */\n    protected updatedAvailablePackages(): void\n    {\n        this.availablePackages = this.packageManager.packages.filter(itm => !this.usedPackages.find(it => it == itm));\n    }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport {PackageManagerComponent} from '../components';\n\n/**\n * Module for package manager components, directives and pipes\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n    ],\n    declarations:\n    [\n        PackageManagerComponent,\n    ],\n    exports:\n    [\n        PackageManagerComponent,\n    ]\n})\nexport class PackageManagerModule\n{\n}","import {inject} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\nimport {PromiseOr} from '@jscrpt/common';\nimport {Observable, Subject, Subscription} from 'rxjs';\n\nimport {PackageSource} from '../../interfaces';\nimport {PACKAGE_SOURCES} from '../../misc/tokens';\n\n/**\n * Service used for obtaining available and used packages\n */\nexport class PackageManager\n{\n    //######################### private fields #########################\n    \n    /**\n     * Current usedPackages value\n     */\n    private _usedPackages: string[] = [];\n\n    //######################### protected properties #########################\n    \n    /**\n     * Subscriptions created during initialization\n     */\n    protected initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Used for emitting usedPackages changes\n     */\n    protected usedPackagesSubject: Subject<void> = new Subject<void>();\n\n    /**\n     * Used for emitting packages changes\n     */\n    protected packagesChangeSubject: Subject<void> = new Subject<void>();\n\n    /**\n     * Permanent storage storing selected packages\n     */\n    protected store: PermanentStorage = inject(PERMANENT_STORAGE);\n\n    /**\n     * Array of package source\n     */\n    protected packageSources: PackageSource[] = inject(PACKAGE_SOURCES);\n\n    //######################### public properties #########################\n\n    /**\n     * Occurs when available packages changes\n     */\n    public get packagesChange(): Observable<void>\n    {\n        return this.packagesChangeSubject.asObservable();\n    }\n\n    /**\n     * Gets available packages\n     */\n    public get packages(): readonly string[]\n    {\n        const result: string[] = [];\n\n        for(const source of this.packageSources)\n        {\n            result.push(...source.packages);\n        }\n\n        return result;\n    }\n\n    /**\n     * Gets current usedPackages value\n     */\n    public get usedPackages(): string[]\n    {\n        return this._usedPackages;\n    }\n    protected set usedPackages(value: string[])\n    {\n        this._usedPackages = value;\n    }\n    \n    /**\n     * Occurs when usedPackages changes\n     */\n    public get usedPackagesChange(): Observable<void>\n    {\n        return this.usedPackagesSubject.asObservable();\n    }\n\n    //######################### constructor #########################\n    constructor(protected storageName: string,)\n    {\n        this.usedPackages = this.store.get<string[]|null>(storageName) ?? [];\n\n        for(const source of this.packageSources)\n        {\n            this.initSubscriptions.add(source.packagesChange.subscribe(() =>this.packagesChangeSubject.next()));\n        }\n    }\n    \n    //######################### public methods #########################\n    \n    /**\n     * Sets usedPackages new value\n     * @param usedPackages - Value of usedPackages that changed\n     */\n    public setUsedPackages(usedPackages: string[]): void\n    {\n        if(this._usedPackages == usedPackages)\n        {\n            return;\n        }\n    \n        this._usedPackages = usedPackages;\n        this.store.set(this.storageName, usedPackages);\n        this.usedPackagesSubject.next();\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Refresh available packages with current data\n     */\n    public refresh(): PromiseOr<void>\n    {\n        for(const source of this.packageSources)\n        {\n            source.refresh();\n        }\n    }\n\n    /**\n     * Destroys service and all its resources\n     */\n    public destroy(): void\n    {\n        this.initSubscriptions.unsubscribe();\n    }\n} ","var map = {\n\t\"./checkbox/type\": [\n\t\t34757,\n\t\t4757\n\t],\n\t\"./datepicker/type\": [\n\t\t96425,\n\t\t6425\n\t],\n\t\"./formGroup/type\": [\n\t\t70613,\n\t\t613\n\t],\n\t\"./numberField/type\": [\n\t\t90560,\n\t\t560\n\t],\n\t\"./period/type\": [\n\t\t13487,\n\t\t3487\n\t],\n\t\"./radio/type\": [\n\t\t41197,\n\t\t1197\n\t],\n\t\"./select/type\": [\n\t\t98746,\n\t\t8746\n\t],\n\t\"./textField/type\": [\n\t\t80477,\n\t\t477\n\t],\n\t\"./textarea/type\": [\n\t\t25552,\n\t\t5552\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;"],"names":["EditorComponent","emptyMetadata","id","generateId","displayName","package","name","options","children","constructor","store","history","_metadata","_getMetadata","metadata","_loadDemo","this","DemoData","LAYOUT_HISTORY_MANAGER","selectors","decls","vars","consts","template","i0","ctx","__decorate","BindThis","ComponentRoute","path","StoreDataService","MetadataHistoryManager","components","LayoutEditorModule","provide","LAYOUT_METADATA_STORAGE","useFactory","MetadataStorage","getData","deps","createStoreDataServiceFactory","provideBasicLayoutEditor","provideMaterialLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","provideFormLayoutEditor","PackageManager","useClass","DemoLayoutPackageManager","imports","DynamicLayoutEditorModule","LoadSaveNewSAComponent","ModuleRoutes","FormComponentControlType","FormDynamicModuleItemsProvider","_logger","tryToGet","source","debug","e","LOGGER","factory","FormDynamicModuleTypesProvider","moduleName","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","multi","FORM_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","FORM_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideFormLayout","provideStaticPackageSource","provideFormLayoutRelationsEditor","provideFormLayoutRelations","getFormControl","controlName","parentControl","defaultControlType","defaultValue","get","getControlForType","type","FormArray","FormGroup","FormControl","PackageManagerComponent","packageManager","detailVisible","usedPackages","availablePackages","ngOnInit","updatedAvailablePackages","addPackage","packageName","setUsedPackages","removePackage","filter","itm","packages","find","it","PackageManagerModule","CommonModule","ReactiveFormsModule","packagesChange","packagesChangeSubject","asObservable","result","packageSources","push","_usedPackages","value","usedPackagesChange","usedPackagesSubject","storageName","initSubscriptions","Subscription","Subject","inject","PERMANENT_STORAGE","PACKAGE_SOURCES","add","subscribe","next","set","refresh","destroy","unsubscribe","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}