{"version":3,"file":"7537.chunk.9ddd94d48110957271a2.js","mappings":"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","sources":["webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.model.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.component.html","webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.component.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/node/restNode.model.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/node/restNode.component.html","webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/node/restNode.component.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/rest/metadata/rest.relationsMetadata.ts","webpack://ng-universal-demo/../src/modules/codeEditor/components/codeEditor/monaco.init.ts","webpack://ng-universal-demo/../src/modules/codeEditor/components/codeEditor/codeEditor.component.ts","webpack://ng-universal-demo/../src/modules/codeEditor/components/codeEditorDialog/codeEditorDialog.component.ts","webpack://ng-universal-demo/../src/modules/codeEditor/components/codeEditorDialog/codeEditorDialog.component.html","webpack://ng-universal-demo/../src/modules/codeEditor/misc/types/languageModels/jsonLanguageModel.ts","webpack://ng-universal-demo/../src/modules/codeEditor/misc/types/languageModels/languageModel.ts","webpack://ng-universal-demo/../../../../packages/common/src/directives/ng_switch.ts"],"sourcesContent":["import {mapValuesToThis} from '@jscrpt/common';\n\nimport {RestParam} from '../../interfaces';\nimport {ParamType} from '../../types';\n\n/**\n * Rest param model\n */\nexport class RestParamModel implements RestParam\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public type: ParamType = 'PATH';\n\n    /**\n     * @inheritdoc\n     */\n    public configurable: boolean = false;\n\n    /**\n     * @inheritdoc\n     */\n    public value: any;\n\n    /**\n     * @inheritdoc\n     */\n    public name: string|undefined|null = null;\n    \n    //######################### constructor #########################\n    constructor(value: RestParam|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","<div [formGroup]=\"form\">\n    <div class=\"dynamic-form-group dynamic-margin-bottom-extra-small\">\n        <label class=\"dynamic-control-label dynamic-text-uppercase\">type</label>\n\n        <select class=\"dynamic-form-control\" formControlName=\"type\">\n            <option value=\"BODY\" *ngIf=\"!data.hasBody\">BODY</option>\n            <option value=\"PATH\">PATH</option>\n            <option value=\"QUERY\">QUERY</option>\n            <option value=\"QUERY OBJECT\">QUERY OBJECT</option>\n            <option value=\"HEADER\">HEADER</option>\n        </select>\n    </div>\n\n    <div class=\"dynamic-form-group dynamic-margin-bottom-extra-small\">\n        <label class=\"dynamic-control-label dynamic-text-uppercase\">name</label>\n        <input type=\"text\" class=\"dynamic-form-control\" formControlName=\"name\">\n    </div>\n\n    <div class=\"dynamic-flex-column dynamic-margin-bottom-extra-small\">\n        <button type=\"button\" class=\"dynamic-btn dynamic-btn-primary dynamic-align-self-center\" (click)=\"showCodeEditor()\">\n            <span>value</span>\n        </button>\n    </div>\n\n    <div class=\"dynamic-form-group dynamic-margin-bottom-extra-small\">\n        <label class=\"dynamic-control-label dynamic-text-uppercase\">configurable</label>\n        <input type=\"checkbox\" class=\"dynamic-form-control\" formControlName=\"configurable\">\n    </div>\n</div>\n\n<div class=\"dynamic-flex-row dynamic-flex-end\">\n    <button type=\"button\" class=\"dynamic-btn dynamic-btn-info dynamic-margin-right-extra-small\" [mat-dialog-close]=\"null\">\n        <span>cancel</span>\n    </button>\n\n    <button type=\"button\" class=\"dynamic-btn dynamic-btn-primary\" [mat-dialog-close]=\"true\">\n        <span>ok</span>\n    </button>\n</div>","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TitledDialogService, TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {CodeEditorContent, CodeEditorDialogComponent, CodeEditorDialogData, getJson, JsonLanguageModel} from '@anglr/dynamic';\nimport {extend, isPresent} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ConfigureRestParameterData} from './configureRestParameter.interface';\nimport {RestParam} from '../../interfaces';\nimport {RestParamModel} from './configureRestParameter.model';\n\n/**\n * Component used for displaying configuration of rest parameters\n */\n@Component(\n{\n    selector: 'configure-rest-parameter',\n    templateUrl: 'configureRestParameter.component.html',\n    // styleUrls: ['configureRestParameter.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureRestParameterSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of form group that is bound to form\n     */\n    protected form: FormGroup<FormModelGroup<RestParam>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ConfigureRestParameterData,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<RestParam>(new RestParamModel(data.parameter));\n        this.form.valueChanges.subscribe(value => extend(data.parameter, value));\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows code editor\n     */\n    protected async showCodeEditor(): Promise<void>\n    {\n        const content = isPresent(this.data.parameter.value) ? JSON.stringify(this.data.parameter.value, null, 4) : '';\n\n        const result = await lastValueFrom(this.dialog.open<CodeEditorDialogComponent, CodeEditorDialogData, CodeEditorContent|null>(CodeEditorDialogComponent,\n        {\n            title: 'Code editor',\n            width: '75vw',\n            height: '75vh',\n            data: \n            {\n                content,\n                languageModel: JsonLanguageModel,\n\n            }\n        }).afterClosed());\n\n        if(isPresent(result))\n        {\n            this.data.parameter.value = getJson(result.content);\n        }\n    }\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {RestParam} from '../misc/interfaces';\nimport {MethodType} from '../misc/types';\nimport {RestRelationsOptions} from '../rest.options';\n\n/**\n * Rest relations options model\n */\nexport class RestRelationsOptionsModel implements RestRelationsOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public url: string|undefined|null = '';\n\n    /**\n     * @inheritdoc\n     */\n    public method: MethodType|undefined|null = 'GET';\n\n    /**\n     * @inheritdoc\n     */\n    public runImmediately: boolean|undefined|null = true;\n\n    /**\n     * @inheritdoc\n     */\n    public params: RestParam[]|undefined|null;\n    \n    //######################### constructor #########################\n    constructor(value: RestRelationsOptions|undefined|null)\n    {\n        mapValuesToThis.bind(this)(value);\n    }\n}","<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"rest\"></relations-node-header>\n\n<div class=\"node-content\" [formGroup]=\"form\">\n    <div class=\"dynamic-form-group dynamic-margin-bottom-extra-small\">\n        <label class=\"dynamic-control-label dynamic-text-uppercase\">url</label>\n        <input type=\"text\" class=\"dynamic-form-control\" formControlName=\"url\">\n    </div>\n    \n    <div class=\"dynamic-form-group dynamic-margin-bottom-extra-small\">\n        <label class=\"dynamic-control-label dynamic-text-uppercase\">method</label>\n        \n        <select class=\"dynamic-form-control\" formControlName=\"method\">\n            <option value=\"GET\">GET</option>\n            <option value=\"POST\">POST</option>\n            <option value=\"PUT\">PUT</option>\n            <option value=\"PATCH\">PATCH</option>\n            <option value=\"DELETE\">DELETE</option>\n        </select>\n    </div>\n\n    <div class=\"dynamic-form-group dynamic-margin-bottom-extra-small\">\n        <label class=\"dynamic-control-label dynamic-text-uppercase\">run immediately</label>\n        <input type=\"checkbox\" class=\"dynamic-form-control\" formControlName=\"runImmediately\">\n    </div>\n\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <ng-container *ngFor=\"let param of params\">\n                <ng-container [ngSwitch]=\"param.type\">\n                    <div class=\"input\" *ngSwitchCase=\"'BODY'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"dynamic-flex-row\">\n                            <div>BODY: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'PATH'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"dynamic-flex-row\">\n                            <div>PATH: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'QUERY'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"dynamic-flex-row\">\n                            <div>QUERY: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'QUERY OBJECT'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"dynamic-flex-row\">\n                            <div>QUERY OBJECT: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'HEADER'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"dynamic-flex-row\">\n                            <div>HEADER: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); addParam()\">\n                <span class=\"fas fa-plus\"></span>\n            </button>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\">\n                <div>success</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"success\" [parent]=\"this\"></relation-node-output>\n            </div>\n\n            <div class=\"output\">\n                <div>error</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"error\" [parent]=\"this\"></relation-node-output>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {extend} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ConfigureRestParameterData, ConfigureRestParameterSAComponent} from '../misc/components';\nimport {RestRelationsOptions} from '../rest.options';\nimport {RestParam} from '../misc/interfaces';\nimport {RestRelationsOptionsModel} from './restNode.model';\n\n/**\n * Relations node component for rest\n */\n@Component(\n{\n    selector: 'rest-node',\n    templateUrl: 'restNode.component.html',\n    // styleUrls: ['negationNode.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RestNodeSAComponent extends RelationsNodeBase<RestRelationsOptions> implements RelationsNode<RestRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets rest parameters\n     */\n    protected get params(): RestParam[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            params: [],\n            url: null,\n            method: null,\n            runImmediately: true,\n        };\n\n        return (this.metadata.relationsOptions.params ??= []);\n    }\n\n    /**\n     * Instance of form that is being used\n     */\n    protected form: FormGroup<FormModelGroup<RestRelationsOptions>>;\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n        super(changeDetector, element);\n\n        this.form = formModelBuilder.build<RestRelationsOptions>(new RestRelationsOptionsModel(null));\n        this.form.valueChanges.subscribe(value =>\n        {\n            if(this.metadata?.relationsOptions)\n            {\n                extend(this.metadata.relationsOptions, value);\n                this.history.getNewState();\n            }\n        });\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new parameter\n     */\n    protected async addParam(): Promise<void>\n    {\n        const param: RestParam = \n        {\n            configurable: false,\n            name: null,\n            type: 'PATH',\n            value: null,\n        };\n\n        if(await this.configureRestParameter(param))\n        {\n            this.params.push(param);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Removes parameter\n     * @param param - Param to be removed\n     */\n    protected removeParam(param: RestParam): void\n    {\n        const index = this.params.indexOf(param);\n\n        if(index >= 0)\n        {\n            this.params.splice(index, 1);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures rest parameter\n     * @param param - Parameter to be configured\n     */\n    protected async configureRestParameter(param: RestParam): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(param));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureRestParameterSAComponent, ConfigureRestParameterData, true|undefined|null>(ConfigureRestParameterSAComponent,\n        {\n            title: 'configure rest parameter',\n            width: '60vw',\n            data:\n            {\n                parameter: param,\n                hasBody: param.type === 'BODY' ? false : !!this.params.find(itm => itm.type === 'BODY')\n            }\n        }).afterClosed());\n\n        if(!result)\n        {\n            extend(param, original);\n        }\n        else\n        {\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override metadataSet(): void\n    {\n        if(!this.metadata?.relationsOptions)\n        {\n            return;\n        }\n\n        this.form.patchValue(this.metadata.relationsOptions);\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {RestNodeSAComponent} from '../node/restNode.component';\n\n/**\n * Rest relations metadata\n */\nexport class RestRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Rest',\n        description: 'Restfull requests',\n        group: 'Http',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = RestNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {globalDefine, isBlank} from '@jscrpt/common';\nimport {languages} from 'monaco-editor';\n\ndeclare let ngDynamicMonacoPath: string;\n\nglobalDefine(global =>\n{\n    if(isBlank(global.ngDynamicMonacoPath))\n    {\n        global.ngDynamicMonacoPath = 'dist';\n    }\n});\n\n(self as any).MonacoEnvironment = \n{\n    getWorkerUrl: function(_: string, label: string)\n    {\n        if (label === 'json')\n        {\n            return `${ngDynamicMonacoPath}/json.worker.js`;\n        }\n        \n        if (label === 'css' || label === 'scss' || label === 'less')\n        {\n            return `${ngDynamicMonacoPath}/css.worker.js`;\n        }\n\n        if (label === 'html' || label == 'handlebars')\n        {\n            return `${ngDynamicMonacoPath}/html.worker.js`;\n        }\n\n        if (label === 'typescript' || label === 'javascript')\n        {\n            return `${ngDynamicMonacoPath}/ts.worker.js`;\n        }\n\n        return `${ngDynamicMonacoPath}/editor.worker.js`;\n    }\n};\n\nconst options: languages.typescript.CompilerOptions =\n{\n    target: languages.typescript.ScriptTarget.ES2020,\n    module: languages.typescript.ModuleKind.CommonJS,\n    moduleResolution: languages.typescript.ModuleResolutionKind.NodeJs,\n    allowNonTsExtensions: true,\n    removeComments: true,\n    noEmitOnError: true,\n    noImplicitAny: true,\n    noImplicitReturns: true,\n    noImplicitOverride: true,\n    noImplicitThis: true,\n    noUnusedLocals: true,\n    noUnusedParameters: true,\n    strict: true,\n    strictNullChecks: true,\n    esModuleInterop: true,\n    newLine: languages.typescript.NewLineKind.LineFeed,\n    typeRoots: ['node_modules/@types']\n};\n\nlanguages.typescript.typescriptDefaults.setDiagnosticsOptions(\n{\n    noSemanticValidation: false,\n    noSyntaxValidation: false,\n});\n\nlanguages.typescript.typescriptDefaults.setCompilerOptions(options);\n\n/**\n * Indication that monaco init code was called\n */\nexport const monacoInit: boolean = true;","import {Component, ChangeDetectionStrategy, ElementRef, OnDestroy, AfterViewInit, Input, OnChanges, SimpleChanges, EventEmitter, Output} from '@angular/core';\nimport {isBlank, isPresent, nameof} from '@jscrpt/common';\nimport {editor, IDisposable, KeyCode, KeyMod, Uri} from 'monaco-editor';\n\nimport {LanguageModel} from '../../misc/types';\nimport {CodeEditorContent} from './codeEditor.interface';\nimport {monacoInit} from './monaco.init';\n\n/**\n * Component used for editing code\n */\n@Component(\n{\n    selector: 'code-editor',\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CodeEditorComponent implements OnDestroy, AfterViewInit, OnChanges\n{\n    //######################### public static properties #########################\n\n    /**\n     * Indication whether was monaco init called\n     */\n    public static monacoInit: boolean = monacoInit;\n\n    //######################### protected fields #########################\n\n    /**\n     * Instance of code editor\n     */\n    protected codeEditor: editor.IStandaloneCodeEditor|null = null;\n\n    /**\n     * Opened file in editor\n     */\n    protected openedFile: editor.ITextModel|null = null;\n\n    /**\n     * Handler for event of change of model\n     */\n    protected changeEvent: IDisposable|null = null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Content that is being displayed\n     */\n    @Input()\n    public content: string|undefined|null;\n\n    /**\n     * Language model used for selecting proper language\n     */\n    @Input()\n    public languageModel: LanguageModel|undefined|null;\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when content of editor is saved\n     */\n    @Output()\n    public save: EventEmitter<CodeEditorContent> = new EventEmitter<CodeEditorContent>();\n\n    /**\n     * Occurs when content of editor changes, new value passed down\n     */\n    @Output()\n    public contentChange: EventEmitter<CodeEditorContent> = new EventEmitter<CodeEditorContent>();\n\n    //######################### constructor #########################\n    constructor(protected element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n    \n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<CodeEditorComponent>('languageModel') in changes && this.languageModel &&\n           nameof<CodeEditorComponent>('content') in changes && isPresent(this.content))\n        {\n            this.updateContent();\n        }\n    }\n\n    //######################### public methods - implementation of AfterViewInit #########################\n    \n    /**\n     * Called when view was initialized\n     */\n    public ngAfterViewInit(): void\n    {\n        this.createEditor();\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Saves currently opened document\n     */\n    public async saveContent(): Promise<void>\n    {\n        if(this.openedFile && this.codeEditor && this.languageModel)\n        {\n            this.save.emit(\n            {\n                content: this.openedFile.getValue(),\n                code: await this.languageModel.compiledCode(this.codeEditor)\n            });\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this.changeEvent?.dispose();\n        this.changeEvent = null;\n\n        this.openedFile?.dispose();\n        this.openedFile = null;\n\n        this.codeEditor?.dispose();\n        this.codeEditor = null;\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Creates editor\n     */\n    protected createEditor(): void\n    {\n        this.codeEditor = editor.create(this.element.nativeElement,\n        {\n            theme: 'vs-dark',\n            model: this.openedFile,\n            lightbulb:\n            {\n                enabled: true\n            },\n            bracketPairColorization: \n            {\n                enabled: true,\n            },\n            minimap:\n            {\n                enabled: true\n            },\n        });\n\n        this.codeEditor.addCommand(KeyMod.CtrlCmd | KeyCode.KeyS, () =>\n        {\n            this.saveContent();\n        });\n\n        this.changeEvent = this.codeEditor.onDidChangeModelContent(async () =>\n        {\n            if(this.openedFile && this.languageModel && this.codeEditor)\n            {\n                this.contentChange.emit(\n                {\n                    content: this.openedFile.getValue(),\n                    code: await this.languageModel.compiledCode(this.codeEditor)\n                });\n            }\n        });\n    }\n\n    /**\n     * Updates content of code editor\n     */\n    protected updateContent(): void\n    {\n        this.openedFile?.dispose();\n        this.openedFile = null;\n\n        if(!this.languageModel || isBlank(this.content))\n        {\n            return;\n        }\n\n        this.openedFile = editor.createModel((this.content || this.languageModel.initialData) ?? '', this.languageModel.language, Uri.file(`file:///index.${this.languageModel.extension}`));\n        this.codeEditor?.setModel(this.openedFile);\n    }\n}","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {TITLED_DIALOG_DATA} from '@anglr/common/material';\n\nimport {CodeEditorDialogData} from './codeEditorDialog.interface';\nimport {CodeEditorContent} from '../codeEditor/codeEditor.interface';\nimport {CodeEditorComponent} from '../codeEditor/codeEditor.component';\n\n/**\n * Component used as dialog displaying code editor\n */\n@Component(\n{\n    selector: 'code-editor-dialog',\n    templateUrl: 'codeEditorDialog.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CodeEditorDialogComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Current content of code editor\n     */\n    protected editorContent: CodeEditorContent|null = null;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: CodeEditorDialogData,\n                protected dialog: MatDialogRef<CodeEditorDialogComponent, CodeEditorContent|null>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Saves content of code editor and closes dialog\n     * @param editor - Instance of code editor\n     */\n    protected async saveAndClose(editor: CodeEditorComponent): Promise<void>\n    {\n        await editor.saveContent();\n        this.dialog.close(this.editorContent);\n    }\n}","<code-editor #editor style=\"height: calc(70vh - 46px); width: calc(75vw - 20px);\" [content]=\"data.content\" [languageModel]=\"data.languageModel\" (save)=\"editorContent = $event\"></code-editor>\n\n<div class=\"dynamic-flex-row dynamic-flex-end dynamic-margin-top-extra-small\">\n    <button type=\"button\" class=\"dynamic-btn dynamic-btn-info dynamic-margin-right-extra-small\" type=\"button\" [mat-dialog-close]=\"null\">\n        <span>cancel</span>\n    </button>\n\n    <button type=\"button\" class=\"dynamic-btn dynamic-btn-primary\" type=\"button\" (click)=\"saveAndClose(editor)\">\n        <span>ok</span>\n    </button>\n</div>","import {LanguageModel} from './languageModel';\n\n/**\n * Json language model for code editor\n */\nexport const JsonLanguageModel = new LanguageModel('json', 'json', editor =>\n{\n    return editor.getModel()?.getValue() ?? '';\n});","import {Func1, PromiseOr} from '@jscrpt/common';\nimport {editor} from 'monaco-editor';\n\n/**\n * Class that represents language model for code editor\n */\nexport class LanguageModel\n{\n    //######################### constructor #########################\n    constructor(public language: string,\n                public extension: string,\n                public compiledCode: Func1<PromiseOr<string>, editor.IStandaloneCodeEditor>,\n                public initialData?: string,)\n    {\n    }\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, Host, Input, Optional, TemplateRef, ViewContainerRef, ɵRuntimeError as RuntimeError} from '@angular/core';\n\nimport {RuntimeErrorCode} from '../errors';\n\nexport class SwitchView {\n  private _created = false;\n\n  constructor(\n      private _viewContainerRef: ViewContainerRef, private _templateRef: TemplateRef<Object>) {}\n\n  create(): void {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n\n  destroy(): void {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n\n  enforceState(created: boolean) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @description\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\n * - Every view that matches is rendered.\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\n * or `ngSwitchDefault` directive are preserved at the location.\n *\n * @usageNotes\n * Define a container element for the directive, and specify the switch expression\n * to match against as an attribute:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n * ```\n *\n * Within the container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * ...\n *    <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * ### Usage Examples\n *\n * The following example shows how to use more than one case to display the same view:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <!-- the same view can be shown in more than one case -->\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *   <!--default case when there are no matches -->\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * The following example shows how cases can be nested:\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n *\n * @publicApi\n * @see `NgSwitchCase`\n * @see `NgSwitchDefault`\n * @see [Structural Directives](guide/structural-directives)\n *\n */\n@Directive({\n  selector: '[ngSwitch]',\n  standalone: true,\n})\nexport class NgSwitch {\n  private _defaultViews: SwitchView[] = [];\n  private _defaultUsed = false;\n  private _caseCount = 0;\n  private _lastCaseCheckIndex = 0;\n  private _lastCasesMatched = false;\n  private _ngSwitch: any;\n\n  @Input()\n  set ngSwitch(newValue: any) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n\n  /** @internal */\n  _addCase(): number {\n    return this._caseCount++;\n  }\n\n  /** @internal */\n  _addDefault(view: SwitchView) {\n    this._defaultViews.push(view);\n  }\n\n  /** @internal */\n  _matchCase(value: any): boolean {\n    const matched = value == this._ngSwitch;\n    this._lastCasesMatched = this._lastCasesMatched || matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n\n  private _updateDefaultCases(useDefault: boolean) {\n    if (this._defaultViews.length > 0 && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (const defaultView of this._defaultViews) {\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @description\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\n * When the expressions match, the given `NgSwitchCase` template is rendered.\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * @usageNotes\n *\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   ...\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * Each switch-case statement contains an in-line HTML template or template reference\n * that defines the subtree to be selected if the value of the match expression\n * matches the value of the switch expression.\n *\n * Unlike JavaScript, which uses strict equality, Angular uses loose equality.\n * This means that the empty string, `\"\"` matches 0.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchDefault`\n *\n */\n@Directive({\n  selector: '[ngSwitchCase]',\n  standalone: true,\n})\nexport class NgSwitchCase implements DoCheck {\n  private _view: SwitchView;\n  /**\n   * Stores the HTML template to be selected on match.\n   */\n  @Input() ngSwitchCase: any;\n\n  constructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n      @Optional() @Host() private ngSwitch: NgSwitch) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\n      throwNgSwitchProviderNotFoundError('ngSwitchCase', 'NgSwitchCase');\n    }\n\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n\n  /**\n   * Performs case matching. For internal use only.\n   * @nodoc\n   */\n  ngDoCheck() {\n    this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));\n  }\n}\n\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that is rendered when no `NgSwitchCase` expressions\n * match the `NgSwitch` expression.\n * This statement should be the final case in an `NgSwitch`.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchCase`\n *\n */\n@Directive({\n  selector: '[ngSwitchDefault]',\n  standalone: true,\n})\nexport class NgSwitchDefault {\n  constructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n      @Optional() @Host() ngSwitch: NgSwitch) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\n      throwNgSwitchProviderNotFoundError('ngSwitchDefault', 'NgSwitchDefault');\n    }\n\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\n}\n\nfunction throwNgSwitchProviderNotFoundError(attrName: string, directiveName: string): never {\n  throw new RuntimeError(\n      RuntimeErrorCode.PARENT_NG_SWITCH_NOT_FOUND,\n      `An element with the \"${attrName}\" attribute ` +\n          `(matching the \"${\n              directiveName}\" directive) must be located inside an element with the \"ngSwitch\" attribute ` +\n          `(matching \"NgSwitch\" directive)`);\n}\n"],"names":["RestParamModel","constructor","value","type","configurable","name","mapValuesToThis","this","i0","ConfigureRestParameterSAComponent","data","dialog","formModelBuilder","form","build","parameter","valueChanges","subscribe","extend","showCodeEditor","content","isPresent","JSON","stringify","result","lastValueFrom","open","CodeEditorDialogComponent","title","width","height","languageModel","JsonLanguageModel","afterClosed","getJson","TITLED_DIALOG_DATA","selectors","standalone","features","FormModelBuilder","decls","vars","consts","template","ctx","CommonModule","ReactiveFormsModule","MatDialogModule","encapsulation","changeDetection","RestRelationsOptionsModel","url","method","runImmediately","$event","preventDefault","stopPropagation","RestNodeSAComponent","RelationsNodeBase","params","metadata","relationsOptions","changeDetector","element","super","history","getNewState","addParam","param","configureRestParameter","push","removeParam","index","indexOf","splice","original","parse","hasBody","find","itm","metadataSet","patchValue","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","RestRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze","globalDefine","global","isBlank","ngDynamicMonacoPath","self","MonacoEnvironment","getWorkerUrl","_","label","options","target","languages","module","moduleResolution","allowNonTsExtensions","removeComments","noEmitOnError","noImplicitAny","noImplicitReturns","noImplicitOverride","noImplicitThis","noUnusedLocals","noUnusedParameters","strict","strictNullChecks","esModuleInterop","newLine","typeRoots","noSemanticValidation","noSyntaxValidation","CodeEditorComponent","codeEditor","openedFile","changeEvent","save","EventEmitter","contentChange","ngOnChanges","changes","nameof","updateContent","ngAfterViewInit","createEditor","saveContent","emit","getValue","code","compiledCode","ngOnDestroy","dispose","editor","nativeElement","theme","model","lightbulb","enabled","bracketPairColorization","minimap","addCommand","KeyMod","KeyCode","onDidChangeModelContent","initialData","language","Uri","extension","setModel","inputs","outputs","editorContent","saveAndClose","close","LanguageModel","getModel","SwitchView","_viewContainerRef","_templateRef","_created","create","createEmbeddedView","destroy","clear","enforceState","created","NgSwitch","_defaultViews","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","ngSwitch","newValue","_ngSwitch","_updateDefaultCases","_addCase","_addDefault","view","_matchCase","matched","useDefault","length","defaultView","NgSwitchCase","viewContainer","templateRef","_view","ngDoCheck","ngSwitchCase","NgSwitchDefault"],"sourceRoot":""}