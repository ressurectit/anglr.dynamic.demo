{"version":3,"file":"9347.chunk.ed7d38efd7970723e4cb.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/services/staticComponentsRegister/staticComponentsRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.module.ts","webpack://ng-universal-demo/../relations/src/modules/dynamicRelations.module.ts","webpack://ng-universal-demo/../../../../src/directives/goBack/goBack.directive.ts"],"sourcesContent":["import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Static components register for demo app\n */\n@Injectable()\nexport class StaticComponentsRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[RelationsResultSAComponent.relationsId] = RelationsResultSAComponent;\n        result[RelationsSampleClickSAComponent.relationsId] = RelationsSampleClickSAComponent;\n\n        return result;\n    }\n}","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {provideRelationsEditorWithStatic, RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {provideBasicRelationsEditor} from '@anglr/dynamic/basic-components';\nimport {EditorHotkeys, MetadataStorage, PackageManager} from '@anglr/dynamic';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StaticComponentsRegister} from '../../../services/staticComponentsRegister/staticComponentsRegister.service';\nimport {DemoRelationsPackageManager} from '../../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'editor-view',\n    templateUrl: 'editor.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: () => new MetadataStorage<RelationsNodeMetadata[]>(() => []),\n        },\n        provideRelationsEditorWithStatic(StaticComponentsRegister),\n        provideTinyMceRelationsEditor(),\n        provideBasicRelationsEditor(),\n        provideHandlebarsRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected metadata: RelationsNodeMetadata[] = DemoData.relationsStaticWithEditorDemo;\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    protected save(): void\n    {\n        DemoData.relationsStaticWithEditorDemo = this._manager.getMetadata();\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-left-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"save()\">\n        <span>save</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"metadata\"></relations-editor>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {provideRelations, RelationsManager} from '@anglr/dynamic/relations';\nimport {provideBasicRelations} from '@anglr/dynamic/basic-components';\nimport {provideTinyMceRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelations} from '@anglr/dynamic/handlebars-components';\n\nimport {DemoData} from '../../../services/demoData';\n\n//TODO: check why relations does not work after returning from editor\n\n/**\n * Page for displaying relations\n */\n@Component(\n{\n    selector: 'relations-view',\n    templateUrl: 'relations.component.html',\n    // styleUrls: ['relations.component.scss'],\n    providers:\n    [\n        provideRelations(),\n        provideBasicRelations(),\n        provideTinyMceRelations(),\n        provideHandlebarsRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\nexport class RelationsComponent\n{\n    //######################### constructor #########################\n    constructor(private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._relationsManager.setRelations(DemoData.relationsStaticWithEditorDemo);\n    }\n}","<div class=\"margin-bottom-big\">\n    <a routerLink=\"/relationsWithEditor/editor\">editor</a>\n</div>\n\n<div>\n    <div class=\"bold\">relations sample click</div>\n    <relations-sample-click></relations-sample-click>\n</div>\n\n<div>\n    <div class=\"bold\">relations result</div>\n    <relations-result></relations-result>\n</div>","import {EditorComponent} from './editor/editor.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    RelationsComponent,\n    EditorComponent,\n];","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {GoBackSADirective} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsModule} from '@anglr/dynamic/relations';\nimport {DynamicRelationsEditorModule} from '@anglr/dynamic/relations-editor';\n\nimport {components} from './relationsWithEditor.routes';\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for relations with editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        RouterModule,\n        GoBackSADirective,\n        DynamicRelationsModule,\n        DynamicRelationsEditorModule,\n        RelationsSampleClickSAComponent,\n        RelationsResultSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('RELATIONS_TMP'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithEditorModule\n{\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {provideRelations} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic relations rendering\n */\n@NgModule(\n{\n})\nexport class DynamicRelationsModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsModule>\n    {\n        return {\n            ngModule: DynamicRelationsModule,\n            providers:\n            [\n                provideRelations(),\n            ]\n        };\n    }\n}","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]',\n    standalone: true,\n})\nexport class GoBackSADirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}"],"names":["StaticComponentsRegister","Register","getDefinedTypes","result","RelationsResultSAComponent","relationsId","RelationsSampleClickSAComponent","t","factory","ɵfac","EditorComponent","constructor","_manager","metadata","DemoData","relationsStaticWithEditorDemo","save","this","getMetadata","i0","i1","selectors","features","EditorHotkeys","provide","RELATIONS_METADATA_STORAGE","useFactory","MetadataStorage","provideRelationsEditorWithStatic","provideTinyMceRelationsEditor","provideBasicRelationsEditor","provideHandlebarsRelationsEditor","PackageManager","useClass","DemoRelationsPackageManager","decls","vars","consts","template","rf","ctx","__decorate","ComponentRoute","path","RelationsNodeManager","RelationsComponent","_relationsManager","ngOnInit","setRelations","provideRelations","provideBasicRelations","provideTinyMceRelations","provideHandlebarsRelations","RelationsManager","components","RelationsWithEditorModule","createStoreDataServiceFactory","imports","RouterModule","DynamicRelationsModule","DynamicRelationsEditorModule","ModuleRoutes","withProviders","ngModule","providers","GoBackSADirective","_location","goBack","event","preventDefault","stopPropagation","back","hostBindings","$event","standalone"],"sourceRoot":""}