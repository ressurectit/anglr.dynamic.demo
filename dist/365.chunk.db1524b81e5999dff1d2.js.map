{"version":3,"file":"365.chunk.db1524b81e5999dff1d2.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/merge/node/mergeNode.component.html","webpack://ng-universal-demo/../basic-components/src/dynamicItems/merge/node/mergeNode.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/merge/metadata/merge.relationsMetadata.ts"],"sourcesContent":["<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"merge\"></relations-node-header>\n\n<div class=\"node-content\">\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <div class=\"input\" *ngFor=\"let property of properties\">\n                <relation-node-input [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"property\" [parent]=\"this\"></relation-node-input>\n\n                <div class=\"dynamic-flex-row\">\n                    <div>{{property}}</div>\n\n                    <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); rename(property)\">\n                        <span class=\"fas fa-pen\"></span>\n                    </button>\n\n                    <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeProperty(property)\">\n                        <span class=\"fas fa-times\"></span>\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"dynamic-flex-row\">\n                <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-left-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); addProperty()\">\n                    <span class=\"fas fa-plus\"></span>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\">\n                <div>merged object</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"mergedObject\" [parent]=\"this\"></relation-node-output>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent, RelationNodeInputSAComponent} from '@anglr/dynamic/relations-editor';\nimport {ConfigureNodeEndpointData, ConfigureNodeEndpointSAComponent} from '@anglr/dynamic/layout-relations';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {lastValueFrom} from 'rxjs';\n\nimport {MergeRelationsOptions} from '../merge.options';\n\n/**\n * Relations node component for merge\n */\n@Component(\n{\n    selector: 'merge-node',\n    templateUrl: 'mergeNode.component.html',\n    standalone: true,\n    imports:\n    [\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MergeNodeSAComponent extends RelationsNodeBase<MergeRelationsOptions> implements RelationsNode<MergeRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets added properties names\n     */\n    protected get properties(): string[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            properties: []\n        };\n\n        return this.metadata.relationsOptions.properties ?? [];\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new property\n     */\n    protected async addProperty(): Promise<void>\n    {\n        await this.configureEndpoint(`prop${this.properties.length + 1}`);\n    }\n\n    /**\n     * Removes property\n     * @param name - Name of property to be removed\n     */\n    protected removeProperty(name: string): void\n    {\n        let index: number;\n\n        if(this.metadata?.relationsOptions?.properties?.length && (index = this.metadata.relationsOptions.properties.indexOf(name)) >= 0)\n        {\n            this.metadata.relationsOptions.properties.splice(index, 1);\n\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Renames property\n     * @param name - Allows renaming of property\n     */\n    protected async rename(name: string): Promise<void>\n    {\n        await this.configureEndpoint(name);\n\n        this.changeDetector.detectChanges();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Configures endpoint\n     * @param name - Name to be configured\n     */\n    protected async configureEndpoint(name: string): Promise<boolean>\n    {\n        const editName: ConfigureNodeEndpointData =\n        {\n            name,\n            defaultValue: undefined,\n            noDefaultValue: true,\n            skipInit: false,\n        };\n\n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ConfigureNodeEndpointData, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure property',\n            width: '60vw',\n            data: editName,\n        }).afterClosed());\n\n        //rename\n        if(result && this.metadata?.relationsOptions)\n        {\n            let index;\n\n            //rename\n            if(this.metadata.relationsOptions.properties?.length && (index = this.metadata.relationsOptions.properties.indexOf(name)) >= 0)\n            {\n                this.metadata.relationsOptions.properties.splice(index, 1);\n                this.metadata.relationsOptions.properties.splice(index, 0, editName.name);\n            }\n            //add\n            else\n            {\n                this.metadata.relationsOptions.properties ??= [];\n                this.metadata.relationsOptions.properties.push(editName.name);\n            }\n\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {MergeNodeSAComponent} from '../node/mergeNode.component';\n\n/**\n * Merge relations metadata\n */\nexport class MergeRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Merge',\n        description: 'Allows constructing of object merged of inputs',\n        group: 'Data',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = MergeNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["i0","$event","preventDefault","stopPropagation","MergeNodeSAComponent","RelationsNodeBase","properties","this","metadata","relationsOptions","constructor","changeDetector","element","dialog","super","addProperty","configureEndpoint","length","removeProperty","name","index","indexOf","splice","history","getNewState","rename","detectChanges","editName","defaultValue","undefined","noDefaultValue","skipInit","result","lastValueFrom","open","ConfigureNodeEndpointSAComponent","title","width","data","afterClosed","push","selectors","standalone","features","decls","vars","consts","template","ctx","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","CommonModule","encapsulation","changeDetection","MergeRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze"],"sourceRoot":""}