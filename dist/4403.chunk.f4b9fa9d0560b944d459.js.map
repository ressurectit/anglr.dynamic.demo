{"version":3,"file":"4403.chunk.f4b9fa9d0560b944d459.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../../src/modules/position/modules/position.module.ts","webpack://ng-universal-demo/../layout-editor/src/directives/designerMinDimension/designerMinDimension.directive.ts","webpack://ng-universal-demo/../layout-editor/src/directives/copyDesignerStyles/copyDesignerStyles.directive.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesignerOverlayFor/layoutDesignerOverlayFor.component.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesignerOverlayFor/layoutDesignerOverlayFor.component.html","webpack://ng-universal-demo/../../../../src/modules/position/directives/positionTo/positionTo.directive.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesigner/layoutDesigner.component.html","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesigner/layoutDesigner.component.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesigner/type.ts","webpack://ng-universal-demo/../layout/src/components/layoutComponentBase/layoutComponentBase.ts","webpack://ng-universal-demo/../../../../src/services/position/position.utils.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\n\nimport {PositionToDirective} from '../directives/positionTo/positionTo.directive';\n\n/**\n * Module for position to directive\n */\n@NgModule(\n{\n    imports:\n    [\n    ],\n    declarations:\n    [\n        PositionToDirective\n    ],\n    exports:\n    [\n        PositionToDirective\n    ]\n})\nexport class PositionModule\n{\n}\n","import {ContentChild, Directive, ElementRef, EmbeddedViewRef, OnDestroy, OnInit} from '@angular/core';\nimport {LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {Subscription} from 'rxjs';\n\n/**\n * Applies min dimensions to designed element, so it can be visible event when it is empty\n */\n@Directive(\n{\n    selector: '[designerMinWidth]',\n    standalone: true\n})\nexport class DesignerMinDimensionSADirective implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Instance of resize observer\n     */\n    protected _observer?: ResizeObserver;\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Instance of layout component renderer\n     */\n    @ContentChild(LayoutComponentRendererSADirective, {static: true})\n    protected _layoutComponentRendererDirective?: LayoutComponentRendererSADirective;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._observer = new ResizeObserver(changes =>\n        {\n            for(const change of changes)\n            {\n                this._updatedDimensions(change.contentRect);\n            }\n        });\n\n        this._initSubscriptions.add(this._layoutComponentRendererDirective?.componentChange.subscribe(componentRef =>\n        {\n            if(!componentRef)\n            {\n                this._observer?.disconnect();\n\n                return;\n            }\n\n            const element = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n            this._updatedDimensions(element.getBoundingClientRect());\n\n            this._observer?.observe(element);\n        }));\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._observer?.disconnect();\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods #########################\n\n    protected _updatedDimensions(rect: DOMRect): void\n    {\n        //no height, apply min height\n\n        if(rect.height != 30)\n        {\n            if(rect.height <= 0)\n            {\n                this._element.nativeElement.style.minHeight = '30px';\n            }\n            else\n            {\n                this._element.nativeElement.style.minHeight = '';\n            }\n        }\n\n        if(rect.width != 30)\n        {\n            //no width, apply min width\n            if(rect.width <= 0)\n            {\n                this._element.nativeElement.style.minWidth = '30px';\n            }\n            else\n            {\n                this._element.nativeElement.style.minWidth = '';\n            }\n        }\n    }\n}","import {Directive, ElementRef, Input} from '@angular/core';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\n\nimport {LayoutEditorMetadataExtractor} from '../../services';\n\n//TODO: remove, do it more generic\n\n/**\n * Copies designer styles that should be applied to element\n */\n@Directive(\n{\n    selector: '[copyDesignerStyles]',\n    exportAs: 'copyDesignerStyles',\n    standalone: true\n})\nexport class CopyDesignerStylesSADirective<TOptions = any>\n{\n    //######################### protected fields #########################\n\n    /**\n     * Designed component metadata\n     */\n    public _metadata: LayoutComponentMetadata<TOptions>|undefined|null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Designed component metadata\n     */\n    @Input('copyDesignerStyles')\n    public get metadata(): LayoutComponentMetadata<TOptions>|undefined|null\n    {\n        return this._metadata;\n    }\n    public set metadata(value: LayoutComponentMetadata<TOptions>|undefined|null)\n    {\n        this._metadata = value;\n\n        this._copyDesignerStyles();\n    }\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _metadataExtractor: LayoutEditorMetadataExtractor,)\n    {\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Copies designer styles if necessary\n     */\n    protected async _copyDesignerStyles(): Promise<void>\n    {\n        if(!this._metadata)\n        {\n            return;\n        }\n\n        const metadata = await this._metadataExtractor.extractMetadata(this._metadata);\n        const applyDesignerStyles = metadata?.applyDesignerStyles;\n\n        if(applyDesignerStyles)\n        {\n            applyDesignerStyles(this._metadata.options, this._element.nativeElement.style);\n        }\n    }\n}","import {Component, ChangeDetectionStrategy, ElementRef, EmbeddedViewRef, OnInit, OnDestroy, Input, ChangeDetectorRef} from '@angular/core';\nimport {LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\n\n/**\n * Component displaying layout designer layout overlay\n */\n@Component(\n{\n    selector: '[layoutDesignerOverlayFor]',\n    templateUrl: 'layoutDesignerOverlayFor.component.html',\n    styleUrls: ['layoutDesignerOverlayFor.component.css'],\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutDesignerOverlayForSAComponent implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Instance of mutation observer\n     */\n    protected _observer?: MutationObserver;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of element that is monitored\n     */\n    protected _htmlElement: HTMLElement|undefined;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Instance of layout component renderer\n     */\n    @Input('layoutDesignerOverlayFor')\n    public layoutComponentRendererDirective?: LayoutComponentRendererSADirective;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _changeDetector: ChangeDetectorRef,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._observer = new MutationObserver(() => this._changeDetector.detectChanges());\n\n        //TODO: make this working\n        this._htmlElement = (this.layoutComponentRendererDirective?.componentRef?.hostView as EmbeddedViewRef<any>)?.rootNodes?.[0];\n\n        if(this._htmlElement)\n        {\n            this._observer?.observe(this._htmlElement, {attributeFilter: ['style']});\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._observer?.disconnect();\n    }\n}","<div class=\"margin-top-div\" [style.height]=\"_htmlElement?.style?.marginTop\"></div>\n<div class=\"margin-bottom-div\" [style.height]=\"_htmlElement?.style?.marginBottom\"></div>\n<div class=\"margin-left-div\" [style.width]=\"_htmlElement?.style?.marginLeft\"></div>\n<div class=\"margin-right-div\" [style.width]=\"_htmlElement?.style?.marginRight\"></div>\n<div class=\"padding-top-div\" [style.height]=\"_htmlElement?.style?.paddingTop\"></div>\n<div class=\"padding-bottom-div\" [style.height]=\"_htmlElement?.style?.paddingBottom\"></div>\n<div class=\"padding-left-div\" [style.width]=\"_htmlElement?.style?.paddingLeft\"></div>\n<div class=\"padding-right-div\" [style.width]=\"_htmlElement?.style?.paddingRight\"></div>\n<div class=\"border-top-div\" [style.height]=\"_htmlElement?.style?.borderTop\"></div>\n<div class=\"border-bottom-div\" [style.height]=\"_htmlElement?.style?.borderBottom\"></div>\n<div class=\"border-left-div\" [style.width]=\"_htmlElement?.style?.borderLeft\"></div>\n<div class=\"border-right-div\" [style.width]=\"_htmlElement?.style?.borderRight\"></div>","import {Directive, Input, ElementRef, OnChanges, SimpleChanges, Inject, Output, EventEmitter} from '@angular/core';\nimport {nameof, isPresent, isString} from '@jscrpt/common';\n\nimport {applyPositionResult, Position, PositionPlacement, PositionOptions} from '../../../../services/position';\nimport {POSITION} from '../../../../types/tokens';\n\n/**\n * Sets position of attached element relative to provided element\n */\n@Directive(\n{\n    selector: '[positionTo]'\n})\nexport class PositionToDirective implements OnChanges\n{\n    //######################### protected fields #########################\n\n    /**\n     * Position placement value\n     */\n    protected _placement: PositionPlacement|null|undefined;\n\n    /**\n     * Html element which is used as source for positioning\n     */\n    protected _source!: HTMLElement;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Gets or sets html element which is used as source for positioning\n     */\n    @Input('positionTo')\n    public get source(): HTMLElement\n    {\n        return this._source;\n    }\n    public set source(value: HTMLElement)\n    {\n        if(value instanceof ElementRef)\n        {\n            this._source = (value as ElementRef).nativeElement;\n\n            return;\n        }\n\n        this._source = value;\n    }\n\n    /**\n     * Gets or sets position placement value\n     */\n    @Input()\n    public get placement(): PositionPlacement|null|undefined\n    {\n        return this._placement;\n    }\n    public set placement(value: PositionPlacement|null|undefined)\n    {\n        if(isString(value))\n        {\n            this._placement = PositionPlacement[value as keyof typeof PositionPlacement];\n\n            return;\n        }\n\n        this._placement = value;\n    }\n\n    // //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when flip occurs during positioning\n     */\n    @Output()\n    public flip: EventEmitter<void> = new EventEmitter<void>();\n\n    //######################### constructor #########################\n    constructor(protected _target: ElementRef<HTMLElement>,\n                @Inject(POSITION) protected _position: Position)\n    {\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n\n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if((nameof<PositionToDirective>('source') in changes ||\n            nameof<PositionToDirective>('placement') in changes) &&\n           isPresent(this.source))\n        {\n            this._applyPosition();\n        }\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Applies position according to specified parameters to specified elements\n     */\n    protected async _applyPosition(): Promise<void>\n    {\n        const options: Partial<PositionOptions> =\n        {\n        };\n\n        if(this._placement)\n        {\n            options.placement = this._placement;\n        }\n\n        const result = await this._position.placeElement(this._target.nativeElement,\n                                                         this._source,\n                                                         options).toPromise();\n\n        applyPositionResult(result);\n\n        if(result.flip)\n        {\n            this.flip.next();\n        }\n    }\n\n    //######################### ng language server #########################\n    \n    /**\n     * Custom input type for `placement` input\n     */\n    public static ngAcceptInputType_placement: PositionPlacement|undefined|null|keyof typeof PositionPlacement;\n\n    //######################### ng language server #########################\n    \n    /**\n     * Custom input type for `positionTo` input\n     */\n    public static ngAcceptInputType_positionTo: HTMLElement|ElementRef<HTMLElement>;\n}\n","<div class=\"designer-overlay\" \n     #layoutDesigner\n     cdkDrag\n     cdkDropList\n     designerMinWidth\n     connectDropLists\n     [id]=\"id\"\n     [copyDesignerStyles]=\"_renderedType\"\n     [cdkDragData]=\"{metadata: _renderedType, parentId: _parent?._renderedType?.id}\"\n     [cdkDragDisabled]=\"dragDisabled\"\n     [cdkDropListEnterPredicate]=\"canDrop\"\n     [cdkDropListOrientation]=\"_orientation\"\n     (mouseleave)=\"_hideOverlay($event)\"\n     (mouseover)=\"_showOverlay($event)\"\n     (cdkDropListDropped)=\"addDescendant($event)\"\n     (click)=\"_selectComponent($event)\"\n     (dblclick)=\"_unselectComponent($event)\">\n    <layout-editor-drag-placeholder class=\"mat-elevation-z6\" *cdkDragPlaceholder></layout-editor-drag-placeholder>\n    <layout-editor-drag-preview class=\"mat-elevation-z4\" *cdkDragPreview [editorMetadata]=\"_editorMetadata\" [layoutMetadata]=\"_renderedType\"></layout-editor-drag-preview>\n    <ng-template #renderer=\"layoutComponentRenderer\" [layoutComponentRenderer]=\"_renderedType\" [layoutComponentRendererDisableTransformer]=\"true\"></ng-template>\n\n    <ng-container *ngIf=\"highlighted || selected\">\n        <div class=\"designer-overlay-border\"></div>\n        <div class=\"designer-overlay-layout\" [layoutDesignerOverlayFor]=\"renderer\"></div>\n\n        <div class=\"designer-overlay-title\"\n             [positionTo]=\"layoutDesigner\"\n             placement=\"TopStart\">{{_editorMetadata?.metaInfo?.name ?? _renderedType?.name}}</div>\n\n        <div *ngIf=\"!!_parent && _parent._editorMetadata?.removeDescendant\" class=\"designer-overlay-remove\" (click)=\"_remove()\">x</div>\n    </ng-container>\n</div>\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, SkipSelf, Optional, Inject, OnDestroy, Injector, ViewChild} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CdkDragDrop, DragDropModule, DropListOrientation} from '@angular/cdk/drag-drop';\nimport {Logger, LOGGER, PositionModule} from '@anglr/common';\nimport {LayoutComponent, LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {LayoutComponentBase, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {Func, isPresent, resolvePromiseOr} from '@jscrpt/common';\nimport {Subscription} from 'rxjs';\n\nimport {LayoutDesignerComponentOptions} from './layoutDesigner.options';\nimport {ConnectDropListsSADirective, CopyDesignerStylesSADirective, DesignerMinDimensionSADirective} from '../../directives';\nimport {LayoutEditorMetadataExtractor, LayoutEditorMetadataManager} from '../../services';\nimport {LayoutComponentDragData} from '../../interfaces';\nimport {LayoutEditorDragPreviewSAComponent} from '../layoutEditorDragPreview/layoutEditorDragPreview.component';\nimport {LayoutEditorDragPlaceholderSAComponent} from '../layoutEditorDragPlaceholder/layoutEditorDragPlaceholder.component';\nimport {LayoutDesignerOverlayForSAComponent} from '../layoutDesignerOverlayFor/layoutDesignerOverlayFor.component';\nimport {LayoutEditorMetadataDescriptor} from '../../decorators';\n\n//TODO: when new is clicked only after event new item can be dropped into \n\n/**\n * Component used as designer component wrapper for layout component\n */\n@Component(\n{\n    selector: 'layout-designer-component',\n    templateUrl: 'layoutDesigner.component.html',\n    styleUrls: ['layoutDesigner.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        PositionModule,\n        DragDropModule,\n        LayoutEditorDragPreviewSAComponent,\n        LayoutEditorDragPlaceholderSAComponent,\n        LayoutDesignerOverlayForSAComponent,\n        DesignerMinDimensionSADirective,\n        CopyDesignerStylesSADirective,\n        ConnectDropListsSADirective,\n        LayoutComponentRendererSADirective,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutDesignerSAComponent extends LayoutComponentBase<LayoutDesignerComponentOptions> implements LayoutComponent<LayoutDesignerComponentOptions>, OnDestroy\n{\n    //######################### public properties #########################\n\n    /**\n     * Component identifier\n     */\n    public get id(): string\n    {\n        return this.options?.typeMetadata?.id ?? '';\n    }\n\n    //######################### protected fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Indication whether item can be dropped here\n     */\n    protected _canDropValue: boolean = false;\n\n    /**\n     * Layout editor metadata\n     */\n    protected _editorMetadata: LayoutEditorMetadataDescriptor<LayoutDesignerComponentOptions>|null = null;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is component selected\n     */\n    protected get selected(): boolean\n    {\n        return this._layoutEditorMetadataManager.selectedComponent === this.options?.typeMetadata.id;\n    }\n\n    /**\n     * Indication whether is component highlighted\n     */\n    protected get highlighted(): boolean\n    {\n        return this._layoutEditorMetadataManager.highlightedComponent === this.options?.typeMetadata.id;\n    }\n\n    /**\n     * Metadata for rendered type\n     */\n    protected _renderedType: LayoutComponentMetadata|undefined|null;\n\n    /**\n     * Orientation of drop list\n     */\n    protected _orientation: DropListOrientation = 'vertical';\n\n    //######################### protected properties - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override get element(): ElementRef<HTMLElement>\n    {\n        return this._designerElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override get extensionsOptions(): any|undefined|null\n    {\n        return this.options?.typeMetadata.options;\n    }\n\n    //######################### protected properties - children #########################\n\n    /**\n     * Instance of designer div element\n     */\n    @ViewChild('layoutDesigner', {static: true})\n    protected _designerElement!: ElementRef<HTMLElement>;\n\n    //######################### public properties #########################\n\n    /**\n     * Indication whether drag is disabled for component\n     */\n    public get dragDisabled(): boolean\n    {\n        return !this._parent || !!this._editorMetadata?.metaInfo?.dragDisabled;\n    }\n\n    /**\n     * Gets predicate that returns indication whether item can be dropped into this list\n     */\n    public canDrop: Func<boolean> = () => this._canDropValue;\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                injector: Injector,\n                protected _metadataExtractor: LayoutEditorMetadataExtractor,\n                protected _layoutEditorMetadataManager: LayoutEditorMetadataManager,\n                @Inject(LOGGER) @Optional() logger?: Logger,\n                @SkipSelf() @Optional() protected _parent?: LayoutDesignerSAComponent,)\n    {\n        super(changeDetector, element, injector, logger);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public override ngOnDestroy(): void\n    {\n        this._logger?.debug('LayoutDesignerSAComponent: Destroying component {@data}', {id: this.options?.typeMetadata.id});\n\n        this._initSubscriptions.unsubscribe();\n\n        super.ngOnDestroy();\n\n        if(this.options)\n        {\n            this._layoutEditorMetadataManager.unregisterLayoutDesignerComponent(this.options.typeMetadata.id);\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Adds descentant component metadata to this component metadata\n     * @param dragData - Data from drag n drop event\n     */\n    public addDescendant(dragData: CdkDragDrop<LayoutComponentDragData, LayoutComponentDragData, LayoutComponentDragData>): void\n    {\n        if(!this.options)\n        {\n            return;\n        }\n\n        const parentId = dragData.item.data.parentId;\n        this._logger?.debug('LayoutDesignerSAComponent: Adding descendant {@data}', {id: dragData.item.data.metadata.id, parent: this.options.typeMetadata.id});\n\n        //already added to tree, removing old reference\n        if(parentId)\n        {\n            this._layoutEditorMetadataManager.getComponent(parentId)?._removeDescendant(dragData.item.data.metadata.id);\n        }\n\n        this._editorMetadata?.addDescendant?.(dragData.item.data.metadata, this.options.typeMetadata.options, dragData.currentIndex);\n        this._canDropValue = this._editorMetadata?.canDropMetadata?.(this.options.typeMetadata.options) ?? false;\n\n        this._renderedType = {...this.options.typeMetadata};\n        this._changeDetector.markForCheck();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Removes descendant metadata from this component metadata\n     * @param id - Id of descendant to be removed\n     */\n    protected _removeDescendant(id: string): void\n    {\n        if(!this.options)\n        {\n            return;\n        }\n\n        this._logger?.debug('LayoutDesignerSAComponent: Removing descendant {@data}', {id: this.options.typeMetadata.id, child: id});\n\n        this._editorMetadata?.removeDescendant?.(id, this.options.typeMetadata.options);\n        this._canDropValue = this._editorMetadata?.canDropMetadata?.(this.options.typeMetadata.options) ?? false;\n        this._renderedType = {...this.options.typeMetadata};\n        this._changeDetector.markForCheck();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows designer overlay\n     * @param event - Mouse event that occured\n     */\n    protected _showOverlay(event: Event): void\n    {\n        this._logger?.verbose('LayoutDesignerComponent: Showing overlay for {@type}', {name: this.options?.typeMetadata.name, id: this.options?.typeMetadata.id});\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._layoutEditorMetadataManager.highlightComponent(this.options?.typeMetadata.id);\n    }\n\n    /**\n     * Hides designer overlay\n     * @param event - Mouse event that occured\n     */\n    protected _hideOverlay(event: Event): void\n    {\n        if(isPresent(this._parent))\n        {\n            return;\n        }\n\n        this._logger?.verbose('LayoutDesignerComponent: Hiding overlay for {@type}', {name: this.options?.typeMetadata.name, id: this.options?.typeMetadata.id});\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._layoutEditorMetadataManager.cancelHighlightedComponent();\n    }\n\n    /**\n     * Marks component as selected\n     * @param event - Event that occured\n     */\n    protected _selectComponent(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if(this.options)\n        {\n            this._layoutEditorMetadataManager.selectComponent(this.options.typeMetadata.id);\n        }\n    }\n\n    /**\n     * Unselects selected component\n     * @param event - Event that occured\n     */\n    protected _unselectComponent(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._layoutEditorMetadataManager.unselectComponent();\n    }\n\n    /**\n     * Removes itself from tree\n     */\n    protected _remove(): void\n    {\n        if(!this._parent || !this.options)\n        {\n            return;\n        }\n\n        this._parent._removeDescendant(this.options.typeMetadata.id);\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override async _onInit(): Promise<void>\n    {\n        await resolvePromiseOr(super._onInit());\n\n        if(!this.options)\n        {\n            return;\n        }\n\n        //TODO: optimize\n        this._initSubscriptions.add(this._layoutEditorMetadataManager.selectedChange.subscribe(() => this._changeDetector.detectChanges()));\n        this._initSubscriptions.add(this._layoutEditorMetadataManager.highlightedChange.subscribe(() => this._changeDetector.detectChanges()));\n\n        this._editorMetadata = await this._metadataExtractor.extractMetadata(this.options.typeMetadata);\n        this._canDropValue = this._editorMetadata?.canDropMetadata?.(this.options.typeMetadata.options) ?? false;\n        this._layoutEditorMetadataManager.registerLayoutDesignerComponent(this, this.options.typeMetadata.id, this._parent?.options?.typeMetadata.id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override _onOptionsSet(): void\n    {\n        if(!this.options)\n        {\n            return;\n        }\n\n        this._renderedType = {...this.options.typeMetadata};\n        this._orientation = this._editorMetadata?.isHorizontalDrop?.(this.options.typeMetadata.options) ? 'horizontal' : 'vertical';\n    }\n}","import {LayoutDesignerSAComponent} from './layoutDesigner.component';\n\nexport default LayoutDesignerSAComponent;","import {ChangeDetectorRef, Directive, ElementRef, Inject, Injector, OnDestroy, Optional, SimpleChanges} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemExtension} from '@anglr/dynamic';\nimport {nameof, PromiseOr, resolvePromiseOr} from '@jscrpt/common';\n\nimport {LayoutComponent} from '../../interfaces';\n\n/**\n * Base component for layout component\n */\n@Directive()\nexport abstract class LayoutComponentBase<TOptions> implements LayoutComponent<TOptions>, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Array of extensions that are registered for component\n     */\n    protected _extensions: DynamicItemExtension<TOptions>[] = [];\n\n    /**\n     * Indication whether initialization was already done\n     */\n    protected _initialized: boolean = false;\n\n    /**\n     * Indication whether was component destroyed\n     */\n    protected destroyed: boolean = false;\n\n    //######################### protected properties #########################\n\n    /**\n     * Gets element that is used within extension\n     */\n    protected get element(): ElementRef<HTMLElement>\n    {\n        return this._element;\n    }\n\n    /**\n     * Gets options that are used within extension\n     */\n    protected get extensionsOptions(): any|undefined|null\n    {\n        return this.options;\n    }\n\n    //######################### public properties - implementation of LayoutComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public options: TOptions|undefined|null;\n\n    //######################### constructor #########################\n    constructor(protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>,\n                protected _injector: Injector,\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this.destroyed)\n        {\n            return;\n        }\n\n        this.destroyed = true;\n\n        for(const ext of this._extensions)\n        {\n            ext.destroy();\n        }\n\n        this._onDestroy();\n    }\n\n    //######################### public methods - implementation of LayoutComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        if(this._initialized)\n        {\n            return;\n        }\n\n        this._initialized = true;\n        const extensionsOptions = this.extensionsOptions;\n        \n        await resolvePromiseOr(this._onInit());\n        await resolvePromiseOr(this._onOptionsSet());\n\n        if(extensionsOptions)\n        {\n            for(const extension of this._extensions)\n            {\n                await resolvePromiseOr(extension.initialize(this._injector, this.element, this));\n            }\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public async ngOnChanges(changes: SimpleChanges): Promise<void>\n    {\n        //options has changed\n        if(nameof<LayoutComponentBase<TOptions>>('options') in changes)\n        {\n            await resolvePromiseOr(this._onOptionsSet());\n\n            const extensionsOptions = this.extensionsOptions;\n\n            //set options in extensions\n            if(extensionsOptions)\n            {\n                for(const extension of this._extensions)\n                {\n                    await resolvePromiseOr(extension.optionsChange(extensionsOptions));\n                }\n            }\n\n            if(!this._initialized)\n            {\n                return;\n            }\n\n            await resolvePromiseOr(this._onOptionsChange());\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public registerExtensions(extensions: DynamicItemExtension[]): void\n    {\n        this._extensions = extensions;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Called on initialzation of component, options are already set\n     */\n    protected _onInit(): PromiseOr<void>\n    {\n    }\n\n    /**\n     * Called on change of options, after initialization\n     */\n    protected _onOptionsChange(): PromiseOr<void>\n    {\n    }\n\n    /**\n     * Called everytime options are set, after initialization and later\n     */\n    protected _onOptionsSet(): PromiseOr<void>\n    {\n    }\n\n    /**\n     * Called when component is being destroyed\n     */\n    protected _onDestroy(): void\n    {\n    }\n}","import {PositionResult} from './position.interface';\n\n/**\n * Applies `PositionResult` to target element\n * @param result - Result of positioning process to be applied\n */\nexport function applyPositionResult(result: PositionResult<HTMLElement>): void\n{\n    Object.assign(result.target.style,\n                  {\n                      top: '0',\n                      left: '0',\n                      transform: `translate(${result.x}px, ${result.y}px)`,\n                  });\n}\n"],"names":["PositionModule","DesignerMinDimensionSADirective","constructor","_element","_initSubscriptions","Subscription","ngOnInit","this","_observer","ResizeObserver","changes","change","_updatedDimensions","contentRect","add","_layoutComponentRendererDirective","componentChange","subscribe","componentRef","disconnect","element","hostView","rootNodes","getBoundingClientRect","observe","ngOnDestroy","unsubscribe","rect","height","nativeElement","style","minHeight","width","minWidth","i0","selectors","contentQueries","LayoutComponentRendererSADirective","CopyDesignerStylesSADirective","_metadataExtractor","metadata","_metadata","value","_copyDesignerStyles","applyDesignerStyles","extractMetadata","options","inputs","exportAs","standalone","LayoutDesignerOverlayForSAComponent","_changeDetector","MutationObserver","detectChanges","_htmlElement","layoutComponentRendererDirective","attributeFilter","features","attrs","decls","vars","consts","template","PositionToDirective","_target","_position","flip","EventEmitter","source","_source","ElementRef","placement","_placement","isString","PositionPlacement","ngOnChanges","nameof","isPresent","_applyPosition","result","placeElement","toPromise","applyPositionResult","next","POSITION","ctx_r2","LayoutDesignerSAComponent","LayoutComponentBase","changeDetector","injector","_layoutEditorMetadataManager","logger","_parent","super","_canDropValue","_editorMetadata","_orientation","canDrop","id","typeMetadata","selected","selectedComponent","highlighted","highlightedComponent","_designerElement","extensionsOptions","dragDisabled","metaInfo","_logger","debug","unregisterLayoutDesignerComponent","addDescendant","dragData","parentId","item","data","parent","getComponent","_removeDescendant","currentIndex","canDropMetadata","_renderedType","markForCheck","child","removeDescendant","_showOverlay","event","verbose","name","preventDefault","stopPropagation","highlightComponent","_hideOverlay","cancelHighlightedComponent","_selectComponent","selectComponent","_unselectComponent","unselectComponent","_remove","_onInit","resolvePromiseOr","selectedChange","highlightedChange","registerLayoutDesignerComponent","_onOptionsSet","isHorizontalDrop","LOGGER","viewQuery","ctx","CommonModule","i2","i3","DragDropModule","i4","LayoutEditorDragPreviewSAComponent","LayoutEditorDragPlaceholderSAComponent","ConnectDropListsSADirective","styles","changeDetection","_injector","_extensions","_initialized","destroyed","ext","destroy","_onDestroy","extension","initialize","optionsChange","_onOptionsChange","registerExtensions","extensions","invalidateVisuals","Object","assign","target","top","left","transform","x","y"],"sourceRoot":""}