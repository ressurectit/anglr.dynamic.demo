{"version":3,"file":"5986.chunk.9aa78ab6703cd1fc3871.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/layout/layout.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relationsWithLayoutEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relationsWithLayoutEditor.module.ts","webpack://ng-universal-demo/../layout-relations/src/modules/dynamicLayoutRelationsEditor.module.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleRelationsProvider/restDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleItemsProvider/restDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/misc/providers.ts","webpack://ng-universal-demo/../rest-components/src/misc/utils.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../../src/directives/goBack/goBack.directive.ts","webpack://ng-universal-demo/../../../../src/modules/castPipes/modules/castPipes.module.ts","webpack://ng-universal-demo/../../../../src/pipes/isPresent/isPresent.pipe.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {LAYOUT_HISTORY_MANAGER, provideLayoutEditor} from '@anglr/dynamic/layout-editor';\nimport {provideBasicLayoutEditor, StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {provideMaterialLayoutEditor} from '@anglr/dynamic/material-components';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoLayoutPackageManager} from '../../../services/demoLayoutPackageManager/demoLayoutPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutEditor(),\n        provideBasicLayoutEditor(),\n        provideMaterialLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoLayoutPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n        \n                @Inject(LAYOUT_HISTORY_MANAGER) protected history: MetadataHistoryManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: LayoutComponentMetadata): LayoutRelationsMetadata\n    {\n        return {\n            layout: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoLayoutWithRelations;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsWithLayoutEditor/layout\" (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsWithLayoutEditor/layout', _available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsWithLayoutEditor/relations', _available.value]\">relations</a>\r\n\r\n    <ng-select [formControl]=\"_available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <div class=\"flex-1 overflow-vertical-scroll\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy, FactoryProvider} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {RelationsManager} from '@anglr/dynamic/relations';\nimport {provideCssLayoutRelations} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelations} from '@anglr/dynamic/handlebars-components';\nimport {provideLayoutRelations} from '@anglr/dynamic/layout-relations';\nimport {provideRestLayoutRelations} from '@anglr/dynamic/rest-components';\nimport {provideBasicLayoutRelations} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayoutRelations} from '@anglr/dynamic/material-components';\nimport {MetadataStorage} from '@anglr/dynamic';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n//TODO: add provideLayoutRelations() for css, handlebars and tinymce\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelations(),\n        provideBasicLayoutRelations(),\n        provideMaterialLayoutRelations(),\n        provideCssLayoutRelations(),\n        provideTinyMceLayoutRelations(),\n        provideHandlebarsLayoutRelations(),\n        provideRestLayoutRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _router: Router,\n                private _relationsManager: RelationsManager,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                const meta = this._store.getData(id);\n                this._metadata = meta?.layout;\n\n                this._relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this._relationsManager.setRelations([]);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/relationsWithLayoutEditor/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager, provideLayoutRelationsEditor} from '@anglr/dynamic/layout-relations';\nimport {provideCssLayoutRelationsEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideRestLayoutRelationsEditor} from '@anglr/dynamic/rest-components';\nimport {provideBasicLayoutRelationsEditor} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayoutRelationsEditor} from '@anglr/dynamic/material-components';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoRelationsPackageManager} from '../../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelationsEditor(),\n        provideBasicLayoutRelationsEditor(),\n        provideMaterialLayoutRelationsEditor(),\n        provideHandlebarsLayoutRelationsEditor(),\n        provideRestLayoutRelationsEditor(),\n        provideTinyMceLayoutRelationsEditor(),\n        provideCssLayoutRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): LayoutRelationsMetadata\n    {\n        return {\n            relations: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsWithLayoutDemo;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" [layoutControls]=\"false\" routePath=\"/relationsWithLayoutEditor/relations\" (metadataChange)=\"setMetadata($event)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    PreviewComponent,\n    LayoutComponent,\n    RelationsComponent,\n];","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {GoBackSADirective} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\n\nimport {components} from './relationsWithLayoutEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for relations with layout editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackSADirective,\n        DynamicLayoutRelationsEditorModule,\n        LoadSaveNewSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithLayoutEditorModule\n{\n}","import {ModuleWithProviders, NgModule, Type} from '@angular/core';\nimport {DynamicLayoutEditorModule} from '@anglr/dynamic/layout-editor';\nimport {DynamicRelationsEditorModule, StaticComponentsRegister} from '@anglr/dynamic/relations-editor';\n\nimport {provideLayoutRelationsEditor, provideLayoutRelationsEditorWithStatic} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic layout relations editor rendering\n */\n@NgModule(\n{\n    exports:\n    [\n        DynamicLayoutEditorModule,\n        DynamicRelationsEditorModule,\n    ]\n})\nexport class DynamicLayoutRelationsEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicLayoutRelationsEditorModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicLayoutRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutRelationsEditorModule,\n            providers:\n            [\n                provideLayoutRelationsEditor(),\n            ]\n        };\n    }\n\n    /**\n     * Creates DynamicLayoutRelationsEditorModule extended with providers for static components\n     * @param staticRegister - Type that represents implementation of static components register\n     */\n    public static withStaticComponents(staticRegister: Type<StaticComponentsRegister>): ModuleWithProviders<DynamicLayoutRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutRelationsEditorModule,\n            providers:\n            [\n                provideLayoutRelationsEditorWithStatic(staticRegister, ),\n            ]\n        };\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for rest types\n */\n@Injectable()\nexport class RestDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'rest-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for rest module items\n */\n@Injectable()\nexport class RestDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'rest-components':\n            {\n                try\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {RestDynamicModuleItemsProvider, RestDynamicModuleRelationsProvider} from '../services';\n\n/**\n * Provider for rest dynamic relations types provider\n */\nexport const REST_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: RestDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations nodes provider\n */\nexport const REST_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations components provider\n */\nexport const REST_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {REST_RELATIONS_COMPONENTS_PROVIDER, REST_RELATIONS_MODULE_TYPES_PROVIDER, REST_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for relations rest subpackage\n */\nexport function provideRestRelations(): Provider[]\n{\n    return [\n        REST_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations editor rest subpackage\n */\nexport function provideRestRelationsEditor(): Provider[]\n{\n    return [\n        REST_RELATIONS_MODULE_TYPES_PROVIDER,\n        REST_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('rest-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor rest subpackage\n */\nexport function provideRestLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideRestRelationsEditor(),\n    ];\n}\n\n/**\n * Providers for layout relations rest subpackage\n */\nexport function provideRestLayoutRelations(): Provider[]\n{\n    return [\n        ...provideRestRelations(),\n    ];\n}","var map = {\n\t\"./rest/type\": [\n\t\t20309,\n\t\t309\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2721;\nmodule.exports = webpackAsyncContext;","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]',\n    standalone: true,\n})\nexport class GoBackSADirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}","import {NgModule} from '@angular/core';\n\nimport {AsHtmlElementPipe, AsNgClassRequiredPipe, AsRequiredTypePipe, CastTypePipe} from '../pipes';\n\n/**\n * Module that holds cast pipes\n */\n@NgModule(\n{\n    declarations:\n    [\n        AsHtmlElementPipe,\n        AsNgClassRequiredPipe,\n        AsRequiredTypePipe,\n        CastTypePipe,\n    ],\n    exports:\n    [\n        AsHtmlElementPipe,\n        AsNgClassRequiredPipe,\n        AsRequiredTypePipe,\n        CastTypePipe,\n    ]\n})\nexport class CastPipesModule\n{\n}","import {Pipe, PipeTransform} from '@angular/core';\nimport {isPresent} from '@jscrpt/common';\n\n/**\n * Returns true if object is different from null or undefined\n */\n@Pipe(\n{\n    name: 'isPresent',\n    standalone: true,\n})\nexport class IsPresentSAPipe implements PipeTransform\n{\n    //######################### public methods #########################\n\n    /**\n     * Checks whether is value different from null or undefined\n     * @param value - Value to be checked\n     */\n    public transform(value: unknown): boolean\n    {\n        return isPresent(value);\n    }\n}"],"names":["LayoutComponent","emptyMetadata","id","generateId","displayName","package","name","options","children","constructor","_store","history","_metadata","_getMetadata","metadata","layout","_loadDemo","this","DemoData","demoLayoutWithRelations","i0","i1","LAYOUT_HISTORY_MANAGER","selectors","features","EditorHotkeys","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","getData","deps","StoreDataService","provideLayoutEditor","provideBasicLayoutEditor","provideMaterialLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","PackageManager","useClass","DemoLayoutPackageManager","decls","vars","consts","template","rf","ctx","$event","tmp_b_0","undefined","__decorate","BindThis","ComponentRoute","path","MetadataHistoryManager","val_r1","PreviewComponent","_router","_relationsManager","_route","_available","FormControl","_availableNames","ngOnInit","getStored","params","subscribe","setValue","meta","setRelations","relations","valueChanges","val","navigate","skipLocationChange","replaceUrl","ngOnDestroy","i2","i3","provideLayoutRelations","provideBasicLayoutRelations","provideMaterialLayoutRelations","provideCssLayoutRelations","provideTinyMceLayoutRelations","provideHandlebarsLayoutRelations","provideRestLayoutRelations","PreviewComponent_ng_option_6_Template","_c0","value","_c1","Router","RelationsManager","ActivatedRoute","RelationsComponent","_layoutManager","relationsWithLayoutDemo","setMetadata","setLayout","RELATIONS_HISTORY_MANAGER","RELATIONS_METADATA_STORAGE","provideLayoutRelationsEditor","provideBasicLayoutRelationsEditor","provideMaterialLayoutRelationsEditor","provideHandlebarsLayoutRelationsEditor","provideRestLayoutRelationsEditor","provideTinyMceLayoutRelationsEditor","provideCssLayoutRelationsEditor","DemoRelationsPackageManager","LayoutManager","components","RelationsWithLayoutEditorModule","createStoreDataServiceFactory","imports","CommonModule","ReactiveFormsModule","RouterModule","NgSelectModule","DynamicLayoutRelationsEditorModule","LoadSaveNewSAComponent","ModuleRoutes","withProviders","ngModule","providers","withStaticComponents","staticRegister","provideLayoutRelationsEditorWithStatic","DynamicLayoutEditorModule","DynamicRelationsEditorModule","RestDynamicModuleRelationsProvider","_logger","tryToGet","source","_this","debug","module","moduleName","e","LOGGER","factory","ɵfac","RestDynamicModuleItemsProvider","item","REST_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","multi","REST_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","REST_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideRestRelationsEditor","provideStaticPackageSource","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","keys","Object","exports","GoBackSADirective","_location","goBack","event","preventDefault","stopPropagation","back","hostBindings","standalone","CastPipesModule","IsPresentSAPipe","transform","isPresent","pure"],"sourceRoot":""}