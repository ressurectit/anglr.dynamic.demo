{"version":3,"file":"5184.chunk.411edb61a1231686e051.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/layout/layout.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relationsWithLayoutEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relationsWithLayoutEditor.module.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleRelationsProvider/restDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleItemsProvider/restDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/misc/providers.ts","webpack://ng-universal-demo/../rest-components/src/misc/utils.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {LAYOUT_HISTORY_MANAGER, provideLayoutEditor} from '@anglr/dynamic/layout-editor';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoLayoutPackageManager} from '../../../services/demoLayoutPackageManager/demoLayoutPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoLayoutPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n        \n                @Inject(LAYOUT_HISTORY_MANAGER) protected history: MetadataHistoryManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: LayoutComponentMetadata): LayoutRelationsMetadata\n    {\n        return {\n            layout: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoLayoutWithRelations;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsWithLayoutEditor/layout\" (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsWithLayoutEditor/layout', _available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsWithLayoutEditor/relations', _available.value]\">relations</a>\r\n\r\n    <ng-select [formControl]=\"_available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <div class=\"flex-1 overflow-vertical-scroll\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy, FactoryProvider} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {RelationsManager} from '@anglr/dynamic/relations';\nimport {provideCssLayoutRelations} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelations} from '@anglr/dynamic/handlebars-components';\nimport {provideLayoutRelations} from '@anglr/dynamic/layout-relations';\nimport {provideRestLayoutRelations} from '@anglr/dynamic/rest-components';\nimport {MetadataStorage} from '@anglr/dynamic';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n//TODO: add provideLayoutRelations() for css, handlebars and tinymce\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelations(),\n        provideCssLayoutRelations(),\n        provideTinyMceLayoutRelations(),\n        provideHandlebarsLayoutRelations(),\n        provideRestLayoutRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _router: Router,\n                private _relationsManager: RelationsManager,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                const meta = this._store.getData(id);\n                this._metadata = meta?.layout;\n\n                this._relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this._relationsManager.setRelations([]);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/relationsWithLayoutEditor/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager, provideLayoutRelationsEditor} from '@anglr/dynamic/layout-relations';\nimport {provideCssLayoutRelationsEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideRestLayoutRelationsEditor} from '@anglr/dynamic/rest-components';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoRelationsPackageManager} from '../../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelationsEditor(),\n        provideHandlebarsLayoutRelationsEditor(),\n        provideRestLayoutRelationsEditor(),\n        provideTinyMceLayoutRelationsEditor(),\n        provideCssLayoutRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): LayoutRelationsMetadata\n    {\n        return {\n            relations: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsWithLayoutDemo;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsWithLayoutEditor/relations\" (metadataChange)=\"setMetadata($event)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    PreviewComponent,\n    LayoutComponent,\n    RelationsComponent,\n];","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {GoBackModule} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\n\nimport {components} from './relationsWithLayoutEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for relations with layout editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackModule,\n        DynamicLayoutRelationsEditorModule,\n        LoadSaveNewSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithLayoutEditorModule\n{\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for rest types\n */\n@Injectable()\nexport class RestDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'rest-components':\n                    return await import('@anglr/dynamic/rest-components/relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for rest module items\n */\n@Injectable()\nexport class RestDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'rest-components':\n            {\n                try\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`@anglr/dynamic/rest-components/dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {RestDynamicModuleItemsProvider, RestDynamicModuleRelationsProvider} from '../services';\n\n/**\n * Provider for rest dynamic relations types provider\n */\nexport const REST_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: RestDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations nodes provider\n */\nexport const REST_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations components provider\n */\nexport const REST_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {REST_RELATIONS_COMPONENTS_PROVIDER, REST_RELATIONS_MODULE_TYPES_PROVIDER, REST_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for relations rest subpackage\n */\nexport function provideRestRelations(): Provider[]\n{\n    return [\n        REST_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations editor rest subpackage\n */\nexport function provideRestRelationsEditor(): Provider[]\n{\n    return [\n        REST_RELATIONS_MODULE_TYPES_PROVIDER,\n        REST_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('rest-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor rest subpackage\n */\nexport function provideRestLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideRestRelationsEditor(),\n    ];\n}\n\n/**\n * Providers for layout relations rest subpackage\n */\nexport function provideRestLayoutRelations(): Provider[]\n{\n    return [\n        ...provideRestRelations(),\n    ];\n}","var map = {\n\t\"./rest/type\": [\n\t\t20309,\n\t\t309\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2721;\nmodule.exports = webpackAsyncContext;"],"names":["LayoutComponent","constructor","_store","history","_metadata","emptyMetadata","id","generateId","displayName","package","name","options","children","_getMetadata","metadata","layout","_loadDemo","this","DemoData","i0","LAYOUT_HISTORY_MANAGER","selectors","features","EditorHotkeys","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","getData","deps","StoreDataService","provideLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","PackageManager","useClass","DemoLayoutPackageManager","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","MetadataHistoryManager","val_r1","PreviewComponent","_router","_relationsManager","_route","_available","FormControl","_availableNames","ngOnInit","getStored","params","subscribe","setValue","meta","setRelations","relations","valueChanges","val","navigate","skipLocationChange","replaceUrl","ngOnDestroy","provideLayoutRelations","provideCssLayoutRelations","provideTinyMceLayoutRelations","provideHandlebarsLayoutRelations","provideRestLayoutRelations","Router","RelationsManager","ActivatedRoute","RelationsComponent","_layoutManager","setMetadata","setLayout","RELATIONS_HISTORY_MANAGER","RELATIONS_METADATA_STORAGE","provideLayoutRelationsEditor","provideHandlebarsLayoutRelationsEditor","provideRestLayoutRelationsEditor","provideTinyMceLayoutRelationsEditor","provideCssLayoutRelationsEditor","DemoRelationsPackageManager","LayoutManager","components","RelationsWithLayoutEditorModule","createStoreDataServiceFactory","imports","CommonModule","ReactiveFormsModule","RouterModule","NgSelectModule","GoBackModule","DynamicLayoutRelationsEditorModule","LoadSaveNewSAComponent","ModuleRoutes","RestDynamicModuleRelationsProvider","_logger","tryToGet","source","debug","moduleName","e","LOGGER","factory","RestDynamicModuleItemsProvider","REST_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","multi","REST_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","REST_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideRestRelationsEditor","provideStaticPackageSource","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}