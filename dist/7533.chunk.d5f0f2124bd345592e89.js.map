{"version":3,"file":"7533.chunk.d5f0f2124bd345592e89.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.model.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.component.html","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/node/restNode.model.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/node/restNode.component.html","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/node/restNode.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/metadata/rest.relationsMetadata.ts","webpack://ng-universal-demo/../relations-editor/src/misc/tokens.ts","webpack://ng-universal-demo/../src/misc/extractors/defaultExport.extractor.ts","webpack://ng-universal-demo/../src/misc/utils.ts"],"sourcesContent":["import {mapValuesToThis} from '@jscrpt/common';\n\nimport {RestParam} from '../../interfaces';\nimport {ParamType} from '../../types';\n\n/**\n * Rest param model\n */\nexport class RestParamModel implements RestParam<string>\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public type: ParamType = 'PATH';\n\n    /**\n     * @inheritdoc\n     */\n    public configurable: boolean = false;\n\n    /**\n     * @inheritdoc\n     */\n    public value: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public name: string|undefined|null = null;\n    \n    //######################### constructor #########################\n    constructor(value: RestParam|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","<div [formGroup]=\"form\">\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">type</label>\n\n        <select class=\"form-control\" formControlName=\"type\">\n            <option value=\"BODY\" *ngIf=\"!data.hasBody\">BODY</option>\n            <option value=\"PATH\">PATH</option>\n            <option value=\"QUERY\">QUERY</option>\n        </select>\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">value</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"value\">\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">configurable</label>\n        <input type=\"checkbox\" class=\"form-control\" formControlName=\"configurable\">\n    </div>\n</div>\n\n<div class=\"flex-row flex-end\">\n    <button type=\"button\" class=\"btn btn-info margin-right-extra-small\" [mat-dialog-close]=\"null\">\n        <span>cancel</span>\n    </button>\n\n    <button type=\"button\" class=\"btn btn-primary\" [mat-dialog-close]=\"true\">\n        <span>ok</span>\n    </button>\n</div>","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {extend} from '@jscrpt/common';\n\nimport {ConfigureRestParameterData} from './configureRestParameter.interface';\nimport {RestParam} from '../../interfaces';\nimport {RestParamModel} from './configureRestParameter.model';\n\n/**\n * Component used for displaying configuration of rest parameters\n */\n@Component(\n{\n    selector: 'configure-rest-parameter',\n    templateUrl: 'configureRestParameter.component.html',\n    // styleUrls: ['configureRestParameter.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureRestParameterSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of form group that is bound to form\n     */\n    protected form: FormGroup<FormModelGroup<RestParam>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ConfigureRestParameterData,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<RestParam>(new RestParamModel(data.parameter));\n        this.form.valueChanges.subscribe(value => extend(data.parameter, value));\n    }\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {RestParam} from '../misc/interfaces';\nimport {MethodType} from '../misc/types';\nimport {RestRelationsOptions} from '../rest.options';\n\n/**\n * Rest relations options model\n */\nexport class RestRelationsOptionsModel implements RestRelationsOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public url: string|undefined|null = '';\n\n    /**\n     * @inheritdoc\n     */\n    public method: MethodType|undefined|null = 'GET';\n\n    /**\n     * @inheritdoc\n     */\n    public runImmediately: boolean|undefined|null = true;\n\n    /**\n     * @inheritdoc\n     */\n    public params: RestParam[]|undefined|null;\n    \n    //######################### constructor #########################\n    constructor(value: RestRelationsOptions|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"rest\"></relations-node-header>\n\n<div class=\"node-content\" [formGroup]=\"form\">\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">url</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"url\">\n    </div>\n    \n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">method</label>\n        \n        <select class=\"form-control\" formControlName=\"method\">\n            <option value=\"GET\">GET</option>\n            <option value=\"POST\">POST</option>\n            <option value=\"PUT\">PUT</option>\n            <option value=\"PATCH\">PATCH</option>\n            <option value=\"DELETE\">DELETE</option>\n        </select>\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">run immediately</label>\n        <input type=\"checkbox\" class=\"form-control\" formControlName=\"runImmediately\">\n    </div>\n\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <ng-container *ngFor=\"let param of params\">\n                <ng-container [ngSwitch]=\"param.type\">\n                    <div class=\"input\" *ngSwitchCase=\"'BODY'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"flex-row\">\n                            <div>BODY: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"btn-icon margin-horizontal-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'PATH'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"flex-row\">\n                            <div>PATH: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"btn-icon margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'QUERY'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"flex-row\">\n                            <div>QUERY: {{param.name}}</div>\n\n                            <button type=\"button\" class=\"btn-icon margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button type=\"button\" class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <button type=\"button\" class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); addParam()\">\n                <span class=\"fas fa-plus\"></span>\n            </button>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\">\n                <div>success</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"success\" [parent]=\"this\"></relation-node-output>\n            </div>\n\n            <div class=\"output\">\n                <div>error</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"error\" [parent]=\"this\"></relation-node-output>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {extend} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ConfigureRestParameterData, ConfigureRestParameterSAComponent} from '../misc/components';\nimport {RestRelationsOptions} from '../rest.options';\nimport {RestParam} from '../misc/interfaces';\nimport {RestRelationsOptionsModel} from './restNode.model';\n\n/**\n * Relations node component for rest\n */\n@Component(\n{\n    selector: 'rest-node',\n    templateUrl: 'restNode.component.html',\n    // styleUrls: ['negationNode.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RestNodeSAComponent extends RelationsNodeBase<RestRelationsOptions> implements RelationsNode<RestRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets rest parameters\n     */\n    protected get params(): RestParam[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            params: [],\n            url: null,\n            method: null,\n            runImmediately: true,\n        };\n\n        return (this.metadata.relationsOptions.params ??= []);\n    }\n\n    /**\n     * Instance of form that is being used\n     */\n    protected form: FormGroup<FormModelGroup<RestRelationsOptions>>;\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,)\n    {\n        super(changeDetector, element);\n\n        this.form = formModelBuilder.build<RestRelationsOptions>(new RestRelationsOptionsModel(null));\n        this.form.valueChanges.subscribe(value =>\n        {\n            if(this.metadata?.relationsOptions)\n            {\n                extend(this.metadata.relationsOptions, value);\n            }\n        });\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new parameter\n     */\n    protected async addParam(): Promise<void>\n    {\n        const param: RestParam = \n        {\n            configurable: false,\n            name: null,\n            type: 'PATH',\n            value: null,\n        };\n\n        if(await this.configureRestParameter(param))\n        {\n            this.params.push(param);\n        }\n    }\n\n    /**\n     * Removes parameter\n     * @param param - Param to be removed\n     */\n    protected removeParam(param: RestParam): void\n    {\n        const index = this.params.indexOf(param);\n\n        if(index >= 0)\n        {\n            this.params.splice(index, 1);\n        }\n    }\n\n    /**\n     * Configures rest parameter\n     * @param param - Parameter to be configured\n     */\n    protected async configureRestParameter(param: RestParam): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(param));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureRestParameterSAComponent, ConfigureRestParameterData, true|undefined|null>(ConfigureRestParameterSAComponent,\n        {\n            title: 'configure rest parameter',\n            width: '60vw',\n            data:\n            {\n                parameter: param,\n                hasBody: param.type === 'BODY' ? false : !!this.params.find(itm => itm.type === 'BODY')\n            }\n        }).afterClosed());\n\n        if(!result)\n        {\n            extend(param, original);\n        }\n\n        return result ?? false;\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override metadataSet(): void\n    {\n        if(!this.metadata?.relationsOptions)\n        {\n            return;\n        }\n\n        this.form.patchValue(this.metadata.relationsOptions);\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {RestNodeSAComponent} from '../node/restNode.component';\n\n/**\n * Rest relations metadata\n */\nexport class RestRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Rest',\n        description: 'Restfull requests',\n        group: 'Http',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = RestNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {InjectionToken} from '@angular/core';\nimport {DynamicItemLoader, DynamicModuleDataExtractor, DynamicModuleProvider, MetadataHistoryManager} from '@anglr/dynamic';\nimport {Observable} from 'rxjs';\n\nimport {RelationsModuleTypes, RelationsNodeDef} from './types';\nimport {RelationsNodeMetadata} from '../interfaces';\n\n/**\n * Injection token for relations module types data extractors\n */\nexport const RELATIONS_MODULE_TYPES_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('RELATIONS_MODULE_TYPES_DATA_EXTRACTORS');\n\n/**\n * Injection token for relations module types providers\n */\nexport const RELATIONS_MODULE_TYPES_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('RELATIONS_MODULE_TYPES_PROVIDERS');\n\n/**\n * Injection token for relations module types loader\n */\nexport const RELATIONS_MODULE_TYPES_LOADER: InjectionToken<DynamicItemLoader<RelationsModuleTypes>> = new InjectionToken<DynamicItemLoader<RelationsModuleTypes>>('RELATIONS_MODULE_TYPES_LOADER');\n\n/**\n * Injection token for relations nodes data extractors\n */\nexport const RELATIONS_NODES_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('RELATIONS_NODES_DATA_EXTRACTORS');\n\n/**\n * Injection token for relations nodes providers\n */\nexport const RELATIONS_NODES_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('RELATIONS_NODES_PROVIDERS');\n\n/**\n * Injection token for relations nodes loader\n */\nexport const RELATIONS_NODES_LOADER: InjectionToken<DynamicItemLoader<RelationsNodeDef>> = new InjectionToken<DynamicItemLoader<RelationsNodeDef>>('RELATIONS_NODES_LOADER');\n\n/**\n * Injection token for observables that allows refreshing of nodes palatte items\n */\nexport const REFRESH_PALETTE_OBSERVABLES: InjectionToken<Observable<void>[]> = new InjectionToken<Observable<void>[]>('REFRESH_PALETTE_OBSERVABLES');\n\n/**\n * Injection token for relations history manager\n */\nexport const RELATIONS_HISTORY_MANAGER: InjectionToken<MetadataHistoryManager<RelationsNodeMetadata[]>> = new InjectionToken<MetadataHistoryManager<RelationsNodeMetadata[]>>('RELATIONS_HISTORY_MANAGER');","import {isPresent} from '@jscrpt/common';\n\nimport {DynamicItemDefData, DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from '../../services';\n\n/**\n * Module with default export\n */\ninterface ɵDynamicModuleWithDefault<TData = any> extends DynamicModule\n{\n    /**\n     * Default export value\n     */\n    default?: TData;\n}\n\n/**\n * Extracts dynamic data which is module exports as default export\n */\nexport const defaultExportExtractor: DynamicModuleDataExtractorFn<DynamicItemDefData> = (module, logger) =>\n{\n    const localModule = module as ɵDynamicModuleWithDefault;\n\n    logger?.debug('defaultExportExtractor: trying to extract default dynamic data');\n\n    if(isPresent(localModule.default))\n    {\n        return {\n            data: localModule.default\n        };\n    }\n\n    return null;\n};","import {Provider, SimpleChange, SimpleChanges, ValueProvider} from '@angular/core';\nimport {NEVER} from 'rxjs';\n\nimport {PackageSource} from '../interfaces';\nimport {PACKAGE_SOURCES} from './tokens';\n\n/**\n * Adds simple change into simple changes object\n * @param changes - Object with changes to be added to\n * @param key - Key under wich should be change stored\n * @param currentValue - Current value that is being changed\n * @param previousValue - Previous value that is being changed\n * @param firstChange - Indication whether is first change, defaults to false\n */\nexport function addSimpleChange<TObj, TValue = any>(changes: SimpleChanges, key: Extract<keyof TObj, string>, currentValue: TValue|undefined|null, previousValue: TValue|undefined|null, firstChange: boolean = false): void\n{\n    changes[key] = <SimpleChange>\n    {\n        currentValue,\n        previousValue,\n        firstChange,\n        isFirstChange: () => firstChange,\n    };\n}\n\n/**\n * Gets provider for static package source\n * @param packageName - Name of package for which will be provider created\n */\nexport function provideStaticPackageSource(packageName: string): Provider\n{\n    return <ValueProvider>\n    {\n        provide: PACKAGE_SOURCES,\n        useValue: <PackageSource>\n        {\n            packages: [packageName],\n            packagesChange: NEVER,\n            refresh()\n            {\n            }\n        },\n        multi: true,\n    };\n}\n\n/**\n * Gets json from its string representation\n * @param jsonString - Json string to be parsed into json\n */\nexport function getJson<TResult = any>(jsonString: string): TResult|null\n{\n    try\n    {\n        return JSON.parse(jsonString);\n    }\n    catch\n    {\n        return null;\n    }\n}"],"names":["RestParamModel","constructor","value","type","configurable","name","mapValuesToThis","this","i0","ConfigureRestParameterSAComponent","data","formModelBuilder","form","build","parameter","valueChanges","subscribe","extend","TITLED_DIALOG_DATA","selectors","standalone","features","FormModelBuilder","decls","vars","consts","template","CommonModule","i2","ReactiveFormsModule","i3","MatDialogModule","i4","encapsulation","changeDetection","RestRelationsOptionsModel","url","method","runImmediately","ctx_r5","param_r1","$event","preventDefault","stopPropagation","ctx_r13","ctx_r21","RestNodeSAComponent","RelationsNodeBase","changeDetector","element","dialog","super","metadata","relationsOptions","params","_a","_b","addParam","param","configureRestParameter","push","removeParam","index","indexOf","splice","original","JSON","parse","stringify","result","lastValueFrom","open","title","width","hasBody","find","itm","afterClosed","metadataSet","patchValue","ctx","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","RestRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze","RELATIONS_MODULE_TYPES_DATA_EXTRACTORS","InjectionToken","RELATIONS_MODULE_TYPES_PROVIDERS","RELATIONS_MODULE_TYPES_LOADER","RELATIONS_NODES_DATA_EXTRACTORS","RELATIONS_NODES_PROVIDERS","RELATIONS_NODES_LOADER","REFRESH_PALETTE_OBSERVABLES","RELATIONS_HISTORY_MANAGER","defaultExportExtractor","module","logger","localModule","debug","isPresent","default","addSimpleChange","changes","key","currentValue","previousValue","firstChange","isFirstChange","provideStaticPackageSource","packageName","provide","PACKAGE_SOURCES","useValue","packages","packagesChange","NEVER","refresh","multi","getJson","jsonString"],"sourceRoot":""}