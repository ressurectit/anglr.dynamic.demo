{"version":3,"file":"7329.chunk.862b2bec87a5d965cb8f.js","mappings":"mYAMAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAqB,WACCA,EAAAA,EAAAA,EAAAA,0BAAsBA,EAAAA,KACxCA,EAAAA,GAAAA,EAAAA,0BACJA,EAAAA,K,CCQO,IAAMC,EAAN,MAUHC,YAAoBC,GAAA,KAAAA,kBAAAA,EAHV,KAAAC,SAAmB,CAK7B,CAOOC,WAEHC,KAAKH,kBAAkBI,aAAaC,EAAAA,EAAAA,oBACxC,G,iCAtBSP,GAAkB,W,kBAAlBA,EAAkBQ,UAAAA,CAAAA,CAAAA,mBAAAC,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,OAAAA,SAAAA,EAAAA,MAAAA,cAAAA,EAAAA,SAAAA,CAAAA,EAAAA,QAAAA,CAAAA,EAAAA,SAAAC,SAAAA,SAAAA,EAAAA,GAAA,MDjB/Bb,EAAAA,GAAAA,EAAAA,MAAAA,CAAK,cAC6CA,EAAAA,EAAC,SAADA,WAAA,+BAC1CA,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,EAAAA,SAAKA,EAAAA,IAAAA,KAInBA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GAKAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAK,WACiBA,EAAAA,EAAAA,EAAAA,oBAAgBA,EAAAA,KAClCA,EAAAA,GAAAA,EAAAA,oBACJA,EAAAA,M,MARMA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,EAAAA,S,iECWOC,GAAkB,UAD9Ba,EAAAA,EAAAA,GAAe,CAACC,KAAM,MAAI,6BAWgBC,EAAAA,KAV9Bf,GCfN,MAAMgB,EACb,CACIhB,G,0BCsBG,IAAMiB,EAAN,Q,iCAAMA,EAAqB,E,kBAArBA,I,sBAXLC,EAAAA,EACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EAAAA,mBAQKJ,GAAqB,UADjCK,EAAAA,EAAAA,GAAaN,IACDC,E,wEChBP,MAAOI,EAOFE,uBAEH,MAAO,CACHC,SAAUH,EACVI,UACA,EACIC,EAAAA,EAAAA,OAGZ,E,iCAhBSL,EAAsB,E,kBAAtBA,I,iECaP,SAAUR,EAAec,GAG3B,OAAO,SAAuCC,GAE1C,MAAMC,EAAKF,EAEXE,EAAGC,UAAiBF,EAEpB,MAAMG,EAAwDH,EAgB9D,OAdGI,EAAAA,EAAAA,IAAQD,EAAwBE,cAE/BC,OAAOC,eAAeP,EACA,cACA,CACIQ,YAAY,EACZC,cAAc,EACdC,UAAU,EACVC,MAAO,KAIrCR,EAAwBE,YAAYO,KAAKX,GAElCD,CACX,CACJ,C","sources":["webpack://ng-universal-demo/./app/pages/+relationsStatic/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsStatic/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsStatic/relationsStatic.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsStatic/relationsStatic.module.ts","webpack://ng-universal-demo/../relations/src/modules/dynamicRelations.module.ts","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts"],"sourcesContent":["<div>\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"visible = !visible\">\n        <span>click</span>\n    </button>\n</div>\n\n<div *ngIf=\"visible\">\n    <div class=\"bold\">relations sample click</div>\n    <relations-sample-click></relations-sample-click>\n</div>\n\n<div>\n    <div class=\"bold\">relations result</div>\n    <relations-result></relations-result>\n</div>","import {Component, ChangeDetectionStrategy, OnInit} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsManager} from '@anglr/dynamic/relations';\n\nimport {DemoData} from '../../../services/demoData';\n\n/**\n * Page for displaying relations\n */\n@Component(\n{\n    selector: 'relations-view',\n    templateUrl: 'relations.component.html',\n    // styleUrls: ['relations.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\nexport class RelationsComponent implements OnInit\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is relations sample click component visible\n     */\n    protected visible: boolean = true;\n\n    //######################### constructor #########################\n    constructor(private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._relationsManager.setRelations(DemoData.relationsStaticDemo);\n    }\n}","import {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    RelationsComponent,\n];","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsModule} from '@anglr/dynamic/relations';\n\nimport {components} from './relationsStatic.routes';\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Module for relations with static components samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        RelationsSampleClickSAComponent,\n        RelationsResultSAComponent,\n        DynamicRelationsModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsStaticModule\n{\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {provideRelations} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic relations rendering\n */\n@NgModule(\n{\n})\nexport class DynamicRelationsModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsModule>\n    {\n        return {\n            ngModule: DynamicRelationsModule,\n            providers:\n            [\n                provideRelations(),\n            ]\n        };\n    }\n}","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}"],"names":["i0","RelationsComponent","constructor","_relationsManager","visible","ngOnInit","this","setRelations","DemoData","selectors","decls","vars","consts","template","ComponentRoute","path","RelationsManager","components","RelationsStaticModule","CommonModule","RelationsSampleClickSAComponent","RelationsResultSAComponent","DynamicRelationsModule","ModuleRoutes","static","ngModule","providers","provideRelations","route","target","rt","component","routeDecoratedComponent","isBlank","routeValues","Object","defineProperty","enumerable","configurable","writable","value","push"],"sourceRoot":""}