{"version":3,"file":"2159.chunk.78f657234a3e26849f96.js","mappings":"mZAAAA,EAAAA,GAAAA,EAAAA,MAAAA,E,yBAGIA,EAAAA,GAAAA,EAAAA,G,mBAAcA,EAAAA,EAAAA,0BAAAA,EAAAA,mBAAAA,WAAAA,EAAAA,I,ECuCZ,MAAOC,UAAuCC,EAAAA,EAO7BC,YAGZC,KAAKC,mBAAmBC,sBAAwBF,KAAKC,mBAAmBE,YAEvEH,KAAKC,mBAAmBG,aAEhC,E,6DAdSP,KAA8B,GAA9BA,EAA8B,E,qBAA9BA,EAA8BQ,UAAAA,CAAAA,CAAAA,yBAAAC,YAAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAjBvC,CAEI,CACIC,QAASC,EAAAA,GACTC,WAAY,KAAMC,EAAAA,EAAAA,IAAOC,EAAAA,GAAoBC,kCAGjD,CACIL,QAASI,EAAAA,EACTF,WAAY,IAED,IAAIE,EAAAA,EAAmBf,MAGzC,SAAAiB,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,QAAAA,cAAAA,EAAAA,OAAAA,YAAAA,CAAAA,YAAAA,IAAAA,CAAAA,EAAAA,eAAAA,CAAAA,EAAAA,4BAAAC,SAAAA,SAAAA,EAAAA,G,GAAA,MDvCLrB,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GAEAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,I,oBAF0BA,EAAAA,EAAAA,QAAAA,EAAAA,mBAAAA,qBAAAA,CAAgD,a,iBCqBlEsB,EAAAA,EAAY,IACZC,EAAAA,GAAkCC,OAAAA,CAAAA,qCAAAC,gBAAAA,G","sources":["webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/designer/placeholderDesigner.component.html","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/designer/placeholderDesigner.component.ts"],"sourcesContent":["<div class=\"placeholder\" *ngIf=\"!placeholderHandler.placeholderContainer; else container\"></div>\n\n<ng-template #container>\n    <ng-container [layoutComponentRenderer]=\"placeholderHandler.getOptions(id)\"></ng-container>\n</ng-template>","import {Component, ChangeDetectionStrategy, FactoryProvider, inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LayoutComponent, LayoutComponentRendererSADirective, LAYOUT_COMPONENT_TRANSFORM} from '@anglr/dynamic/layout';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\nimport {PlaceholderSAComponent} from '../placeholder.component';\nimport {PlaceholderComponentOptions} from '../placeholder.options';\nimport {PlaceholderHandler} from '../../../services';\nimport {ComponentWithId} from '../../../interfaces';\n\n/**\n * Component used for displaying placeholder designer\n */\n@Component(\n{\n    selector: 'placeholder-designer',\n    templateUrl: 'placeholderDesigner.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_COMPONENT_TRANSFORM,\n            useFactory: () => inject(PlaceholderHandler).layoutDesignerComponentTransform,\n        },\n        <FactoryProvider>\n        {\n            provide: PlaceholderHandler,\n            useFactory: () =>\n            {\n                return new PlaceholderHandler(PlaceholderDesignerSAComponent);\n            }\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlaceholderDesignerSAComponent extends PlaceholderSAComponent implements LayoutComponent<PlaceholderComponentOptions>, ComponentWithId\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override afterInit(): void\n    {\n        //only when displaying container\n        if(this.placeholderHandler.placeholderContainer && this.placeholderHandler.designMode)\n        {\n            this.placeholderHandler.initOptions();\n        }\n    }\n}"],"names":["i0","PlaceholderDesignerSAComponent","PlaceholderSAComponent","afterInit","this","placeholderHandler","placeholderContainer","designMode","initOptions","selectors","standalone","features","provide","LAYOUT_COMPONENT_TRANSFORM","useFactory","inject","PlaceholderHandler","layoutDesignerComponentTransform","decls","vars","consts","template","CommonModule","LayoutComponentRendererSADirective","styles","changeDetection"],"sourceRoot":""}