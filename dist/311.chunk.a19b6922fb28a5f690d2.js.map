{"version":3,"file":"311.chunk.a19b6922fb28a5f690d2.js","mappings":"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","sources":["webpack://ng-universal-demo/../../../../src/modules/position/modules/position.module.ts","webpack://ng-universal-demo/../layout-editor/src/directives/designerMinDimension/designerMinDimension.directive.ts","webpack://ng-universal-demo/../layout-editor/src/directives/copyDesignerStyles/copyDesignerStyles.directive.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesignerOverlayFor/layoutDesignerOverlayFor.component.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesignerOverlayFor/layoutDesignerOverlayFor.component.html","webpack://ng-universal-demo/../../../../src/modules/position/directives/positionTo/positionTo.directive.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesigner/layoutDesigner.component.html","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesigner/layoutDesigner.component.ts","webpack://ng-universal-demo/../layout-editor/src/components/layoutDesigner/type.ts","webpack://ng-universal-demo/../layout/src/components/layoutComponentBase/layoutComponentBase.ts","webpack://ng-universal-demo/../../../../src/services/position/position.utils.ts","webpack://ng-universal-demo/../../../../src/cdk/drag-drop/drag-drop-module.ts","webpack://ng-universal-demo/../../../src/utils/async.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\n\nimport {PositionToDirective} from '../directives/positionTo/positionTo.directive';\n\n/**\n * Module for position to directive\n */\n@NgModule(\n{\n    imports:\n    [\n    ],\n    declarations:\n    [\n        PositionToDirective\n    ],\n    exports:\n    [\n        PositionToDirective\n    ]\n})\nexport class PositionModule\n{\n}\n","import {ContentChild, Directive, ElementRef, EmbeddedViewRef, OnDestroy, OnInit} from '@angular/core';\nimport {LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {Subscription} from 'rxjs';\n\n/**\n * Applies min dimensions to designed element, so it can be visible event when it is empty\n */\n@Directive(\n{\n    selector: '[designerMinWidth]',\n    standalone: true\n})\nexport class DesignerMinDimensionSADirective implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Instance of resize observer\n     */\n    protected _observer?: ResizeObserver;\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Instance of layout component renderer\n     */\n    @ContentChild(LayoutComponentRendererSADirective, {static: true})\n    protected _layoutComponentRendererDirective?: LayoutComponentRendererSADirective;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._observer = new ResizeObserver(changes =>\n        {\n            for(const change of changes)\n            {\n                this._updatedDimensions(change.contentRect);\n            }\n        });\n\n        this._initSubscriptions.add(this._layoutComponentRendererDirective?.componentChange.subscribe(componentRef =>\n        {\n            if(!componentRef)\n            {\n                this._observer?.disconnect();\n\n                return;\n            }\n\n            const element = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n            this._updatedDimensions(element.getBoundingClientRect());\n\n            this._observer?.observe(element);\n        }));\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._observer?.disconnect();\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods #########################\n\n    protected _updatedDimensions(rect: DOMRect): void\n    {\n        //no height, apply min height\n\n        if(rect.height != 30)\n        {\n            if(rect.height <= 0)\n            {\n                this._element.nativeElement.style.minHeight = '30px';\n            }\n            else\n            {\n                this._element.nativeElement.style.minHeight = '';\n            }\n        }\n\n        if(rect.width != 30)\n        {\n            //no width, apply min width\n            if(rect.width <= 0)\n            {\n                this._element.nativeElement.style.minWidth = '30px';\n            }\n            else\n            {\n                this._element.nativeElement.style.minWidth = '';\n            }\n        }\n    }\n}","import {Directive, ElementRef, Input} from '@angular/core';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\n\nimport {LayoutEditorMetadataExtractor} from '../../services';\n\n/**\n * Copies designer styles that should be applied to element\n */\n@Directive(\n{\n    selector: '[copyDesignerStyles]',\n    exportAs: 'copyDesignerStyles',\n    standalone: true\n})\nexport class CopyDesignerStylesSADirective<TOptions = any>\n{\n    //######################### protected fields #########################\n\n    /**\n     * Designed component metadata\n     */\n    public _metadata: LayoutComponentMetadata<TOptions>|undefined|null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Designed component metadata\n     */\n    @Input('copyDesignerStyles')\n    public get metadata(): LayoutComponentMetadata<TOptions>|undefined|null\n    {\n        return this._metadata;\n    }\n    public set metadata(value: LayoutComponentMetadata<TOptions>|undefined|null)\n    {\n        this._metadata = value;\n\n        this._copyDesignerStyles();\n    }\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _metadataExtractor: LayoutEditorMetadataExtractor,)\n    {\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Copies designer styles if necessary\n     */\n    protected async _copyDesignerStyles(): Promise<void>\n    {\n        if(!this._metadata)\n        {\n            return;\n        }\n\n        const metadata = await this._metadataExtractor.extractMetadata(this._metadata);\n        const applyDesignerStyles = metadata?.applyDesignerStyles;\n\n        if(applyDesignerStyles)\n        {\n            applyDesignerStyles(this._metadata.options, this._element.nativeElement.style);\n        }\n    }\n}","import {Component, ChangeDetectionStrategy, ElementRef, EmbeddedViewRef, OnInit, OnDestroy, Input, ChangeDetectorRef} from '@angular/core';\nimport {LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\n\n/**\n * Component displaying layout designer layout overlay\n */\n@Component(\n{\n    selector: '[layoutDesignerOverlayFor]',\n    templateUrl: 'layoutDesignerOverlayFor.component.html',\n    styleUrls: ['layoutDesignerOverlayFor.component.css'],\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutDesignerOverlayForSAComponent implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Instance of mutation observer\n     */\n    protected _observer?: MutationObserver;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of element that is monitored\n     */\n    protected _htmlElement: HTMLElement|undefined;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Instance of layout component renderer\n     */\n    @Input('layoutDesignerOverlayFor')\n    public layoutComponentRendererDirective?: LayoutComponentRendererSADirective;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _changeDetector: ChangeDetectorRef,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._observer = new MutationObserver(() => this._changeDetector.detectChanges());\n\n        //TODO: make this working\n        this._htmlElement = (this.layoutComponentRendererDirective?.componentRef?.hostView as EmbeddedViewRef<any>)?.rootNodes?.[0];\n\n        if(this._htmlElement)\n        {\n            this._observer?.observe(this._htmlElement, {attributeFilter: ['style']});\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._observer?.disconnect();\n    }\n}","<div class=\"margin-top-div\" [style.height]=\"_htmlElement?.style?.marginTop\"></div>\n<div class=\"margin-bottom-div\" [style.height]=\"_htmlElement?.style?.marginBottom\"></div>\n<div class=\"margin-left-div\" [style.width]=\"_htmlElement?.style?.marginLeft\"></div>\n<div class=\"margin-right-div\" [style.width]=\"_htmlElement?.style?.marginRight\"></div>\n<div class=\"padding-top-div\" [style.height]=\"_htmlElement?.style?.paddingTop\"></div>\n<div class=\"padding-bottom-div\" [style.height]=\"_htmlElement?.style?.paddingBottom\"></div>\n<div class=\"padding-left-div\" [style.width]=\"_htmlElement?.style?.paddingLeft\"></div>\n<div class=\"padding-right-div\" [style.width]=\"_htmlElement?.style?.paddingRight\"></div>\n<div class=\"border-top-div\" [style.height]=\"_htmlElement?.style?.borderTop\"></div>\n<div class=\"border-bottom-div\" [style.height]=\"_htmlElement?.style?.borderBottom\"></div>\n<div class=\"border-left-div\" [style.width]=\"_htmlElement?.style?.borderLeft\"></div>\n<div class=\"border-right-div\" [style.width]=\"_htmlElement?.style?.borderRight\"></div>","import {Directive, Input, ElementRef, OnChanges, SimpleChanges, Inject, Output, EventEmitter} from '@angular/core';\nimport {nameof, isPresent, isString} from '@jscrpt/common';\n\nimport {applyPositionResult, Position, PositionPlacement, PositionOptions} from '../../../../services/position';\nimport {POSITION} from '../../../../types/tokens';\n\n/**\n * Sets position of attached element relative to provided element\n */\n@Directive(\n{\n    selector: '[positionTo]'\n})\nexport class PositionToDirective implements OnChanges\n{\n    //######################### protected fields #########################\n\n    /**\n     * Position placement value\n     */\n    protected _placement: PositionPlacement|null|undefined;\n\n    /**\n     * Html element which is used as source for positioning\n     */\n    protected _source!: HTMLElement;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Gets or sets html element which is used as source for positioning\n     */\n    @Input('positionTo')\n    public get source(): HTMLElement\n    {\n        return this._source;\n    }\n    public set source(value: HTMLElement)\n    {\n        if(value instanceof ElementRef)\n        {\n            this._source = (value as ElementRef).nativeElement;\n\n            return;\n        }\n\n        this._source = value;\n    }\n\n    /**\n     * Gets or sets position placement value\n     */\n    @Input()\n    public get placement(): PositionPlacement|null|undefined\n    {\n        return this._placement;\n    }\n    public set placement(value: PositionPlacement|null|undefined)\n    {\n        if(isString(value))\n        {\n            this._placement = PositionPlacement[value as keyof typeof PositionPlacement];\n\n            return;\n        }\n\n        this._placement = value;\n    }\n\n    // //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when flip occurs during positioning\n     */\n    @Output()\n    public flip: EventEmitter<void> = new EventEmitter<void>();\n\n    //######################### constructor #########################\n    constructor(protected _target: ElementRef<HTMLElement>,\n                @Inject(POSITION) protected _position: Position)\n    {\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n\n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if((nameof<PositionToDirective>('source') in changes ||\n            nameof<PositionToDirective>('placement') in changes) &&\n           isPresent(this.source))\n        {\n            this._applyPosition();\n        }\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Applies position according to specified parameters to specified elements\n     */\n    protected async _applyPosition(): Promise<void>\n    {\n        const options: Partial<PositionOptions> =\n        {\n        };\n\n        if(this._placement)\n        {\n            options.placement = this._placement;\n        }\n\n        const result = await this._position.placeElement(this._target.nativeElement,\n                                                         this._source,\n                                                         options).toPromise();\n\n        applyPositionResult(result);\n\n        if(result.flip)\n        {\n            this.flip.next();\n        }\n    }\n\n    //######################### ng language server #########################\n    \n    /**\n     * Custom input type for `placement` input\n     */\n    public static ngAcceptInputType_placement: PositionPlacement|undefined|null|keyof typeof PositionPlacement;\n\n    //######################### ng language server #########################\n    \n    /**\n     * Custom input type for `positionTo` input\n     */\n    public static ngAcceptInputType_positionTo: HTMLElement|ElementRef<HTMLElement>;\n}\n","<div class=\"designer-overlay\" \n     #layoutDesigner\n     cdkDrag\n     cdkDropList\n     designerMinWidth\n     connectDropLists\n     [id]=\"id\"\n     [copyDesignerStyles]=\"_renderedType\"\n     [cdkDragData]=\"{metadata: _renderedType, parentId: _parent?._renderedType?.id}\"\n     [cdkDragDisabled]=\"dragDisabled\"\n     [cdkDropListEnterPredicate]=\"canDrop\"\n     [cdkDropListOrientation]=\"_orientation\"\n     (mouseleave)=\"_hideOverlay($event)\"\n     (mouseover)=\"_showOverlay($event)\"\n     (cdkDropListDropped)=\"addDescendant($event)\"\n     (click)=\"_selectComponent($event)\"\n     (dblclick)=\"_unselectComponent($event)\">\n    <layout-editor-drag-placeholder class=\"mat-elevation-z6\" *cdkDragPlaceholder></layout-editor-drag-placeholder>\n    <layout-editor-drag-preview class=\"mat-elevation-z4\" *cdkDragPreview [editorMetadata]=\"_editorMetadata\" [layoutMetadata]=\"_renderedType\"></layout-editor-drag-preview>\n    <ng-template #renderer=\"layoutComponentRenderer\" [layoutComponentRenderer]=\"_renderedType\" [layoutComponentRendererDisableTransformer]=\"true\"></ng-template>\n\n    <ng-container *ngIf=\"highlighted || selected\">\n        <div class=\"designer-overlay-border\"></div>\n        <div class=\"designer-overlay-layout\" [layoutDesignerOverlayFor]=\"renderer\"></div>\n\n        <div class=\"designer-overlay-title\"\n             [positionTo]=\"layoutDesigner\"\n             placement=\"TopStart\">{{_editorMetadata?.metaInfo?.name ?? _renderedType?.name}}</div>\n\n        <div *ngIf=\"!!_parent && _parent._editorMetadata?.removeDescendant\" class=\"designer-overlay-remove\" (click)=\"_remove()\">x</div>\n    </ng-container>\n</div>\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, SkipSelf, Optional, Inject, OnDestroy, Injector, ViewChild} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CdkDragDrop, DragDropModule, DropListOrientation} from '@angular/cdk/drag-drop';\nimport {Logger, LOGGER, PositionModule} from '@anglr/common';\nimport {DynamicItemLoader} from '@anglr/dynamic';\nimport {LayoutComponent, LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {LayoutComponentBase, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {Func, isPresent} from '@jscrpt/common';\nimport {Subscription} from 'rxjs';\n\nimport {LayoutDesignerComponentOptions} from './layoutDesigner.options';\nimport {ConnectDropListsSADirective, CopyDesignerStylesSADirective, DesignerMinDimensionSADirective} from '../../directives';\nimport {LayoutEditorMetadataExtractor, LayoutEditorMetadataManager} from '../../services';\nimport {LayoutComponentDragData} from '../../interfaces';\nimport {LayoutEditorDragPreviewSAComponent} from '../layoutEditorDragPreview/layoutEditorDragPreview.component';\nimport {LayoutEditorDragPlaceholderSAComponent} from '../layoutEditorDragPlaceholder/layoutEditorDragPlaceholder.component';\nimport {LayoutDesignerOverlayForSAComponent} from '../layoutDesignerOverlayFor/layoutDesignerOverlayFor.component';\nimport {LayoutEditorMetadataDescriptor} from '../../decorators';\n\n//TODO: when new is clicked only after event new item can be dropped into \n\n/**\n * Component used as designer component wrapper for layout component\n */\n@Component(\n{\n    selector: 'layout-designer-component',\n    templateUrl: 'layoutDesigner.component.html',\n    styleUrls: ['layoutDesigner.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        PositionModule,\n        DragDropModule,\n        LayoutEditorDragPreviewSAComponent,\n        LayoutEditorDragPlaceholderSAComponent,\n        LayoutDesignerOverlayForSAComponent,\n        DesignerMinDimensionSADirective,\n        CopyDesignerStylesSADirective,\n        ConnectDropListsSADirective,\n        LayoutComponentRendererSADirective,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutDesignerSAComponent extends LayoutComponentBase<LayoutDesignerComponentOptions> implements LayoutComponent<LayoutDesignerComponentOptions>, OnDestroy\n{\n    //######################### public properties #########################\n\n    /**\n     * Component identifier\n     */\n    public get id(): string\n    {\n        return this._options?.typeMetadata?.id ?? '';\n    }\n\n    //######################### protected fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Indication whether item can be dropped here\n     */\n    protected _canDropValue: boolean = false;\n\n    /**\n     * Layout editor metadata\n     */\n    protected _editorMetadata: LayoutEditorMetadataDescriptor<LayoutDesignerComponentOptions>|null = null;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is component selected\n     */\n    protected get selected(): boolean\n    {\n        return this._layoutEditorMetadataManager.selectedComponent === this._options?.typeMetadata.id;\n    }\n\n    /**\n     * Indication whether is component highlighted\n     */\n    protected get highlighted(): boolean\n    {\n        return this._layoutEditorMetadataManager.highlightedComponent === this._options?.typeMetadata.id;\n    }\n\n    /**\n     * Metadata for rendered type\n     */\n    protected _renderedType: LayoutComponentMetadata|undefined|null;\n\n    /**\n     * Orientation of drop list\n     */\n    protected _orientation: DropListOrientation = 'vertical';\n\n    //######################### protected properties - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override get element(): ElementRef<HTMLElement>\n    {\n        return this._designerElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override get extensionsOptions(): any|undefined|null\n    {\n        return this._options?.typeMetadata.options;\n    }\n\n    //######################### protected properties - children #########################\n\n    /**\n     * Instance of designer div element\n     */\n    @ViewChild('layoutDesigner', {static: true})\n    protected _designerElement!: ElementRef<HTMLElement>;\n\n    //######################### public properties #########################\n\n    /**\n     * Indication whether drag is disabled for component\n     */\n    public get dragDisabled(): boolean\n    {\n        return !this._parent || !!this._editorMetadata?.metaInfo?.dragDisabled;\n    }\n\n    /**\n     * Gets predicate that returns indication whether item can be dropped into this list\n     */\n    public canDrop: Func<boolean> = () => this._canDropValue;\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                injector: Injector,\n                protected _getter: DynamicItemLoader,\n                protected _metadataExtractor: LayoutEditorMetadataExtractor,\n                protected _layoutEditorMetadataManager: LayoutEditorMetadataManager,\n                @Inject(LOGGER) @Optional() logger?: Logger,\n                @SkipSelf() @Optional() protected _parent?: LayoutDesignerSAComponent,)\n    {\n        super(changeDetector, element, injector, logger);\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    public override async initialize(options: LayoutDesignerComponentOptions|undefined|null): Promise<void>\n    {\n        if(!options)\n        {\n            return;\n        }\n\n        this._options = options;\n\n        //TODO: optimize\n        this._initSubscriptions.add(this._layoutEditorMetadataManager.selectedChange.subscribe(() => this._changeDetector.detectChanges()));\n        this._initSubscriptions.add(this._layoutEditorMetadataManager.highlightedChange.subscribe(() => this._changeDetector.detectChanges()));\n\n        this._editorMetadata = await this._metadataExtractor.extractMetadata(options.typeMetadata);\n        this._canDropValue = this._editorMetadata?.canDropMetadata?.(options.typeMetadata.options) ?? false;\n        this._layoutEditorMetadataManager.registerLayoutDesignerComponent(this, options.typeMetadata.id, this._parent?._options?.typeMetadata.id);\n        \n        super.initialize(options);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public override ngOnDestroy(): void\n    {\n        this._logger?.debug('LayoutDesignerSAComponent: Destroying component {@data}', {id: this._options?.typeMetadata.id});\n\n        this._initSubscriptions.unsubscribe();\n\n        super.ngOnDestroy();\n\n        if(this._options)\n        {\n            this._layoutEditorMetadataManager.unregisterLayoutDesignerComponent(this._options.typeMetadata.id);\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Adds descentant component metadata to this component metadata\n     * @param dragData - Data from drag n drop event\n     */\n    public addDescendant(dragData: CdkDragDrop<LayoutComponentDragData, LayoutComponentDragData, LayoutComponentDragData>): void\n    {\n        if(!this._options)\n        {\n            return;\n        }\n\n        const parentId = dragData.item.data.parentId;\n        this._logger?.debug('LayoutDesignerSAComponent: Adding descendant {@data}', {id: dragData.item.data.metadata.id, parent: this._options.typeMetadata.id});\n\n        //already added to tree, removing old reference\n        if(parentId)\n        {\n            this._layoutEditorMetadataManager.getComponent(parentId)?._removeDescendant(dragData.item.data.metadata.id);\n        }\n\n        this._editorMetadata?.addDescendant?.(dragData.item.data.metadata, this._options.typeMetadata.options, dragData.currentIndex);\n        this._canDropValue = this._editorMetadata?.canDropMetadata?.(this._options.typeMetadata.options) ?? false;\n\n        this._renderedType = {...this._options.typeMetadata};\n        this._changeDetector.markForCheck();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Removes descendant metadata from this component metadata\n     * @param id - Id of descendant to be removed\n     */\n    protected _removeDescendant(id: string): void\n    {\n        if(!this._options)\n        {\n            return;\n        }\n\n        this._logger?.debug('LayoutDesignerSAComponent: Removing descendant {@data}', {id: this._options.typeMetadata.id, child: id});\n\n        this._editorMetadata?.removeDescendant?.(id, this._options.typeMetadata.options);\n        this._canDropValue = this._editorMetadata?.canDropMetadata?.(this._options.typeMetadata.options) ?? false;\n        this._renderedType = {...this._options.typeMetadata};\n        this._changeDetector.markForCheck();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Shows designer overlay\n     * @param event - Mouse event that occured\n     */\n    protected _showOverlay(event: Event): void\n    {\n        this._logger?.verbose('LayoutDesignerComponent: Showing overlay for {@type}', {name: this._options?.typeMetadata.name, id: this._options?.typeMetadata.id});\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._layoutEditorMetadataManager.highlightComponent(this._options?.typeMetadata.id);\n    }\n\n    /**\n     * Hides designer overlay\n     * @param event - Mouse event that occured\n     */\n    protected _hideOverlay(event: Event): void\n    {\n        if(isPresent(this._parent))\n        {\n            return;\n        }\n\n        this._logger?.verbose('LayoutDesignerComponent: Hiding overlay for {@type}', {name: this._options?.typeMetadata.name, id: this._options?.typeMetadata.id});\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._layoutEditorMetadataManager.cancelHighlightedComponent();\n    }\n\n    /**\n     * Marks component as selected\n     * @param event - Event that occured\n     */\n    protected _selectComponent(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if(this._options)\n        {\n            this._layoutEditorMetadataManager.selectComponent(this._options.typeMetadata.id);\n        }\n    }\n\n    /**\n     * Unselects selected component\n     * @param event - Event that occured\n     */\n    protected _unselectComponent(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._layoutEditorMetadataManager.unselectComponent();\n    }\n\n    /**\n     * Removes itself from tree\n     */\n    protected _remove(): void\n    {\n        if(!this._parent || !this._options)\n        {\n            return;\n        }\n\n        this._parent._removeDescendant(this._options.typeMetadata.id);\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override _optionsSet(): void\n    {\n        if(!this._options)\n        {\n            return;\n        }\n\n        this._renderedType = {...this._options.typeMetadata};\n        \n        this._orientation = this._editorMetadata?.isHorizontalDrop?.(this._options.typeMetadata.options) ? 'horizontal' : 'vertical';\n    }\n}","import {LayoutDesignerSAComponent} from './layoutDesigner.component';\n\nexport default LayoutDesignerSAComponent;","import {ChangeDetectorRef, Directive, ElementRef, Inject, Injector, OnDestroy, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemExtension} from '@anglr/dynamic';\n\nimport {LayoutComponent} from '../../interfaces';\n\n/**\n * Base component for layout component\n */\n@Directive()\nexport abstract class LayoutComponentBase<TOptions> implements LayoutComponent<TOptions>, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Options used for rendering this component\n     */\n    protected _options: TOptions|undefined|null;\n\n    /**\n     * Array of extensions that are registered for component\n     */\n    protected _extensions: DynamicItemExtension<TOptions>[] = [];\n\n    //######################### protected properties #########################\n\n    /**\n     * Gets element that is used within extension\n     */\n    protected get element(): ElementRef<HTMLElement>\n    {\n        return this._element;\n    }\n\n    /**\n     * Gets options that are used within extension\n     */\n    protected get extensionsOptions(): any|undefined|null\n    {\n        return this._options;\n    }\n\n    //######################### public properties - implementation of LayoutComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get options(): TOptions|undefined|null\n    {\n        return this._options;\n    }\n    public set options(value: TOptions|undefined|null)\n    {\n        this._options = value;\n\n        this._optionsSet();\n\n        const extensionsOptions = this.extensionsOptions;\n\n        if(extensionsOptions)\n        {\n            for(const ext of this._extensions)\n            {\n                ext.optionsChange(extensionsOptions);\n            }\n        }\n    }\n\n    //######################### constructor #########################\n    constructor(protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>,\n                protected _injector: Injector,\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        for(const ext of this._extensions)\n        {\n            ext.destroy();\n        }\n    }\n\n    //######################### public methods - implementation of LayoutComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async initialize(options: TOptions|undefined|null): Promise<void>\n    {\n        if(!options)\n        {\n            return;\n        }\n\n        this.options = options;\n\n        const extensionsOptions = this.extensionsOptions;\n\n        if(extensionsOptions)\n        {\n            for(const ext of this._extensions)\n            {\n                ext.initialize(this._injector, this.element, extensionsOptions);\n            }\n        }\n    }\n\n    /**\n     * Registers extensions for component\n     * @param extensions - Array of extensions that should be added to component\n     */\n    public registerExtensions(extensions: DynamicItemExtension[]): void\n    {\n        this._extensions = extensions;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Method that is called when options are set, allows register custom code that is called when options are changing\n     */\n    protected _optionsSet(): void\n    {\n    }\n}","import {PositionResult} from './position.interface';\n\n/**\n * Applies `PositionResult` to target element\n * @param result - Result of positioning process to be applied\n */\nexport function applyPositionResult(result: PositionResult<HTMLElement>): void\n{\n    Object.assign(result.target.style,\n                  {\n                      top: '0',\n                      left: '0',\n                      transform: `translate(${result.x}px, ${result.y}px)`,\n                  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {CdkDropList} from './directives/drop-list';\nimport {CdkDropListGroup} from './directives/drop-list-group';\nimport {CdkDrag} from './directives/drag';\nimport {CdkDragHandle} from './directives/drag-handle';\nimport {CdkDragPreview} from './directives/drag-preview';\nimport {CdkDragPlaceholder} from './directives/drag-placeholder';\nimport {DragDrop} from './drag-drop';\n\n@NgModule({\n  declarations: [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  exports: [\n    CdkScrollableModule,\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  providers: [DragDrop],\n})\nexport class DragDropModule {}\n","import {PromiseOr} from '../types/async';\n\n/**\n * Resolves `PromiseOr` value\n * @param value - Value to be solved\n */\nexport async function resolvePromiseOr<TResult>(value: PromiseOr<TResult>): Promise<TResult>\n{\n    if(value instanceof Promise)\n    {\n        return await value;\n    }\n\n    return value;\n}\n"],"names":["PositionModule","DesignerMinDimensionSADirective","constructor","_element","_initSubscriptions","Subscription","ngOnInit","this","_observer","ResizeObserver","changes","change","_updatedDimensions","contentRect","add","_layoutComponentRendererDirective","componentChange","subscribe","componentRef","disconnect","element","hostView","rootNodes","getBoundingClientRect","observe","ngOnDestroy","unsubscribe","rect","height","nativeElement","style","minHeight","width","minWidth","i0","selectors","contentQueries","LayoutComponentRendererSADirective","CopyDesignerStylesSADirective","_metadataExtractor","metadata","_metadata","value","_copyDesignerStyles","applyDesignerStyles","extractMetadata","options","inputs","exportAs","standalone","LayoutDesignerOverlayForSAComponent","_changeDetector","MutationObserver","detectChanges","_htmlElement","layoutComponentRendererDirective","attributeFilter","features","attrs","decls","vars","consts","template","PositionToDirective","_target","_position","flip","EventEmitter","source","_source","ElementRef","placement","_placement","isString","PositionPlacement","ngOnChanges","nameof","isPresent","_applyPosition","result","placeElement","toPromise","applyPositionResult","next","POSITION","ctx_r2","LayoutDesignerSAComponent","LayoutComponentBase","changeDetector","injector","_getter","_layoutEditorMetadataManager","logger","_parent","super","_canDropValue","_editorMetadata","_orientation","canDrop","id","_options","typeMetadata","selected","selectedComponent","highlighted","highlightedComponent","_designerElement","extensionsOptions","dragDisabled","metaInfo","initialize","selectedChange","highlightedChange","canDropMetadata","registerLayoutDesignerComponent","_logger","debug","unregisterLayoutDesignerComponent","addDescendant","dragData","parentId","item","data","parent","getComponent","_removeDescendant","currentIndex","_renderedType","markForCheck","child","removeDescendant","_showOverlay","event","verbose","name","preventDefault","stopPropagation","highlightComponent","_hideOverlay","cancelHighlightedComponent","_selectComponent","selectComponent","_unselectComponent","unselectComponent","_remove","_optionsSet","isHorizontalDrop","LOGGER","viewQuery","ctx","CommonModule","i3","i4","DragDropModule","i5","LayoutEditorDragPreviewSAComponent","LayoutEditorDragPlaceholderSAComponent","ConnectDropListsSADirective","styles","changeDetection","_injector","_extensions","ext","optionsChange","destroy","registerExtensions","extensions","invalidateVisuals","Object","assign","target","top","left","transform","x","y","DragDrop","CdkScrollableModule","resolvePromiseOr","Promise"],"sourceRoot":""}