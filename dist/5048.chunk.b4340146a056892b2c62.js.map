{"version":3,"file":"5048.chunk.b4340146a056892b2c62.js","mappings":"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","sources":["webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../layout-relations/src/modules/dynamicLayoutRelationsEditor.module.ts","webpack://ng-universal-demo/../../../../src/cdk/clipboard/pending-copy.ts","webpack://ng-universal-demo/../../../../src/cdk/clipboard/clipboard.ts","webpack://ng-universal-demo/../../../../material/src/directives/debugDataCopyClick/debugDataCopyClick.directive.ts","webpack://ng-universal-demo/../../../../src/directives/goBack/goBack.directive.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.html"],"sourcesContent":["var map = {\n\t\"./checkbox/type\": [\n\t\t27614,\n\t\t7614\n\t],\n\t\"./datepicker/type\": [\n\t\t80902,\n\t\t902\n\t],\n\t\"./formGroup/type\": [\n\t\t66556,\n\t\t6556\n\t],\n\t\"./numberField/type\": [\n\t\t98092,\n\t\t8092\n\t],\n\t\"./period/type\": [\n\t\t38938,\n\t\t8938\n\t],\n\t\"./radio/type\": [\n\t\t54501,\n\t\t4501\n\t],\n\t\"./select/type\": [\n\t\t35742,\n\t\t5742\n\t],\n\t\"./textField/type\": [\n\t\t73813,\n\t\t3813\n\t],\n\t\"./textarea/type\": [\n\t\t82299,\n\t\t2299\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;","export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|undefined|null, parentControl: AbstractControl|undefined|null, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","import {ModuleWithProviders, NgModule, Type} from '@angular/core';\nimport {DynamicLayoutEditorModule} from '@anglr/dynamic/layout-editor';\nimport {DynamicRelationsEditorModule, StaticComponentsRegister} from '@anglr/dynamic/relations-editor';\n\nimport {provideLayoutRelationsEditor, provideLayoutRelationsEditorWithStatic} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic layout relations editor rendering\n */\n@NgModule(\n{\n    exports:\n    [\n        DynamicLayoutEditorModule,\n        DynamicRelationsEditorModule,\n    ]\n})\nexport class DynamicLayoutRelationsEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicLayoutRelationsEditorModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicLayoutRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutRelationsEditorModule,\n            providers:\n            [\n                provideLayoutRelationsEditor(),\n            ]\n        };\n    }\n\n    /**\n     * Creates DynamicLayoutRelationsEditorModule extended with providers for static components\n     * @param staticRegister - Type that represents implementation of static components register\n     */\n    public static withStaticComponents(staticRegister: Type<StaticComponentsRegister>): ModuleWithProviders<DynamicLayoutRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutRelationsEditorModule,\n            providers:\n            [\n                provideLayoutRelationsEditorWithStatic(staticRegister, ),\n            ]\n        };\n    }\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nexport class PendingCopy {\n  private _textarea: HTMLTextAreaElement | undefined;\n\n  constructor(text: string, private readonly _document: Document) {\n    const textarea = (this._textarea = this._document.createElement('textarea'));\n    const styles = textarea.style;\n\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    // The element needs to be inserted into the fullscreen container, if the page\n    // is in fullscreen mode, otherwise the browser won't execute the copy command.\n    (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n  }\n\n  /** Finishes copying the text. */\n  copy(): boolean {\n    const textarea = this._textarea;\n    let successful = false;\n\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement as HTMLOrSVGElement | null;\n\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n\n    return successful;\n  }\n\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {PendingCopy} from './pending-copy';\n\n/**\n * A service for copying text to the clipboard.\n */\n@Injectable({providedIn: 'root'})\nexport class Clipboard {\n  private readonly _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text: string): boolean {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n\n    return successful;\n  }\n\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text: string): PendingCopy {\n    return new PendingCopy(text, this._document);\n  }\n}\n","import {Directive, HostBinding, HostListener, Input} from '@angular/core';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\n/**\n * Directive that allows to copy data to clipboard on click on debug-data\n */\n@Directive(\n{\n    selector: 'debug-data[copyClick]'\n})\nexport class DebugDataCopyClickDirective\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data to be copied as serialized json\n     */\n    @Input('copyClick')\n    public data: any;\n\n    //######################### public properties - host #########################\n\n    /**\n     * Adds css class clickable to this element\n     * \n     * @internal\n     */\n    @HostBinding('class.clickable')\n    public clickable: boolean = true;\n\n    //######################### constructor #########################\n    constructor(protected _clipboard: Clipboard)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Copies data to clipboard on click\n     * \n     * @internal\n     */\n    @HostListener('click')\n    public copyData(): void\n    {\n        this._clipboard.copy(JSON.stringify(this.data, null, 4));\n    }\n}","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]',\n    standalone: true,\n})\nexport class GoBackSADirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}","import {Component, ChangeDetectionStrategy, OnDestroy, OnInit, ChangeDetectorRef, ElementRef, signal, WritableSignal} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DebugDataEnabledService} from '../../services/debugDataEnabled/debugDataEnabled.service';\n\n/**\n * Name of css class for enabled debug data\n */\nconst ENABLED = 'enabled';\n\n/**\n * Component used for displaying debug data\n */\n@Component(\n{\n    selector: 'debug-data',\n    templateUrl: 'debugData.component.html',\n    styleUrls: ['debugData.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DebugDataComponent implements OnDestroy, OnInit\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscription for changes of debug data enabled\n     */\n    protected debugDataEnabledChangeSubscription: Subscription|undefined|null;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is debug data enabled\n     *\n     * @internal\n     */\n    protected enabled: WritableSignal<boolean> = signal(false);\n\n    //######################### constructor #########################\n    constructor(protected debugDataEnabledSvc: DebugDataEnabledService,\n                protected changeDetector: ChangeDetectorRef,\n                protected element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.enabled.set(this.debugDataEnabledSvc.enabled);\n        this.setEnabledCssClass();\n\n        this.debugDataEnabledChangeSubscription = this.debugDataEnabledSvc.enabledChange.subscribe(() =>\n        {\n            this.enabled.set(this.debugDataEnabledSvc.enabled);\n            this.setEnabledCssClass();\n\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this.debugDataEnabledChangeSubscription?.unsubscribe();\n        this.debugDataEnabledChangeSubscription = null;\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Sets enabled css class according enabled state\n     */\n    protected setEnabledCssClass(): void\n    {\n        if(this.enabled())\n        {\n            this.element.nativeElement.classList.add(ENABLED);\n        }\n        else\n        {\n            this.element.nativeElement.classList.remove(ENABLED);\n        }\n    }\n}","<ng-template [ngIf]=\"enabled()\">\r\n    <ng-content></ng-content>\r\n</ng-template>"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","FormComponentControlType","FormDynamicModuleItemsProvider","constructor","_logger","tryToGet","source","_this","package","debug","item","name","i0","LOGGER","factory","ɵfac","FormDynamicModuleTypesProvider","moduleName","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","provide","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","FORM_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","FORM_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideFormLayout","provideFormLayoutEditor","provideStaticPackageSource","provideFormLayoutRelationsEditor","provideFormLayoutRelations","getFormControl","controlName","parentControl","defaultControlType","FormControl","defaultValue","get","getControlForType","type","FormArray","FormGroup","DynamicLayoutRelationsEditorModule","withProviders","ngModule","providers","provideLayoutRelationsEditor","withStaticComponents","staticRegister","provideLayoutRelationsEditorWithStatic","DynamicLayoutEditorModule","DynamicRelationsEditorModule","PendingCopy","text","_document","textarea","this","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","fullscreenElement","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","DOCUMENT","providedIn","DebugDataCopyClickDirective","_clipboard","data","clickable","copyData","JSON","stringify","i1","selectors","hostVars","hostBindings","rf","ctx","GoBackSADirective","_location","goBack","event","preventDefault","stopPropagation","back","$event","standalone","DebugDataComponent_ng_template_0_Template","_c0","ENABLED","DebugDataComponent","debugDataEnabledSvc","changeDetector","element","debugDataEnabledChangeSubscription","enabled","signal","ngOnInit","set","setEnabledCssClass","enabledChange","subscribe","detectChanges","ngOnDestroy","unsubscribe","nativeElement","classList","add","ngContentSelectors","decls","vars","consts","template","dependencies","i2","changeDetection"],"sourceRoot":""}