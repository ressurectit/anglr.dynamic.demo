{"version":3,"file":"2611.chunk.337aa57756ef4784470c.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/services/staticComponentsRegister/staticComponentsRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.module.ts","webpack://ng-universal-demo/../relations/src/misc/providers.ts","webpack://ng-universal-demo/../relations/src/misc/utils.ts","webpack://ng-universal-demo/../relations/src/modules/dynamicRelations.module.ts","webpack://ng-universal-demo/../../../../src/modules/goBack/directives/goBack/goBack.directive.ts","webpack://ng-universal-demo/../../../../src/modules/goBack/modules/goBack.module.ts"],"sourcesContent":["import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Static components register for demo app\n */\n@Injectable()\nexport class StaticComponentsRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[RelationsResultSAComponent.relationsId] = RelationsResultSAComponent;\n        result[RelationsSampleClickSAComponent.relationsId] = RelationsSampleClickSAComponent;\n\n        return result;\n    }\n}","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {provideRelationsEditorWithStatic, RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StaticComponentsRegister} from '../../../services/staticComponentsRegister/staticComponentsRegister.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'editor-view',\n    templateUrl: 'editor.component.html',\n    providers:\n    [\n        provideRelationsEditorWithStatic(StaticComponentsRegister),\n        // provideTinyMceRelations(),\n        provideTinyMceRelationsEditor(),\n        // provideHandlebarsRelations(),\n        provideHandlebarsRelationsEditor(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected metadata: RelationsNodeMetadata[] = DemoData.relationsStaticWithEditorDemo;\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    protected save(): void\n    {\n        DemoData.relationsStaticWithEditorDemo = this._manager.getMetadata();\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-left-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"save()\">\n        <span>save</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"metadata\"></relations-editor>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {provideRelations, RelationsManager} from '@anglr/dynamic/relations';\nimport {provideTinyMceRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelations} from '@anglr/dynamic/handlebars-components';\n\nimport {DemoData} from '../../../services/demoData';\n\n//TODO: check why relations does not work after returning from editor\n\n/**\n * Page for displaying relations\n */\n@Component(\n{\n    selector: 'relations-view',\n    templateUrl: 'relations.component.html',\n    // styleUrls: ['relations.component.scss'],\n    providers:\n    [\n        provideRelations(),\n        provideTinyMceRelations(),\n        // provideTinyMceRelationsEditor(),\n        provideHandlebarsRelations(),\n        // provideHandlebarsRelationsEditor(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\nexport class RelationsComponent\n{\n    //######################### constructor #########################\n    constructor(private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._relationsManager.setRelations(DemoData.relationsStaticWithEditorDemo);\n    }\n}","<div class=\"margin-bottom-big\">\n    <a routerLink=\"/relationsWithEditor/editor\">editor</a>\n</div>\n\n<div>\n    <div class=\"bold\">relations sample click</div>\n    <relations-sample-click></relations-sample-click>\n</div>\n\n<div>\n    <div class=\"bold\">relations result</div>\n    <relations-result></relations-result>\n</div>","import {EditorComponent} from './editor/editor.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    RelationsComponent,\n    EditorComponent,\n];","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {GoBackModule} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsModule} from '@anglr/dynamic/relations';\nimport {DynamicRelationsEditorModule} from '@anglr/dynamic/relations-editor';\n\nimport {components} from './relationsWithEditor.routes';\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Module for relations with editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        RouterModule,\n        GoBackModule,\n        DynamicRelationsModule,\n        DynamicRelationsEditorModule,\n        RelationsSampleClickSAComponent,\n        RelationsResultSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithEditorModule\n{\n}","import {ClassProvider, FactoryProvider, inject, Optional} from '@angular/core';\nimport {DefaultDynamicModuleItemsProvider, DynamicItemLoader, DynamicModuleDataExtractor} from '@anglr/dynamic';\nimport {LOGGER, Logger} from '@anglr/common';\n\nimport {RELATIONS_COMPONENTS_LOADER, RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS, RELATIONS_COMPONENTS_MODULE_PROVIDERS} from './tokens';\nimport {relationsExportExtractor} from './extractors';\nimport {isRelationsComponentDef} from './utils';\n\n/**\n * Provider for default package relations components provider\n */\nexport const DEFAULT_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: DefaultDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for default relations components extractor\n */\nexport const DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR: FactoryProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS,\n    useFactory: (logger?: Logger) =>\n    {\n        return new DynamicModuleDataExtractor([\n                                                  relationsExportExtractor,\n                                              ],\n                                              logger);\n    },\n    deps: [[new Optional(), LOGGER]],\n    multi: true\n};\n\n/**\n * Provider for relations components loader\n */\nexport const RELATIONS_COMPONENTS_LOADER_PROVIDER: FactoryProvider =\n{\n    provide: RELATIONS_COMPONENTS_LOADER,\n    useFactory: () => new DynamicItemLoader(inject(RELATIONS_COMPONENTS_MODULE_PROVIDERS),\n                                            inject(RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS),\n                                            isRelationsComponentDef,\n                                            inject(LOGGER, {optional: true}) ?? undefined)\n};","import {Provider} from '@angular/core';\nimport {DynamicItemLoaderValidatorFn} from '@anglr/dynamic';\nimport {isBlank, isType} from '@jscrpt/common';\n\nimport {RelationsComponentDef} from './types';\nimport {DEFAULT_RELATIONS_COMPONENTS_PROVIDER, DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR, RELATIONS_COMPONENTS_LOADER_PROVIDER} from './providers';\nimport {RelationsComponentManager, RelationsManager, RelationsProcessor} from '../services';\n\n/**\n * Checks whether data is relations component def\n * @param data - Data to be checked\n */\nexport const isRelationsComponentDef: DynamicItemLoaderValidatorFn<RelationsComponentDef> = function(data): data is RelationsComponentDef\n{\n    //type is required and must be type\n    if(isBlank(data?.data) || !isType(data.data))\n    {\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Default providers for relations subpackage\n */\nexport function provideRelations(): Provider[]\n{\n    return [\n        DEFAULT_RELATIONS_COMPONENTS_PROVIDER,\n        DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR,\n        RELATIONS_COMPONENTS_LOADER_PROVIDER,\n        RelationsComponentManager,\n        RelationsManager,\n        RelationsProcessor,\n    ];\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {provideRelations} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic relations rendering\n */\n@NgModule(\n{\n})\nexport class DynamicRelationsModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsModule>\n    {\n        return {\n            ngModule: DynamicRelationsModule,\n            providers:\n            [\n                provideRelations(),\n            ]\n        };\n    }\n}","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]'\n})\nexport class GoBackDirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}","import {NgModule} from '@angular/core';\n\nimport {GoBackDirective} from '../directives';\n\n/**\n * Module for GoBack directive\n */\n@NgModule(\n{\n    declarations:\n    [\n        GoBackDirective\n    ],\n    exports:\n    [\n        GoBackDirective\n    ]\n})\nexport class GoBackModule\n{\n}\n"],"names":["StaticComponentsRegister","Register","getDefinedTypes","result","RelationsResultSAComponent","RelationsSampleClickSAComponent","t","factory","EditorComponent","constructor","_manager","metadata","DemoData","save","this","getMetadata","i0","selectors","features","provideRelationsEditorWithStatic","provideTinyMceRelationsEditor","provideHandlebarsRelationsEditor","decls","vars","consts","template","ctx","ComponentRoute","path","RelationsNodeManager","RelationsComponent","_relationsManager","ngOnInit","setRelations","provideRelations","provideTinyMceRelations","provideHandlebarsRelations","RelationsManager","components","RelationsWithEditorModule","RouterModule","GoBackModule","DynamicRelationsModule","DynamicRelationsEditorModule","ModuleRoutes","DEFAULT_RELATIONS_COMPONENTS_PROVIDER","provide","RELATIONS_COMPONENTS_MODULE_PROVIDERS","useClass","DefaultDynamicModuleItemsProvider","multi","DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR","RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS","useFactory","logger","DynamicModuleDataExtractor","relationsExportExtractor","deps","Optional","LOGGER","RELATIONS_COMPONENTS_LOADER_PROVIDER","RELATIONS_COMPONENTS_LOADER","DynamicItemLoader","inject","isRelationsComponentDef","optional","undefined","data","isBlank","isType","RelationsComponentManager","RelationsProcessor","ngModule","providers","GoBackDirective","_location","goBack","event","preventDefault","stopPropagation","back","i1"],"sourceRoot":""}