{"version":3,"file":"966.chunk.8fcc97020efaca53c799.js","mappings":"6XACIA,EAAAA,GAAA,E,sBAIAA,EAAAA,GAAA,E,CCoBE,MAAOC,UAAsCC,EAAAA,EAZnDC,WAAAA,G,oBAmBc,KAAAC,iBAA+CC,EAAAA,EAAAA,IAAOC,EAAAA,GAKtD,KAAAC,gBAAuCF,EAAAA,EAAAA,IAAOG,EAAAA,E,CAOxD,eAAcC,GAEV,MAAMC,EAASC,KAAKP,gBAAgBQ,UAAUD,KAAKE,SAASC,IAAIC,EAAAA,GAA2BC,IAE3F,IAAIN,EAEA,MAAM,IAAIO,MAAM,4DAGpB,MAAMC,EAAkBP,KAAKJ,eAAeO,IAAIJ,EAAOM,KAAKG,WAAWC,SAEvE,IAAIF,EAEA,MAAM,IAAID,MAAM,qEAGpB,OAAOC,CACX,CAOmBG,MAAAA,G,SAEfC,EAAAX,KAAKY,aAAYC,SAAMF,EAANE,OACjB,CACIR,GAAI,qBAAoBS,EAAAA,EAAAA,IAAW,MACnCC,KAAM,mBACNC,QAAS,kBACTC,YAAa,SACbC,QACA,CACIC,QAAS,SAIjBC,EAAApB,KAAKY,aAAYO,UAAOC,EAAPD,QACjB,CACId,GAAI,sBAAqBS,EAAAA,EAAAA,IAAW,MACpCC,KAAM,oBACNC,QAAS,kBACTC,YAAa,UACbC,QACA,CACIC,QAAS,OAGrB,CAKmBE,eAAAA,GAEf,MAAMvB,EAAcE,KAAKF,YAEnBwB,EAAyB,CAAC,GAChCC,EAAAA,EAAAA,IAAiCD,EAAS,UAAWxB,EAAYoB,QAASpB,EAAYoB,SAAS,GAE/FpB,EAAY0B,mBAAmBF,GAC/BxB,EAAY2B,mBAChB,E,wDAlFSnC,KAA6BoC,GAA7BpC,EAA6B,G,qBAA7BA,EAA6BqC,UAAA,2BAAAC,YAAA,EAAAC,SAAA,CAAAxC,EAAAA,EAAAA,EAAAA,GAAAyC,MAAA,EAAAC,KAAA,EAAAC,OAAA,gCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDzB1C7C,EAAAA,GAAA,SACIA,EAAAA,EAAA,EAAA+C,EAAA,sBACJ/C,EAAAA,KAEAA,EAAAA,GAAA,SACIA,EAAAA,EAAA,EAAAgD,EAAA,sBACJhD,EAAAA,M,MALmBA,EAAAA,EAAA,GAAAA,EAAAA,EAAA,gCAAA8C,EAAAjB,QAAA,KAAAiB,EAAAjB,QAAAL,QAIAxB,EAAAA,EAAA,GAAAA,EAAAA,EAAA,gCAAA8C,EAAAjB,QAAA,KAAAiB,EAAAjB,QAAAC,S,gBCgBXmB,EAAAA,GAAkCC,OAAA,sCAAAC,gBAAA,G","sources":["webpack://ng-universal-demo/../grid-components/src/dynamicItems/gridColumn/designer/gridColumnDesigner.component.html","webpack://ng-universal-demo/../grid-components/src/dynamicItems/gridColumn/designer/gridColumnDesigner.component.ts"],"sourcesContent":["<div>\n    <ng-container *layoutComponentRenderer=\"options?.header\"/>\n</div>\n\n<div>\n    <ng-container *layoutComponentRenderer=\"options?.content\"/>\n</div>","import {Component, ChangeDetectionStrategy, inject, SimpleChanges} from '@angular/core';\nimport {LayoutComponent, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {LayoutDesignerSAComponent, LayoutEditorMetadataManager, LayoutEditorRenderer} from '@anglr/dynamic/layout-editor';\nimport {addSimpleChange} from '@anglr/dynamic';\nimport {HostDisplayBlockStyle} from '@anglr/common';\nimport {generateId} from '@jscrpt/common';\n\nimport {GridColumnComponentOptions} from '../gridColumn.options';\nimport {GridColumnSAComponent} from '../gridColumn.component';\n\n/**\n * Component used for displaying grid column designer\n */\n@Component(\n{\n    selector: 'grid-column-designer',\n    templateUrl: 'gridColumnDesigner.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridColumnDesignerSAComponent extends GridColumnSAComponent implements LayoutComponent<GridColumnComponentOptions>\n{\n    //######################### protected fields #########################\n\n    /**\n     * Instance of manager for layout editor metadata\n     */\n    protected metadataManager: LayoutEditorMetadataManager = inject(LayoutEditorMetadataManager);\n    \n    /**\n     * Instance of layout renderer\n     */\n    protected layoutRenderer: LayoutEditorRenderer = inject(LayoutEditorRenderer);\n\n    //######################### protected properties #########################\n\n    /**\n     * Gets instance of grid columns\n     */\n    protected get gridColumns(): LayoutComponent\n    {\n        const parent = this.metadataManager.getParent(this.injector.get(LayoutDesignerSAComponent).id);\n\n        if(!parent)\n        {\n            throw new Error('GridColumnDesignerSAComponent: component without parent!');\n        }\n\n        const parentComponent = this.layoutRenderer.get(parent.id)?.component?.instance;\n\n        if(!parentComponent)\n        {\n            throw new Error('GridColumnDesignerSAComponent: missing parent component instance!');\n        }\n\n        return parentComponent;\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override onInit(): void\n    {\n        this.optionsSafe.header ??=\n        {\n            id: `gridColumnHeader-${generateId(10)}`,\n            name: 'gridColumnHeader',\n            package: 'grid-components',\n            displayName: 'header',\n            options: \n            {\n                content: null,\n            },\n        };\n\n        this.optionsSafe.content ??=\n        {\n            id: `gridColumnContent-${generateId(10)}`,\n            name: 'gridColumnContent',\n            package: 'grid-components',\n            displayName: 'content',\n            options: \n            {\n                content: null,\n            },\n        };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override onOptionsChange(): void\n    {\n        const gridColumns = this.gridColumns;\n\n        const changes: SimpleChanges = {};\n        addSimpleChange<LayoutComponent>(changes, 'options', gridColumns.options, gridColumns.options, false);\n\n        gridColumns.dynamicOnChanges?.(changes);\n        gridColumns.invalidateVisuals();\n    }\n}"],"names":["i0","GridColumnDesignerSAComponent","GridColumnSAComponent","constructor","metadataManager","inject","LayoutEditorMetadataManager","layoutRenderer","LayoutEditorRenderer","gridColumns","parent","this","getParent","injector","get","LayoutDesignerSAComponent","id","Error","parentComponent","component","instance","onInit","_a","optionsSafe","header","generateId","name","package","displayName","options","content","_b","onOptionsChange","changes","addSimpleChange","dynamicOnChanges","invalidateVisuals","t","selectors","standalone","features","decls","vars","consts","template","rf","ctx","GridColumnDesignerSAComponent_ng_container_1_Template","GridColumnDesignerSAComponent_ng_container_3_Template","LayoutComponentRendererSADirective","styles","changeDetection"],"sourceRoot":""}