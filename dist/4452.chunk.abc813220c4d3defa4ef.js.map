{"version":3,"file":"4452.chunk.abc813220c4d3defa4ef.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.html","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.module.ts","webpack://ng-universal-demo/./app/services/demoRelationsPackageManager/demoRelationsPackageManager.service.ts","webpack://ng-universal-demo/../relations-editor/src/modules/dynamicRelationsEditor.module.ts","webpack://ng-universal-demo/../../../../src/internal/observable/never.ts","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../../src/modules/castPipes/pipes/asRequired/asRequired.pipe.ts","webpack://ng-universal-demo/../../../../src/cdk/drag-drop/drag-drop-module.ts","webpack://ng-universal-demo/../../../../packages/common/src/pipes/keyvalue_pipe.ts","webpack://ng-universal-demo/../../../src/decorators/bindThis.decorator.ts","webpack://ng-universal-demo/../../../src/decorators/debounceCall.decorator.ts","webpack://ng-universal-demo/../../../src/decorators/withSync.decorator.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER} from '@anglr/dynamic/relations-editor';\nimport {MetadataHistoryManager, MetadataStateManager, METADATA_STATE_MANAGER} from '@anglr/dynamic';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relationsEditor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\n@ComponentRoute({path: ':id'})\nexport class RelationsEditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected stringMetadata: string = '';\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                @Inject(METADATA_STATE_MANAGER) protected _metadataState: MetadataStateManager<RelationsNodeMetadata[]>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): RelationsNodeMetadata[]\n    {\n        return metadata;\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsDemo;\n    }\n\n    protected showMetadata(): void\n    {\n        const meta = this._metadataState.getMetadata();\n\n        this.stringMetadata = JSON.stringify(meta, null, 4);\n    }\n}\n","<div class=\"flex-row\">\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsEditor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<div class=\"flex-1 flex-row\">\n    <relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>\n\n    <div style=\"width: 300px;\" class=\"flex-column\">\n        <div>Relations metadata</div>\n\n        <div>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showMetadata()\">\n                <span>show metadata</span>\n            </button>\n        </div>\n\n        <div style=\"white-space: pre; overflow: scroll;\" class=\"thin-scrollbar flex-1\">{{stringMetadata}}</div>\n    </div>\n</div>","import {RelationsEditorComponent} from './relationsEditor/relationsEditor.component';\n\nexport const components =\n[\n    RelationsEditorComponent,\n];","import {ClassProvider, FactoryProvider, NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsEditorModule, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {MetadataStorage, PackageManager} from '@anglr/dynamic';\n\nimport {components} from './relationsEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DemoRelationsPackageManager} from '../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for relations editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        LoadSaveNewSAComponent,\n        DynamicRelationsEditorModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<RelationsNodeMetadata[]>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('RELATIONS_DATA'),\n        provideTinyMceRelationsEditor(),\n        provideHandlebarsRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ]\n})\n@ModuleRoutes(components)\nexport class RelationsEditorModule\n{\n}","import {Injectable} from '@angular/core';\nimport {PackageManager} from '@anglr/dynamic';\n\n/**\n * Relations package manager for demo app\n */\n@Injectable()\nexport class DemoRelationsPackageManager extends PackageManager\n{\n    //######################### constructor #########################\n    constructor()\n    {\n        super('RELATIONS_PACKAGES_STORE');\n    }\n}","import {ModuleWithProviders, NgModule, Type} from '@angular/core';\nimport {DefaultDynamicPackage} from '@anglr/dynamic';\n\nimport {RelationsEditorSAComponent} from '../components';\nimport {provideRelationsEditor, provideRelationsEditorWithStatic} from '../misc/utils';\nimport {StaticComponentsRegister} from '../services';\n\n/**\n * Module contains components, directives, pipes for dynamic relations editor rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        RelationsEditorSAComponent,\n    ],\n    exports:\n    [\n        RelationsEditorSAComponent,\n    ],\n})\nexport class DynamicRelationsEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsEditorModule extended with providers\n     * @param packages - Array of default packages to be used, if omitted all built-in packages are used\n     */\n    public static withProviders(packages?: DefaultDynamicPackage[]): ModuleWithProviders<DynamicRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicRelationsEditorModule,\n            providers:\n            [\n                provideRelationsEditor(packages),\n            ]\n        };\n    }\n\n    /**\n     * Creates DynamicRelationsEditorModule extended with providers for static components\n     * @param staticRegister - Type that represents implementation of static components register\n     * @param packages - Array of default packages to be used, if omitted all built-in packages are used\n     */\n    public static withStaticComponents(staticRegister: Type<StaticComponentsRegister>, packages?: DefaultDynamicPackage[]): ModuleWithProviders<DynamicRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicRelationsEditorModule,\n            providers:\n            [\n                provideRelationsEditorWithStatic(staticRegister, packages),\n            ]\n        };\n    }\n}",null,"import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}","import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Transforms type to required from nullable or undefined type\n */\n@Pipe({name: 'asRequired'})\nexport class AsRequiredTypePipe<TType> implements PipeTransform\n{\n    /**\n     * Transforms type to required from nullable or undefined type\n     * @param value - Value to be transformed\n     * @param defaultValue - Default value to be used if undefined or null\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform(value: TType|null|undefined, defaultValue: TType, _valueHash?: any): TType\n    {\n        return value ?? defaultValue;\n    }\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {CdkDropList} from './directives/drop-list';\nimport {CdkDropListGroup} from './directives/drop-list-group';\nimport {CdkDrag} from './directives/drag';\nimport {CdkDragHandle} from './directives/drag-handle';\nimport {CdkDragPreview} from './directives/drag-preview';\nimport {CdkDragPlaceholder} from './directives/drag-placeholder';\nimport {DragDrop} from './drag-drop';\n\n@NgModule({\n  declarations: [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  exports: [\n    CdkScrollableModule,\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  providers: [DragDrop],\n})\nexport class DragDropModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Pipe, PipeTransform} from '@angular/core';\n\nfunction makeKeyValuePair<K, V>(key: K, value: V): KeyValue<K, V> {\n  return {key: key, value: value};\n}\n\n/**\n * A key value pair.\n * Usually used to represent the key value pairs from a Map or Object.\n *\n * @publicApi\n */\nexport interface KeyValue<K, V> {\n  key: K;\n  value: V;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this\n * keyvalue pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\n@Pipe({\n  name: 'keyvalue',\n  pure: false,\n  standalone: true,\n})\nexport class KeyValuePipe implements PipeTransform {\n  constructor(private readonly differs: KeyValueDiffers) {}\n\n  private differ!: KeyValueDiffer<any, any>;\n  private keyValues: Array<KeyValue<any, any>> = [];\n  private compareFn: (a: KeyValue<any, any>, b: KeyValue<any, any>) => number = defaultComparator;\n\n  /*\n   * NOTE: when the `input` value is a simple Record<K, V> object, the keys are extracted with\n   * Object.keys(). This means that even if the `input` type is Record<number, V> the keys are\n   * compared/returned as `string`s.\n   */\n  transform<K, V>(\n      input: ReadonlyMap<K, V>,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>;\n  transform<K extends number, V>(\n      input: Record<K, V>, compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>;\n  transform<K extends string, V>(\n      input: Record<K, V>|ReadonlyMap<K, V>,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>;\n  transform(\n      input: null|undefined,\n      compareFn?: (a: KeyValue<unknown, unknown>, b: KeyValue<unknown, unknown>) => number): null;\n  transform<K, V>(\n      input: ReadonlyMap<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>|null;\n  transform<K extends number, V>(\n      input: Record<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>|null;\n  transform<K extends string, V>(\n      input: Record<K, V>|ReadonlyMap<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>|null;\n  transform<K, V>(\n      input: undefined|null|{[key: string]: V, [key: number]: V}|ReadonlyMap<K, V>,\n      compareFn: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number = defaultComparator):\n      Array<KeyValue<K, V>>|null {\n    if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n      return null;\n    }\n\n    if (!this.differ) {\n      // make a differ for whatever type we've been passed in\n      this.differ = this.differs.find(input).create();\n    }\n\n    const differChanges: KeyValueChanges<K, V>|null = this.differ.diff(input as any);\n    const compareFnChanged = compareFn !== this.compareFn;\n\n    if (differChanges) {\n      this.keyValues = [];\n      differChanges.forEachItem((r: KeyValueChangeRecord<K, V>) => {\n        this.keyValues.push(makeKeyValuePair(r.key, r.currentValue!));\n      });\n    }\n    if (differChanges || compareFnChanged) {\n      this.keyValues.sort(compareFn);\n      this.compareFn = compareFn;\n    }\n    return this.keyValues;\n  }\n}\n\nexport function defaultComparator<K, V>(\n    keyValueA: KeyValue<K, V>, keyValueB: KeyValue<K, V>): number {\n  const a = keyValueA.key;\n  const b = keyValueB.key;\n  // if same exit with 0;\n  if (a === b) return 0;\n  // make sure that undefined are at the end of the sort.\n  if (a === undefined) return 1;\n  if (b === undefined) return -1;\n  // make sure that nulls are at the end of the sort.\n  if (a === null) return 1;\n  if (b === null) return -1;\n  if (typeof a == 'string' && typeof b == 'string') {\n    return a < b ? -1 : 1;\n  }\n  if (typeof a == 'number' && typeof b == 'number') {\n    return a - b;\n  }\n  if (typeof a == 'boolean' && typeof b == 'boolean') {\n    return a < b ? -1 : 1;\n  }\n  // `a` and `b` are of different types. Compare their string values.\n  const aString = String(a);\n  const bString = String(b);\n  return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n","import {Func} from '../types/functions';\r\nimport {isFunction} from '../utils/lang';\r\n\r\n/**\r\n * Binds function to this, object instance where is defined, it is importat to place it in correct order with other decorators, usually should be first\r\n */\r\nexport function BindThis(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor): TypedPropertyDescriptor<Func<any, any>>\r\n{\r\n    const originalValue: Func = descriptor.value ?? descriptor.get?.();\r\n\r\n    if(!isFunction(originalValue))\r\n    {\r\n        throw new Error(`Unable to apply @BindThis decorator to '${propertyKey.toString()}', it is not a method.`);\r\n    }\r\n\r\n    return {\r\n        configurable: true,\r\n        get(this: unknown): Func\r\n        {\r\n            const bound: Func = originalValue.bind(this);\r\n\r\n            Object.defineProperty(this,\r\n                                  propertyKey,\r\n                                  {\r\n                                      value: bound,\r\n                                      configurable: true,\r\n                                      writable: true\r\n                                  });\r\n\r\n            return bound;\r\n        }\r\n    };\r\n}","import {PromiseOr} from '../types/async';\r\nimport {Action1, Func} from '../types/functions';\r\nimport {isFunction, isPresent} from '../utils/lang';\r\n\r\n/**\r\n * Adds special functionality to method call, that debounce method call for specified time\r\n * @param delay - Number of miliseconds that delays function call\r\n */\r\nexport function DebounceCall(delay: number): MethodDecorator\r\n{\r\n    return function(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor)\r\n    {\r\n        const timeout = Symbol('ɵTimeout');\r\n        const resolve = Symbol('ɵResolve');\r\n        const result = Symbol('ɵResult');\r\n        const originalValue: Func<any> = descriptor.value ?? descriptor.get?.();\r\n\r\n        if(!isFunction(originalValue))\r\n        {\r\n            throw new Error(`Unable to apply @DebounceCall() decorator to '${propertyKey.toString()}', it is not a method.`);\r\n        }\r\n\r\n        descriptor.value = function<TResult>(this: {[timeout]: number|null, [resolve]: Action1<TResult|undefined>, [result]: Promise<TResult|undefined>}, ...args: unknown[]): Promise<TResult|undefined>\r\n        {\r\n            //result variable does not exists\r\n            if(!(resolve in this) && !(result in this))\r\n            {\r\n                let resolveFn: Action1<TResult|undefined>|undefined;\r\n                const promise = new Promise<TResult|undefined>(resolve => resolveFn = resolve);\r\n\r\n                Reflect.defineProperty(this,\r\n                                       resolve,\r\n                                       {\r\n                                           writable: true,\r\n                                           value: resolveFn,\r\n                                       });\r\n\r\n                Reflect.defineProperty(this,\r\n                                       result,\r\n                                       {\r\n                                           writable: true,\r\n                                           value: promise,\r\n                                       });\r\n            }\r\n\r\n            \r\n\r\n            if(isPresent(this[timeout]))\r\n            {\r\n                clearTimeout(this[timeout]);\r\n            }\r\n\r\n            //timeout variable does not exists\r\n            if(!(timeout in this))\r\n            {\r\n                Reflect.defineProperty(this,\r\n                                       timeout,\r\n                                       {\r\n                                           writable: true,\r\n                                           value: null,\r\n                                       });\r\n            }\r\n\r\n            this[timeout] = setTimeout(async () =>\r\n            {\r\n                this[resolve](await originalValue.apply<any, any[], PromiseOr<TResult>>(this, args));\r\n                this[result] = new Promise<TResult|undefined>(resolveFn => this[resolve] = resolveFn);\r\n                this[timeout] = null;\r\n            }, delay) as any;\r\n\r\n            return this[result];\r\n        };\r\n\r\n        return descriptor;\r\n    };\r\n}","import {Func, NoopAction} from '../types/functions';\nimport {isFunction} from '../utils/lang';\n\n/**\n * Adds special functionality to async method call, that allows only to call this method only when previous execution was finished\n */\nexport function WithSync(): MethodDecorator\n{\n    return function(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor)\n    {\n        const sync = Symbol('ɵSync');\n        const originalValue: Func<any> = descriptor.value ?? descriptor.get?.();\n\n        if(!isFunction(originalValue))\n        {\n            throw new Error(`Unable to apply @WithSync() decorator to '${propertyKey.toString()}', it is not a method.`);\n        }\n\n        descriptor.value = async function<TResult>(this: {[key: symbol]: Promise<void>}, ...args: unknown[]): Promise<TResult>\n        {\n            //sync variable does not exists\n            if(!(sync in this))\n            {\n                Reflect.defineProperty(this,\n                                       sync,\n                                       {\n                                           writable: true,\n                                           value: Promise.resolve(),\n                                       });\n            }\n\n            const syncPromise = this[sync];\n            let syncResolve: NoopAction|undefined;\n            this[sync] = new Promise(resolve => syncResolve = resolve);\n            await syncPromise;\n\n            const result = await originalValue.apply<any, any[], TResult>(this, args);\n\n            syncResolve?.();\n\n            return result;\n        };\n\n        return descriptor;\n    };\n}"],"names":["RelationsEditorComponent","constructor","_store","history","_metadataState","_metadata","stringMetadata","emptyMetadata","_getMetadata","metadata","_loadDemo","this","DemoData","showMetadata","meta","getMetadata","JSON","stringify","i0","RELATIONS_HISTORY_MANAGER","METADATA_STATE_MANAGER","selectors","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","StoreDataService","MetadataHistoryManager","Object","components","RelationsEditorModule","provide","RELATIONS_METADATA_STORAGE","useFactory","store","MetadataStorage","id","getData","deps","createStoreDataServiceFactory","provideTinyMceRelationsEditor","provideHandlebarsRelationsEditor","PackageManager","useClass","DemoRelationsPackageManager","imports","LoadSaveNewSAComponent","DynamicRelationsEditorModule","ModuleRoutes","super","factory","packages","ngModule","providers","provideRelationsEditor","staticRegister","provideRelationsEditorWithStatic","RelationsEditorSAComponent","NEVER","Observable","noop","route","target","rt","component","routeDecoratedComponent","isBlank","routeValues","defineProperty","enumerable","configurable","writable","value","push","AsRequiredTypePipe","transform","defaultValue","_valueHash","DragDropModule","DragDrop","CdkScrollableModule","KeyValuePipe","differs","keyValues","compareFn","defaultComparator","input","Map","differ","find","create","differChanges","diff","compareFnChanged","forEachItem","r","key","currentValue","sort","keyValueA","keyValueB","a","b","undefined","aString","String","bString","_target","propertyKey","descriptor","originalValue","get","isFunction","Error","toString","bound","bind","DebounceCall","delay","timeout","Symbol","resolve","result","args","resolveFn","promise","Promise","Reflect","isPresent","clearTimeout","setTimeout","apply","WithSync","sync","syncPromise","syncResolve"],"sourceRoot":""}