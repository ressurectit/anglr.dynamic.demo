{"version":3,"file":"694.chunk.ecb79899d62890c484ec.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.html","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.module.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleItemsProvider/materialDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleTypesProvider/materialDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleRelationsProvider/materialDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../material-components/src/misc/providers.ts","webpack://ng-universal-demo/../material-components/src/misc/utils.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleRelationsProvider/restDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleItemsProvider/restDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/misc/providers.ts","webpack://ng-universal-demo/../rest-components/src/misc/utils.ts","webpack://ng-universal-demo/../../../../src/internal/observable/never.ts","webpack://ng-universal-demo/../material-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../../src/modules/castPipes/pipes/asRequired/asRequired.pipe.ts","webpack://ng-universal-demo/../../../../packages/common/src/pipes/keyvalue_pipe.ts","webpack://ng-universal-demo/../../../src/decorators/bindThis.decorator.ts","webpack://ng-universal-demo/../../../src/decorators/debounceCall.decorator.ts","webpack://ng-universal-demo/../../../src/decorators/withSync.decorator.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER} from '@anglr/dynamic/relations-editor';\nimport {MetadataHistoryManager, MetadataStateManager, METADATA_STATE_MANAGER} from '@anglr/dynamic';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relationsEditor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\n@ComponentRoute({path: ':id'})\nexport class RelationsEditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected stringMetadata: string = '';\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                @Inject(METADATA_STATE_MANAGER) protected _metadataState: MetadataStateManager<RelationsNodeMetadata[]>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): RelationsNodeMetadata[]\n    {\n        return metadata;\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsDemo;\n    }\n\n    protected showMetadata(): void\n    {\n        const meta = this._metadataState.getMetadata();\n\n        this.stringMetadata = JSON.stringify(meta, null, 4);\n    }\n}\n","<div class=\"flex-row\">\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsEditor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<div class=\"flex-1 flex-row\">\n    <relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>\n\n    <div style=\"width: 300px;\" class=\"flex-column\">\n        <div>Relations metadata</div>\n\n        <div>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showMetadata()\">\n                <span>show metadata</span>\n            </button>\n        </div>\n\n        <div style=\"white-space: pre; overflow: scroll;\" class=\"thin-scrollbar flex-1\">{{stringMetadata}}</div>\n    </div>\n</div>","import {RelationsEditorComponent} from './relationsEditor/relationsEditor.component';\n\nexport const components =\n[\n    RelationsEditorComponent,\n];","import {ClassProvider, FactoryProvider, NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsEditorModule, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideBasicRelationsEditor} from '@anglr/dynamic/basic-components';\nimport {provideMaterialRelationsEditor} from '@anglr/dynamic/material-components';\nimport {provideRestRelationsEditor} from '@anglr/dynamic/rest-components';\n\nimport {components} from './relationsEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DemoRelationsPackageManager} from '../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for relations editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        LoadSaveNewSAComponent,\n        DynamicRelationsEditorModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<RelationsNodeMetadata[]>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('RELATIONS_DATA'),\n        provideBasicRelationsEditor(),\n        provideMaterialRelationsEditor(),\n        provideTinyMceRelationsEditor(),\n        provideHandlebarsRelationsEditor(),\n        provideRestRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ]\n})\n@ModuleRoutes(components)\nexport class RelationsEditorModule\n{\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for material module items\n */\n@Injectable()\nexport class MaterialDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'material-components':\n            {\n                try\n                {\n                    this._logger?.debug('MaterialDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('MaterialDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for material types\n */\n@Injectable()\nexport class MaterialDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MaterialDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'material-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for material types\n */\n@Injectable()\nexport class MaterialDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MaterialDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'material-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {MaterialDynamicModuleItemsProvider, MaterialDynamicModuleRelationsProvider, MaterialDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for material package layout components provider\n */\nexport const MATERIAL_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material dynamic layout module types provider\n */\nexport const MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: MaterialDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for material dynamic relations types provider\n */\nexport const MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: MaterialDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for material package relations nodes provider\n */\nexport const MATERIAL_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material package relations components provider\n */\nexport const MATERIAL_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {MATERIAL_LAYOUT_COMPONENTS_PROVIDER, MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER, MATERIAL_RELATIONS_COMPONENTS_PROVIDER, MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER, MATERIAL_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout material subpackage\n */\nexport function provideMaterialLayout(): Provider[]\n{\n    return [\n        MATERIAL_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations material subpackage\n */\nexport function provideMaterialRelations(): Provider[]\n{\n    return [\n        MATERIAL_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor material subpackage\n */\nexport function provideMaterialLayoutEditor(): Provider[]\n{\n    return [\n        MATERIAL_LAYOUT_COMPONENTS_PROVIDER,\n        MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('material-components'),\n    ];\n}\n\n/**\n * Providers for relations editor material subpackage\n */\nexport function provideMaterialRelationsEditor(): Provider[]\n{\n    return [\n        MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER,\n        MATERIAL_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('material-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor material subpackage\n */\nexport function provideMaterialLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideMaterialRelationsEditor(),\n        ...provideMaterialLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations material subpackage\n */\nexport function provideMaterialLayoutRelations(): Provider[]\n{\n    return [\n        ...provideMaterialLayout(),\n        ...provideMaterialRelations(),\n    ];\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for rest types\n */\n@Injectable()\nexport class RestDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'rest-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for rest module items\n */\n@Injectable()\nexport class RestDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'rest-components':\n            {\n                try\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {RestDynamicModuleItemsProvider, RestDynamicModuleRelationsProvider} from '../services';\n\n/**\n * Provider for rest dynamic relations types provider\n */\nexport const REST_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: RestDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations nodes provider\n */\nexport const REST_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations components provider\n */\nexport const REST_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {REST_RELATIONS_COMPONENTS_PROVIDER, REST_RELATIONS_MODULE_TYPES_PROVIDER, REST_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for relations rest subpackage\n */\nexport function provideRestRelations(): Provider[]\n{\n    return [\n        REST_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations editor rest subpackage\n */\nexport function provideRestRelationsEditor(): Provider[]\n{\n    return [\n        REST_RELATIONS_MODULE_TYPES_PROVIDER,\n        REST_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('rest-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor rest subpackage\n */\nexport function provideRestLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideRestRelationsEditor(),\n    ];\n}\n\n/**\n * Providers for layout relations rest subpackage\n */\nexport function provideRestLayoutRelations(): Provider[]\n{\n    return [\n        ...provideRestRelations(),\n    ];\n}",null,"var map = {\n\t\"./checkbox/type\": [\n\t\t67309,\n\t\t1023,\n\t\t7309\n\t],\n\t\"./datepicker/type\": [\n\t\t2229,\n\t\t7014,\n\t\t9101,\n\t\t4262,\n\t\t6038,\n\t\t5175,\n\t\t2229\n\t],\n\t\"./expansionPanel/type\": [\n\t\t52868,\n\t\t3490,\n\t\t2868\n\t],\n\t\"./numberField/type\": [\n\t\t39310,\n\t\t7014,\n\t\t4262,\n\t\t5175,\n\t\t9310\n\t],\n\t\"./period/type\": [\n\t\t40059,\n\t\t7014,\n\t\t4262,\n\t\t5175,\n\t\t59\n\t],\n\t\"./radio/type\": [\n\t\t84978,\n\t\t1192,\n\t\t4978\n\t],\n\t\"./select/type\": [\n\t\t68235,\n\t\t7014,\n\t\t5887,\n\t\t5175,\n\t\t8235\n\t],\n\t\"./textField/type\": [\n\t\t98865,\n\t\t7014,\n\t\t4262,\n\t\t5175,\n\t\t8865\n\t],\n\t\"./textarea/type\": [\n\t\t18226,\n\t\t7014,\n\t\t4262,\n\t\t5175,\n\t\t8226\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 15033;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./rest/type\": [\n\t\t20309,\n\t\t309\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2721;\nmodule.exports = webpackAsyncContext;","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}","import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Transforms type to required from nullable or undefined type\n */\n@Pipe({name: 'asRequired'})\nexport class AsRequiredTypePipe<TType> implements PipeTransform\n{\n    /**\n     * Transforms type to required from nullable or undefined type\n     * @param value - Value to be transformed\n     * @param defaultValue - Default value to be used if undefined or null\n     * @param _valueHash - Parameter that can be used to change value, indicates that pipe input value has changed\n     */\n    public transform(value: TType|null|undefined, defaultValue: TType, _valueHash?: any): TType\n    {\n        return value ?? defaultValue;\n    }\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Pipe, PipeTransform} from '@angular/core';\n\nfunction makeKeyValuePair<K, V>(key: K, value: V): KeyValue<K, V> {\n  return {key: key, value: value};\n}\n\n/**\n * A key value pair.\n * Usually used to represent the key value pairs from a Map or Object.\n *\n * @publicApi\n */\nexport interface KeyValue<K, V> {\n  key: K;\n  value: V;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this\n * keyvalue pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\n@Pipe({\n  name: 'keyvalue',\n  pure: false,\n  standalone: true,\n})\nexport class KeyValuePipe implements PipeTransform {\n  constructor(private readonly differs: KeyValueDiffers) {}\n\n  private differ!: KeyValueDiffer<any, any>;\n  private keyValues: Array<KeyValue<any, any>> = [];\n  private compareFn: (a: KeyValue<any, any>, b: KeyValue<any, any>) => number = defaultComparator;\n\n  /*\n   * NOTE: when the `input` value is a simple Record<K, V> object, the keys are extracted with\n   * Object.keys(). This means that even if the `input` type is Record<number, V> the keys are\n   * compared/returned as `string`s.\n   */\n  transform<K, V>(\n      input: ReadonlyMap<K, V>,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>;\n  transform<K extends number, V>(\n      input: Record<K, V>, compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>;\n  transform<K extends string, V>(\n      input: Record<K, V>|ReadonlyMap<K, V>,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>;\n  transform(\n      input: null|undefined,\n      compareFn?: (a: KeyValue<unknown, unknown>, b: KeyValue<unknown, unknown>) => number): null;\n  transform<K, V>(\n      input: ReadonlyMap<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>|null;\n  transform<K extends number, V>(\n      input: Record<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>|null;\n  transform<K extends string, V>(\n      input: Record<K, V>|ReadonlyMap<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>|null;\n  transform<K, V>(\n      input: undefined|null|{[key: string]: V, [key: number]: V}|ReadonlyMap<K, V>,\n      compareFn: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number = defaultComparator):\n      Array<KeyValue<K, V>>|null {\n    if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n      return null;\n    }\n\n    if (!this.differ) {\n      // make a differ for whatever type we've been passed in\n      this.differ = this.differs.find(input).create();\n    }\n\n    const differChanges: KeyValueChanges<K, V>|null = this.differ.diff(input as any);\n    const compareFnChanged = compareFn !== this.compareFn;\n\n    if (differChanges) {\n      this.keyValues = [];\n      differChanges.forEachItem((r: KeyValueChangeRecord<K, V>) => {\n        this.keyValues.push(makeKeyValuePair(r.key, r.currentValue!));\n      });\n    }\n    if (differChanges || compareFnChanged) {\n      this.keyValues.sort(compareFn);\n      this.compareFn = compareFn;\n    }\n    return this.keyValues;\n  }\n}\n\nexport function defaultComparator<K, V>(\n    keyValueA: KeyValue<K, V>, keyValueB: KeyValue<K, V>): number {\n  const a = keyValueA.key;\n  const b = keyValueB.key;\n  // if same exit with 0;\n  if (a === b) return 0;\n  // make sure that undefined are at the end of the sort.\n  if (a === undefined) return 1;\n  if (b === undefined) return -1;\n  // make sure that nulls are at the end of the sort.\n  if (a === null) return 1;\n  if (b === null) return -1;\n  if (typeof a == 'string' && typeof b == 'string') {\n    return a < b ? -1 : 1;\n  }\n  if (typeof a == 'number' && typeof b == 'number') {\n    return a - b;\n  }\n  if (typeof a == 'boolean' && typeof b == 'boolean') {\n    return a < b ? -1 : 1;\n  }\n  // `a` and `b` are of different types. Compare their string values.\n  const aString = String(a);\n  const bString = String(b);\n  return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n","import {Func} from '../types/functions';\r\nimport {isFunction} from '../utils/lang';\r\n\r\n/**\r\n * Binds function to this, object instance where is defined, it is importat to place it in correct order with other decorators, usually should be first\r\n */\r\nexport function BindThis(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor): TypedPropertyDescriptor<Func<any, any>>\r\n{\r\n    const originalValue: Func = descriptor.value ?? descriptor.get?.();\r\n\r\n    if(!isFunction(originalValue))\r\n    {\r\n        throw new Error(`Unable to apply @BindThis decorator to '${propertyKey.toString()}', it is not a method.`);\r\n    }\r\n\r\n    return {\r\n        configurable: true,\r\n        get(this: unknown): Func\r\n        {\r\n            const bound: Func = originalValue.bind(this);\r\n\r\n            Object.defineProperty(this,\r\n                                  propertyKey,\r\n                                  {\r\n                                      value: bound,\r\n                                      configurable: true,\r\n                                      writable: true\r\n                                  });\r\n\r\n            return bound;\r\n        }\r\n    };\r\n}","import {PromiseOr} from '../types/async';\r\nimport {Action1, Func} from '../types/functions';\r\nimport {isFunction, isPresent} from '../utils/lang';\r\n\r\n/**\r\n * Adds special functionality to method call, that debounce method call for specified time\r\n * @param delay - Number of miliseconds that delays function call\r\n */\r\nexport function DebounceCall(delay: number): MethodDecorator\r\n{\r\n    return function(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor)\r\n    {\r\n        const timeout = Symbol('ɵTimeout');\r\n        const resolve = Symbol('ɵResolve');\r\n        const result = Symbol('ɵResult');\r\n        const originalValue: Func<any> = descriptor.value ?? descriptor.get?.();\r\n\r\n        if(!isFunction(originalValue))\r\n        {\r\n            throw new Error(`Unable to apply @DebounceCall() decorator to '${propertyKey.toString()}', it is not a method.`);\r\n        }\r\n\r\n        descriptor.value = function<TResult>(this: {[timeout]: number|null, [resolve]: Action1<TResult|undefined>, [result]: Promise<TResult|undefined>}, ...args: unknown[]): Promise<TResult|undefined>\r\n        {\r\n            //result variable does not exists\r\n            if(!(resolve in this) && !(result in this))\r\n            {\r\n                let resolveFn: Action1<TResult|undefined>|undefined;\r\n                const promise = new Promise<TResult|undefined>(resolve => resolveFn = resolve);\r\n\r\n                Reflect.defineProperty(this,\r\n                                       resolve,\r\n                                       {\r\n                                           writable: true,\r\n                                           value: resolveFn,\r\n                                       });\r\n\r\n                Reflect.defineProperty(this,\r\n                                       result,\r\n                                       {\r\n                                           writable: true,\r\n                                           value: promise,\r\n                                       });\r\n            }\r\n\r\n            \r\n\r\n            if(isPresent(this[timeout]))\r\n            {\r\n                clearTimeout(this[timeout]);\r\n            }\r\n\r\n            //timeout variable does not exists\r\n            if(!(timeout in this))\r\n            {\r\n                Reflect.defineProperty(this,\r\n                                       timeout,\r\n                                       {\r\n                                           writable: true,\r\n                                           value: null,\r\n                                       });\r\n            }\r\n\r\n            this[timeout] = setTimeout(async () =>\r\n            {\r\n                this[resolve](await originalValue.apply<any, any[], PromiseOr<TResult>>(this, args));\r\n                this[result] = new Promise<TResult|undefined>(resolveFn => this[resolve] = resolveFn);\r\n                this[timeout] = null;\r\n            }, delay) as any;\r\n\r\n            return this[result];\r\n        };\r\n\r\n        return descriptor;\r\n    };\r\n}","import {Func, NoopAction} from '../types/functions';\nimport {isFunction} from '../utils/lang';\n\n/**\n * Adds special functionality to async method call, that allows only to call this method only when previous execution was finished\n */\nexport function WithSync(): MethodDecorator\n{\n    return function(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor)\n    {\n        const sync = Symbol('ɵSync');\n        const originalValue: Func<any> = descriptor.value ?? descriptor.get?.();\n\n        if(!isFunction(originalValue))\n        {\n            throw new Error(`Unable to apply @WithSync() decorator to '${propertyKey.toString()}', it is not a method.`);\n        }\n\n        descriptor.value = async function<TResult>(this: {[key: symbol]: Promise<void>}, ...args: unknown[]): Promise<TResult>\n        {\n            //sync variable does not exists\n            if(!(sync in this))\n            {\n                Reflect.defineProperty(this,\n                                       sync,\n                                       {\n                                           writable: true,\n                                           value: Promise.resolve(),\n                                       });\n            }\n\n            const syncPromise = this[sync];\n            let syncResolve: NoopAction|undefined;\n            this[sync] = new Promise(resolve => syncResolve = resolve);\n            await syncPromise;\n\n            const result = await originalValue.apply<any, any[], TResult>(this, args);\n\n            syncResolve?.();\n\n            return result;\n        };\n\n        return descriptor;\n    };\n}"],"names":["RelationsEditorComponent","constructor","_store","history","_metadataState","_metadata","stringMetadata","emptyMetadata","_getMetadata","metadata","_loadDemo","this","DemoData","showMetadata","meta","getMetadata","JSON","stringify","i0","RELATIONS_HISTORY_MANAGER","METADATA_STATE_MANAGER","selectors","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","StoreDataService","MetadataHistoryManager","Object","components","RelationsEditorModule","provide","RELATIONS_METADATA_STORAGE","useFactory","store","MetadataStorage","id","getData","deps","createStoreDataServiceFactory","provideBasicRelationsEditor","provideMaterialRelationsEditor","provideTinyMceRelationsEditor","provideHandlebarsRelationsEditor","provideRestRelationsEditor","PackageManager","useClass","DemoRelationsPackageManager","imports","LoadSaveNewSAComponent","DynamicRelationsEditorModule","ModuleRoutes","MaterialDynamicModuleItemsProvider","_logger","tryToGet","source","package","debug","name","e","LOGGER","factory","MaterialDynamicModuleTypesProvider","moduleName","MaterialDynamicModuleRelationsProvider","MATERIAL_LAYOUT_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","multi","MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","MATERIAL_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","MATERIAL_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideMaterialLayout","provideMaterialLayoutEditor","provideStaticPackageSource","provideMaterialLayoutRelationsEditor","provideMaterialLayoutRelations","RestDynamicModuleRelationsProvider","RestDynamicModuleItemsProvider","REST_RELATIONS_MODULE_TYPES_PROVIDER","REST_RELATIONS_NODES_PROVIDER","REST_RELATIONS_COMPONENTS_PROVIDER","provideRestLayoutRelationsEditor","provideRestLayoutRelations","NEVER","Observable","noop","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","all","slice","keys","module","exports","route","target","rt","component","routeDecoratedComponent","isBlank","routeValues","defineProperty","enumerable","configurable","writable","value","push","AsRequiredTypePipe","transform","defaultValue","_valueHash","KeyValuePipe","differs","keyValues","compareFn","defaultComparator","input","Map","differ","find","create","differChanges","diff","compareFnChanged","forEachItem","r","key","currentValue","sort","keyValueA","keyValueB","a","b","undefined","aString","String","bString","_target","propertyKey","descriptor","originalValue","get","isFunction","toString","bound","bind","DebounceCall","delay","timeout","Symbol","result","args","resolveFn","promise","Reflect","isPresent","clearTimeout","setTimeout","apply","WithSync","sync","syncPromise","syncResolve"],"sourceRoot":""}