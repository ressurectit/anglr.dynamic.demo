{"version":3,"file":"9926.chunk.8237f0aecd5ed96c227d.js","mappings":"kVAMO,MAAMA,EAAiC,e,EAAAC,G,EAA6D,mBAAY,WAAW,8EAAmDC,kCAAmC,E,+KAAA,kBAA1K,OAAAD,EAAAE,MAAA,KAAAC,UAAA,KCmBvC,IAAMC,EAAN,MAAAC,WAAAA,GAgCI,KAAAC,OAAiB,EAKjB,KAAAC,OAAiB,EAKjB,KAAAC,kBAA8C,CAAC,EAQ/C,KAAAC,QAAiC,CAwE5C,CA5GI,oBAAWC,GAEP,OAAOC,KAAKC,iBAChB,CACA,oBAAWF,CAAiBG,GAExBF,KAAKC,kBAAoBC,EAEzBF,KAAKG,YACT,CAkCOC,WAAAA,CAAYC,KAEZC,EAAAA,EAAAA,IAA4B,WAAYD,IACxCC,EAAAA,EAAAA,IAA4B,WAAYD,IAEvCL,KAAKO,gBAEb,CAKOC,iBAAAA,GAEP,CAOUL,UAAAA,GAEN,GAAGH,KAAKD,kBAEDC,KAAKD,kBAAkBU,YAAYC,OAElC,IAAI,MAAMC,KAAQX,KAAKD,iBAAiBU,WAEjCE,GAECC,OAAOC,eAAeb,KACAW,EACA,CACIG,IAAK,SAASZ,GAEVF,KAAKH,kBAAkBc,GAAQT,EAC/BF,KAAKO,gBACT,GAM9C,CAKUA,cAAAA,GAEN,GAAIP,KAAKD,kBAAkBU,YAAYC,OAEnC,IAAK,MAAMC,KAAQX,KAAKD,iBAAiBU,WAErC,IAAKT,KAAKH,kBAAkBc,GAGxB,YADAX,KAAKF,QAAS,GAM1BE,KAAKF,OAASE,KAAKL,OAASK,KAAKJ,KACrC,IAvEOmB,EAAAA,EAAAA,IAAA,EADNC,EAAAA,EAAAA,MAAe,6DAjDPvB,GAAmBsB,EAAAA,EAAAA,IAAA,EAd/BE,EAAAA,EAAAA,GACD,CACIC,OACA,EACIZ,EAAAA,EAAAA,IAA4B,UAC5BA,EAAAA,EAAAA,IAA4B,UAEhCa,QACA,EACIb,EAAAA,EAAAA,IAA4B,cAGnCc,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwBjC,IACZK,GCvBb,S","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/logicalAnd/logicalAnd.metadata.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/logicalAnd/logicalAnd.relations.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/logicalAnd/type.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Logical and relations metadata loader\n */\nexport const LogicalAndRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/logicalAnd.relationsMetadata')).LogicalAndRelationsEditorMetadata();\n","import {SimpleChanges} from '@angular/core';\nimport {DebugData, DynamicOutput, PureRelationsComponent, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {nameof} from '@jscrpt/common';\n\nimport {LogicalAndRelationsMetadataLoader} from './logicalAnd.metadata';\nimport {LogicalAndRelationsOptions} from './logicalAnd.options';\n\n/**\n * Logical and relations component\n */\n@DebugData(\n{\n    inputs: \n    [\n        nameof<LogicalAndRelations>('cond1'),\n        nameof<LogicalAndRelations>('cond2'),\n    ],\n    outputs: \n    [\n        nameof<LogicalAndRelations>('result'),\n    ],\n})\n@PureRelationsComponent()\n@RelationsEditorMetadata(LogicalAndRelationsMetadataLoader)\nexport class LogicalAndRelations implements RelationsComponent<LogicalAndRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Options used in this relations component\n     */\n    protected ɵRelationsOptions: LogicalAndRelationsOptions|undefined|null;\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get relationsOptions(): LogicalAndRelationsOptions|undefined|null\n    {\n        return this.ɵRelationsOptions;\n    }\n    public set relationsOptions(value: LogicalAndRelationsOptions|undefined|null)\n    {\n        this.ɵRelationsOptions = value;\n\n        this.initialize();\n    }\n\n    //######################### protected methods #########################\n\n    //######################### public properties - inputs #########################\n    \n    /**\n     * Condition 1 which value will used in logical and operation\n     */\n    public cond1: boolean = false;\n\n    /**\n     * Condition 2 which value will used in logical and operation\n     */\n    public cond2: boolean = false;\n\n    /**\n     * Dynamic conditions used in logical and operation\n     */\n    public dynamicConditions: {[key: string]: boolean} = {};\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * Logical and result value\n     */\n    @DynamicOutput()\n    public result: boolean|undefined|null = false;\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<LogicalAndRelations>('cond1') in changes ||\n           nameof<LogicalAndRelations>('cond2') in changes)\n        {\n            this.evaluateResult();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Initialize logical and relations\n     */\n    protected initialize(): void\n    {\n        if(this.relationsOptions)\n        {\n            if(this.relationsOptions?.properties?.length)\n            {\n                for(const name of this.relationsOptions.properties)\n                {\n                    if(name)\n                    {\n                        Object.defineProperty(this,\n                                              name,\n                                              {\n                                                  set: function(value)\n                                                  {\n                                                      this.dynamicConditions[name] = value;\n                                                      this.evaluateResult();\n                                                  }\n                                              });\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Evaluates conditions result\n     */\n    protected evaluateResult(): void\n    {\n        if (this.relationsOptions?.properties?.length)\n        {\n            for (const name of this.relationsOptions.properties)\n            {\n                if (!this.dynamicConditions[name])\n                {\n                    this.result = false;\n                    return;\n                }\n            }\n        }\n\n        this.result = this.cond1 && this.cond2;\n    }\n}","import {LogicalAndRelations} from './logicalAnd.relations';\n\nexport default LogicalAndRelations;"],"names":["LogicalAndRelationsMetadataLoader","_ref","LogicalAndRelationsEditorMetadata","apply","arguments","LogicalAndRelations","constructor","cond1","cond2","dynamicConditions","result","relationsOptions","this","ɵRelationsOptions","value","initialize","ngOnChanges","changes","nameof","evaluateResult","invalidateVisuals","properties","length","name","Object","defineProperty","set","__decorate","DynamicOutput","DebugData","inputs","outputs","PureRelationsComponent","RelationsEditorMetadata"],"sourceRoot":""}