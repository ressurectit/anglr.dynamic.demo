{"version":3,"file":"8928.chunk.29faa0dbcc86f5502f91.js","mappings":"gjBASO,MAAMA,EAAgC,oBAAwF,mBAAY,WAAW,kEAAkDC,iCAAzE,IAAxF,qDAKhCC,EAAmC,oBAA6D,mBAAY,WAAW,oEAAqDC,oCAA5E,IAA7D,qD,qHCUnCC,EAAuB,cAASC,EAAAA,E,kCAelC,KAAAC,UAAoB,EAQpB,KAAAC,OAAuB,IAgBjC,CATsBC,gBAEfC,KAAKH,SAAWG,KAAKC,SAASJ,WAAY,EAEvCG,KAAKC,SAASC,QAEbF,KAAKF,OAASE,KAAKC,QAAQC,MAElC,G,6DAtCQP,KAAuBQ,GAAvBR,EAAuB,E,qBAAvBA,EAAuBS,UAAAA,CAAAA,CAAAA,kBAAAC,OAAAA,CAAAR,SAAAA,YAAAS,YAAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA,GAAAC,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,OAAAA,SAAAA,EAAAA,MAAAA,cAAAA,EAAAA,WAAAA,UAAAC,SAAAA,SAAAA,EAAAA,GAAA,MCxBpCC,EAAAA,GAAAA,EAAAA,SAAAA,GAAoEA,EAAAA,EAAC,SAADA,WAAA,6BAChEA,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,GAA+CA,EAAAA,IAAAA,I,MADXA,EAAAA,EAAAA,WAAAA,EAAAA,UACpCA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,MAAAA,EAAAA,QAAAA,KAAAA,EAAAA,QAAAA,OAAAA,MAAAA,EAAAA,QAAAA,KAAAA,EAAAA,QAAAA,S,oED8CNC,EAAAA,EAAAA,IAAAA,EADCC,EAAAA,EAAAA,MACD,6DAvBSnB,GAAuB,UAFnCoB,EAAAA,EAAAA,GAAwBtB,IACxBuB,EAAAA,EAAAA,GAAqBzB,IACTI,GEnBb,UAEasB,EAAa,CAACC,EAAAA,EAA2BC,EAAAA,E,4DCChD,MAAOD,UAAkCE,EAAAA,EAOxBC,UAEfrB,KAAKsB,eACR,CAKkBC,mBAEfvB,KAAKsB,eACR,CAOSA,gBAEN,MAAMrB,EAAUD,KAAKwB,SACfC,EAAQzB,KAAK0B,UAAUC,cAAcF,OAExCG,EAAAA,EAAAA,IAAUH,KAENxB,GAAS4B,UAELD,EAAAA,EAAAA,IAAU3B,EAAQ4B,OAAOC,UAExBL,EAAMM,aAAe9B,EAAQ4B,OAAOC,SAGrCF,EAAAA,EAAAA,IAAU3B,EAAQ4B,OAAOG,SAExBP,EAAMQ,YAAchC,EAAQ4B,OAAOG,QAGpCJ,EAAAA,EAAAA,IAAU3B,EAAQ4B,OAAOK,OAExBT,EAAMU,UAAYlC,EAAQ4B,OAAOK,MAGlCN,EAAAA,EAAAA,IAAU3B,EAAQ4B,OAAOO,QAExBX,EAAMY,WAAapC,EAAQ4B,OAAOO,OAIvCnC,GAASqC,WAELV,EAAAA,EAAAA,IAAU3B,EAAQqC,QAAQR,UAEzBL,EAAMc,cAAgBtC,EAAQqC,QAAQR,SAGvCF,EAAAA,EAAAA,IAAU3B,EAAQqC,QAAQN,SAEzBP,EAAMe,aAAevC,EAAQqC,QAAQN,QAGtCJ,EAAAA,EAAAA,IAAU3B,EAAQqC,QAAQJ,OAEzBT,EAAMgB,WAAaxC,EAAQqC,QAAQJ,MAGpCN,EAAAA,EAAAA,IAAU3B,EAAQqC,QAAQF,QAEzBX,EAAMiB,YAAczC,EAAQqC,QAAQF,OAIzCnC,GAAS0C,eAELf,EAAAA,EAAAA,IAAU3B,EAAQ0C,YAAYC,YAE7BnB,EAAMmB,SAAW3C,EAAQ0C,YAAYC,WAGtChB,EAAAA,EAAAA,IAAU3B,EAAQ0C,YAAYE,cAE7BpB,EAAMoB,WAAa5C,EAAQ0C,YAAYE,WAAWC,aAIjE,E","sources":["webpack://ng-universal-demo/../basic-components/src/toggleButton/toggleButton.metadata.ts","webpack://ng-universal-demo/../basic-components/src/toggleButton/toggleButton.component.ts","webpack://ng-universal-demo/../basic-components/src/toggleButton/toggleButton.component.html","webpack://ng-universal-demo/../basic-components/src/toggleButton/type.ts","webpack://ng-universal-demo/../layout/src/extensions/componentStyling/componentStyling.extension.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {LayoutEditorMetadataDescriptor} from '@anglr/dynamic/layout-editor';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\nimport {ToggleButtonComponentOptions} from './toggleButton.options';\n\n/**\n * Toggle button layout metadata loader\n */\nexport const ToggleButtonLayoutMetadataLoader: DynamicMetadataLoader<LayoutEditorMetadataDescriptor<ToggleButtonComponentOptions>> = async () => new (await import('./metadata/toggleButton.layoutMetadata')).ToggleButtonLayoutEditorMetadata();\n\n/**\n * Toggle button relations metadata loader\n */\nexport const ToggleButtonRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/toggleButton.relationsMetadata')).ToggleButtonRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport {LayoutComponent, LayoutComponentBase} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadata} from '@anglr/dynamic/layout-editor';\nimport {DynamicOutput, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {HostDisplayBlockStyle} from '@anglr/common';\nimport {PromiseOr} from '@jscrpt/common';\n\nimport {ToggleButtonComponentOptions} from './toggleButton.options';\nimport {ToggleButtonLayoutMetadataLoader, ToggleButtonRelationsMetadataLoader} from './toggleButton.metadata';\n\n/**\n * Component used for displaying toggle button\n */\n@Component(\n{\n    selector: 'toggle-button',\n    templateUrl: 'toggleButton.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(ToggleButtonRelationsMetadataLoader)\n@LayoutEditorMetadata(ToggleButtonLayoutMetadataLoader)\nexport class ToggleButtonSAComponent extends LayoutComponentBase<ToggleButtonComponentOptions> implements LayoutComponent<ToggleButtonComponentOptions>, RelationsComponent\n{\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Indication whether is toggle button disabled\n     */\n    @Input()\n    public disabled: boolean = false;\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * Output used for emitting on/off state of toggle button\n     */\n    @DynamicOutput()\n    public toggle: boolean|null = null;\n\n    //######################### protected - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override _onOptionsSet(): PromiseOr<void>\n    {\n        this.disabled = this.options?.disabled ?? false;\n\n        if(this.options?.state)\n        {\n            this.toggle = this.options.state;\n        }\n    }\n}","<button type=\"button\" class=\"btn btn-primary\" [disabled]=\"disabled\" (click)=\"toggle = !toggle\">\n    <span>{{toggle ? options?.onText : options?.offText}}</span>\n</button>","import {ComponentStylingExtension} from '@anglr/dynamic/layout';\nimport {RelationsRegistrationExtension} from '@anglr/dynamic/relations';\n\nimport {ToggleButtonSAComponent} from './toggleButton.component';\n\nexport default ToggleButtonSAComponent;\n\nexport const extensions = [ComponentStylingExtension, RelationsRegistrationExtension];","import {DynamicItemExtension, DynamicItemExtensionBase} from '@anglr/dynamic';\nimport {isPresent} from '@jscrpt/common';\n\nimport {ComponentStylingOptions} from '../../interfaces';\n\n/**\n * Extension that applies common component styling to component\n */\nexport class ComponentStylingExtension extends DynamicItemExtensionBase<ComponentStylingOptions> implements DynamicItemExtension<ComponentStylingOptions>\n{\n    //######################### public methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override _onInit(): void\n    {\n        this._applyStyling();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected override _onOptionsChange(): void\n    {\n        this._applyStyling();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Applies component styling to element\n     */\n    protected _applyStyling(): void\n    {\n        const options = this._options;\n        const style = this._element?.nativeElement.style;\n\n        if(isPresent(style))\n        {\n            if(options?.margin)\n            {\n                if(isPresent(options.margin.bottom))\n                {\n                    style.marginBottom = options.margin.bottom;\n                }\n\n                if(isPresent(options.margin.right))\n                {\n                    style.marginRight = options.margin.right;\n                }\n\n                if(isPresent(options.margin.top))\n                {\n                    style.marginTop = options.margin.top;\n                }\n\n                if(isPresent(options.margin.left))\n                {\n                    style.marginLeft = options.margin.left;\n                }\n            }\n\n            if(options?.padding)\n            {\n                if(isPresent(options.padding.bottom))\n                {\n                    style.paddingBottom = options.padding.bottom;\n                }\n\n                if(isPresent(options.padding.right))\n                {\n                    style.paddingRight = options.padding.right;\n                }\n\n                if(isPresent(options.padding.top))\n                {\n                    style.paddingTop = options.padding.top;\n                }\n\n                if(isPresent(options.padding.left))\n                {\n                    style.paddingLeft = options.padding.left;\n                }\n            }\n\n            if(options?.textStyling)\n            {\n                if(isPresent(options.textStyling.fontSize))\n                {\n                    style.fontSize = options.textStyling.fontSize;\n                }\n\n                if(isPresent(options.textStyling.fontWeight))\n                {\n                    style.fontWeight = options.textStyling.fontWeight.toString();\n                }\n            }\n        }\n    }\n}"],"names":["ToggleButtonLayoutMetadataLoader","ToggleButtonLayoutEditorMetadata","ToggleButtonRelationsMetadataLoader","ToggleButtonRelationsEditorMetadata","ToggleButtonSAComponent","LayoutComponentBase","disabled","toggle","_onOptionsSet","this","options","state","t","selectors","inputs","standalone","features","decls","vars","consts","template","i0","__decorate","DynamicOutput","RelationsEditorMetadata","LayoutEditorMetadata","extensions","ComponentStylingExtension","RelationsRegistrationExtension","DynamicItemExtensionBase","_onInit","_applyStyling","_onOptionsChange","_options","style","_element","nativeElement","isPresent","margin","bottom","marginBottom","right","marginRight","top","marginTop","left","marginLeft","padding","paddingBottom","paddingRight","paddingTop","paddingLeft","textStyling","fontSize","fontWeight","toString"],"sourceRoot":""}