{"version":3,"file":"5433.chunk.3b687bb817af0075e026.js","mappings":"wTAyBM,MAAOA,UAAqCC,EAAAA,EAZlDC,c,oBAmBc,KAAAC,UAAsCC,EAAAA,EAAAA,IAAOC,EAAAA,EAgB1D,CATsBC,S,MAEXC,KAAKJ,SAASK,WAKlB,EAAAD,KAAKJ,SAASK,QAAQC,cAAaC,QAAKC,EAALD,OAAUE,EAAAA,EAAAA,IAAW,KAC3D,E,6DAtBQZ,KAA4Ba,GAA5Bb,EAA4B,E,qBAA5BA,EAA4Bc,UAAAA,CAAAA,CAAAA,wBAAAC,YAAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA,GAAAC,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,4BAAAC,SAAAA,SAAAA,EAAAA,GAAA,KCzBzCC,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,G,KAAaA,EAAAA,EAAAA,0BAAAA,MAAAA,EAAAA,QAAAA,KAAAA,EAAAA,QAAAA,S,gBDqBLC,EAAAA,GAAkCC,OAAAA,CAAAA,qCAAAC,gBAAAA,G,kDEfpC,SAAUC,EAASC,EAAiBC,EAA4BC,GAElE,MAAMC,EAAsBD,EAAWE,OAASF,EAAWG,QAE3D,KAAIC,EAAAA,EAAAA,IAAWH,GAEX,MAAM,IAAII,MAAM,2CAA2CN,EAAYO,oCAG3E,MAAO,CACHC,cAAc,EACdJ,MAEI,MAAMK,EAAcP,EAAcQ,KAAK9B,MAUvC,OARA+B,OAAOC,eAAehC,KACAoB,EACA,CACIG,MAAOM,EACPD,cAAc,EACdK,UAAU,IAG7BJ,CACV,EAER,C","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/listBlock/designer/listBlockDesigner.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/listBlock/designer/listBlockDesigner.component.html","webpack://ng-universal-demo/../../../src/decorators/bindThis.decorator.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, inject} from '@angular/core';\nimport {LayoutComponent, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {LayoutDesignerSAComponent} from '@anglr/dynamic/layout-editor';\nimport {RelationsComponent} from '@anglr/dynamic/relations';\nimport {HostDisplayBlockStyle} from '@anglr/common';\nimport {generateId} from '@jscrpt/common';\n\nimport {ListBlockComponentOptions, ListBlockRelationsOptions} from '../listBlock.options';\nimport {ListBlockSAComponent} from '../listBlock.component';\n\n/**\n * Component used for displaying list block designer\n */\n@Component(\n{\n    selector: 'list-block-designer',\n    templateUrl: 'listBlockDesigner.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListBlockDesignerSAComponent extends ListBlockSAComponent implements LayoutComponent<ListBlockComponentOptions>, RelationsComponent<ListBlockRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Instance of designer component\n     */\n    protected designer: LayoutDesignerSAComponent = inject(LayoutDesignerSAComponent);\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override onInit(): void\n    {\n        if(!this.designer.options)\n        {\n            return;\n        }\n\n        this.designer.options.typeMetadata.scope ??= generateId(10);\n    }\n}","<ng-template [layoutComponentRenderer]=\"options?.template\"></ng-template>","import {Func} from '../types/functions';\r\nimport {isFunction} from '../utils/lang';\r\n\r\n/**\r\n * Binds function to this, object instance where is defined, it is importat to place it in correct order with other decorators, usually should be first\r\n */\r\nexport function BindThis(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor): TypedPropertyDescriptor<Func<any, any>>\r\n{\r\n    const originalValue: Func = descriptor.value ?? descriptor.get?.();\r\n\r\n    if(!isFunction(originalValue))\r\n    {\r\n        throw new Error(`Unable to apply @BindThis decorator to '${propertyKey.toString()}', it is not a method.`);\r\n    }\r\n\r\n    return {\r\n        configurable: true,\r\n        get(this: unknown): Func\r\n        {\r\n            const bound: Func = originalValue.bind(this);\r\n\r\n            Object.defineProperty(this,\r\n                                  propertyKey,\r\n                                  {\r\n                                      value: bound,\r\n                                      configurable: true,\r\n                                      writable: true\r\n                                  });\r\n\r\n            return bound;\r\n        }\r\n    };\r\n}"],"names":["ListBlockDesignerSAComponent","ListBlockSAComponent","constructor","designer","inject","LayoutDesignerSAComponent","onInit","this","options","typeMetadata","scope","_a","generateId","t","selectors","standalone","features","decls","vars","consts","template","i0","LayoutComponentRendererSADirective","styles","changeDetection","BindThis","_target","propertyKey","descriptor","originalValue","value","get","isFunction","Error","toString","configurable","bound","bind","Object","defineProperty","writable"],"sourceRoot":""}