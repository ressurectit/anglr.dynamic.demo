{"version":3,"file":"8297.chunk.d1f036e4a3f9fcd75d93.js","mappings":"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","sources":["webpack://ng-universal-demo/../material-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.html","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.module.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleItemsProvider/materialDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleTypesProvider/materialDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../material-components/src/services/materialDynamicModuleRelationsProvider/materialDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../material-components/src/misc/providers.ts","webpack://ng-universal-demo/../material-components/src/misc/utils.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleRelationsProvider/restDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleItemsProvider/restDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/misc/providers.ts","webpack://ng-universal-demo/../rest-components/src/misc/utils.ts","webpack://ng-universal-demo/../rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object"],"sourcesContent":["var map = {\n\t\"./checkbox/type\": [\n\t\t32363,\n\t\t1752,\n\t\t2363\n\t],\n\t\"./datepicker/type\": [\n\t\t18915,\n\t\t7817,\n\t\t1795,\n\t\t7322,\n\t\t8030,\n\t\t2375,\n\t\t8915\n\t],\n\t\"./expansionPanel/type\": [\n\t\t46560,\n\t\t2424,\n\t\t2475\n\t],\n\t\"./numberField/type\": [\n\t\t81388,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t1388\n\t],\n\t\"./period/type\": [\n\t\t69876,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t9876\n\t],\n\t\"./radio/type\": [\n\t\t74447,\n\t\t2351,\n\t\t4447\n\t],\n\t\"./select/type\": [\n\t\t47594,\n\t\t7817,\n\t\t851,\n\t\t2375,\n\t\t7594\n\t],\n\t\"./tab/type\": [\n\t\t52027,\n\t\t1209,\n\t\t2027\n\t],\n\t\"./tabGroup/type\": [\n\t\t37861,\n\t\t1209,\n\t\t7861\n\t],\n\t\"./textField/type\": [\n\t\t80516,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t516\n\t],\n\t\"./textarea/type\": [\n\t\t2556,\n\t\t7817,\n\t\t7322,\n\t\t2375,\n\t\t2556\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 15033;\nmodule.exports = webpackAsyncContext;","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER} from '@anglr/dynamic/relations-editor';\nimport {MetadataHistoryManager, EditorMetadataManager, EDITOR_METADATA_MANAGER} from '@anglr/dynamic';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relationsEditor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\n@ComponentRoute({path: ':id'})\nexport class RelationsEditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected stringMetadata: string = '';\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                @Inject(EDITOR_METADATA_MANAGER) protected _metadataState: EditorMetadataManager<RelationsNodeMetadata[]>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): RelationsNodeMetadata[]\n    {\n        return metadata;\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsDemo;\n    }\n\n    protected showMetadata(): void\n    {\n        const meta = this._metadataState.getMetadata();\n\n        this.stringMetadata = JSON.stringify(meta, null, 4);\n    }\n}\n","<div class=\"flex-row\">\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" [layoutControls]=\"false\" routePath=\"/relationsEditor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<div class=\"flex-1 flex-row\">\n    <relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>\n\n    <div style=\"width: 300px;\" class=\"flex-column\">\n        <div>Relations metadata</div>\n\n        <div>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showMetadata()\">\n                <span>show metadata</span>\n            </button>\n        </div>\n\n        <div style=\"white-space: pre; overflow: scroll;\" class=\"thin-scrollbar flex-1\">{{stringMetadata}}</div>\n    </div>\n</div>","import {RelationsEditorComponent} from './relationsEditor/relationsEditor.component';\n\nexport const components =\n[\n    RelationsEditorComponent,\n];","import {ClassProvider, FactoryProvider, NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsEditorModule, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideBasicRelationsEditor} from '@anglr/dynamic/basic-components';\nimport {provideMaterialRelationsEditor} from '@anglr/dynamic/material-components';\nimport {provideRestRelationsEditor} from '@anglr/dynamic/rest-components';\n\nimport {components} from './relationsEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DemoRelationsPackageManager} from '../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for relations editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        LoadSaveNewSAComponent,\n        DynamicRelationsEditorModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<RelationsNodeMetadata[]>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('RELATIONS_DATA'),\n        provideBasicRelationsEditor(),\n        provideMaterialRelationsEditor(),\n        provideTinyMceRelationsEditor(),\n        provideHandlebarsRelationsEditor(),\n        provideRestRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ]\n})\n@ModuleRoutes(components)\nexport class RelationsEditorModule\n{\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for material module items\n */\n@Injectable()\nexport class MaterialDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'material-components':\n            {\n                try\n                {\n                    this._logger?.debug('MaterialDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('MaterialDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for material types\n */\n@Injectable()\nexport class MaterialDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MaterialDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'material-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for material types\n */\n@Injectable()\nexport class MaterialDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MaterialDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'material-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {MaterialDynamicModuleItemsProvider, MaterialDynamicModuleRelationsProvider, MaterialDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for material package layout components provider\n */\nexport const MATERIAL_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material dynamic layout module types provider\n */\nexport const MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: MaterialDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for material dynamic relations types provider\n */\nexport const MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: MaterialDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for material package relations nodes provider\n */\nexport const MATERIAL_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material package relations components provider\n */\nexport const MATERIAL_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {MATERIAL_LAYOUT_COMPONENTS_PROVIDER, MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER, MATERIAL_RELATIONS_COMPONENTS_PROVIDER, MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER, MATERIAL_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout material subpackage\n */\nexport function provideMaterialLayout(): Provider[]\n{\n    return [\n        MATERIAL_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations material subpackage\n */\nexport function provideMaterialRelations(): Provider[]\n{\n    return [\n        MATERIAL_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor material subpackage\n */\nexport function provideMaterialLayoutEditor(): Provider[]\n{\n    return [\n        MATERIAL_LAYOUT_COMPONENTS_PROVIDER,\n        MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('material-components'),\n    ];\n}\n\n/**\n * Providers for relations editor material subpackage\n */\nexport function provideMaterialRelationsEditor(): Provider[]\n{\n    return [\n        MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER,\n        MATERIAL_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('material-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor material subpackage\n */\nexport function provideMaterialLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideMaterialRelationsEditor(),\n        ...provideMaterialLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations material subpackage\n */\nexport function provideMaterialLayoutRelations(): Provider[]\n{\n    return [\n        ...provideMaterialLayout(),\n        ...provideMaterialRelations(),\n    ];\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for rest types\n */\n@Injectable()\nexport class RestDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'rest-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for rest module items\n */\n@Injectable()\nexport class RestDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'rest-components':\n            {\n                try\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {RestDynamicModuleItemsProvider, RestDynamicModuleRelationsProvider} from '../services';\n\n/**\n * Provider for rest dynamic relations types provider\n */\nexport const REST_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: RestDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations nodes provider\n */\nexport const REST_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations components provider\n */\nexport const REST_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {REST_RELATIONS_COMPONENTS_PROVIDER, REST_RELATIONS_MODULE_TYPES_PROVIDER, REST_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for relations rest subpackage\n */\nexport function provideRestRelations(): Provider[]\n{\n    return [\n        REST_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations editor rest subpackage\n */\nexport function provideRestRelationsEditor(): Provider[]\n{\n    return [\n        REST_RELATIONS_MODULE_TYPES_PROVIDER,\n        REST_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('rest-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor rest subpackage\n */\nexport function provideRestLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideRestRelationsEditor(),\n    ];\n}\n\n/**\n * Providers for layout relations rest subpackage\n */\nexport function provideRestLayoutRelations(): Provider[]\n{\n    return [\n        ...provideRestRelations(),\n    ];\n}","var map = {\n\t\"./rest/type\": [\n\t\t92215,\n\t\t2215\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2721;\nmodule.exports = webpackAsyncContext;"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","RelationsEditorComponent","emptyMetadata","constructor","_store","history","_metadataState","_metadata","stringMetadata","_getMetadata","metadata","_loadDemo","this","DemoData","relationsDemo","showMetadata","meta","getMetadata","JSON","stringify","i0","i1","RELATIONS_HISTORY_MANAGER","EDITOR_METADATA_MANAGER","selectors","decls","vars","consts","template","rf","ctx","$event","tmp_b_0","undefined","__decorate","BindThis","ComponentRoute","path","StoreDataService","MetadataHistoryManager","components","RelationsEditorModule","provide","RELATIONS_METADATA_STORAGE","useFactory","store","MetadataStorage","getData","deps","createStoreDataServiceFactory","provideBasicRelationsEditor","provideMaterialRelationsEditor","provideTinyMceRelationsEditor","provideHandlebarsRelationsEditor","provideRestRelationsEditor","PackageManager","useClass","DemoRelationsPackageManager","imports","LoadSaveNewSAComponent","DynamicRelationsEditorModule","withProviders","ModuleRoutes","MaterialDynamicModuleItemsProvider","_logger","tryToGet","source","_this","package","debug","item","name","LOGGER","factory","ɵfac","MaterialDynamicModuleTypesProvider","moduleName","MaterialDynamicModuleRelationsProvider","MATERIAL_LAYOUT_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","multi","MATERIAL_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","MATERIAL_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","MATERIAL_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","MATERIAL_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideMaterialLayout","provideMaterialLayoutEditor","provideStaticPackageSource","provideMaterialLayoutRelationsEditor","provideMaterialLayoutRelations","RestDynamicModuleRelationsProvider","RestDynamicModuleItemsProvider","REST_RELATIONS_MODULE_TYPES_PROVIDER","REST_RELATIONS_NODES_PROVIDER","REST_RELATIONS_COMPONENTS_PROVIDER","provideRestLayoutRelationsEditor","provideRestLayoutRelations"],"sourceRoot":""}