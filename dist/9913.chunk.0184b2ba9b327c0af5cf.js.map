{"version":3,"file":"9913.chunk.0184b2ba9b327c0af5cf.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/services/complexStaticRegister/complexStaticRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.module.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadataManager} from '@anglr/dynamic/layout-editor';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: LayoutEditorMetadataManager,\n                protected _store: StoreDataService<LayoutRelationsMetadata>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutRelationsMetadata\n    {\n        return {\n            layout: this._manager.getMetadata()\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsComplex/layout\" (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static input relations metadata loader\n */\nexport const StaticInputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticInput.relationsMetadata')).StaticInputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {DynamicOutput, RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticInputRelationsMetadataLoader} from './staticInput.metadata';\n\n/**\n * Static input component\n */\n@Component(\n{\n    selector: 'static-input',\n    templateUrl: 'staticInput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticInputRelationsMetadataLoader)\nexport class StaticInputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-input';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Defines form control for string value\n     */\n    protected stringForm: FormControl<string> = new FormControl<string>('');\n\n    /**\n     * Defines form control for boolean value\n     */\n    protected booleanForm: FormControl<boolean> = new FormControl<boolean>(false);\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * String output\n     */\n    @DynamicOutput()\n    public stringOutput: string;\n\n    /**\n     * Boolean output\n     */\n    @DynamicOutput()\n    public booleanOutput: boolean;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n        this.stringForm.valueChanges.subscribe(value => this.stringOutput = value);\n        this.booleanForm.valueChanges.subscribe(value => this.booleanOutput = value);\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticInputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticInputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div>INPUT:</div>\n<div class=\"flex-column\">\n    <input type=\"text\" [formControl]=\"stringForm\">\n    <input type=\"checkbox\" [formControl]=\"booleanForm\">\n</div>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static output relations metadata loader\n */\nexport const StaticOutputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticOutput.relationsMetadata')).StaticOutputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, OnInit, OnDestroy} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticOutputRelationsMetadataLoader} from './staticOutput.metadata';\n\n/**\n * Static output component\n */\n@Component(\n{\n    selector: 'static-output',\n    templateUrl: 'staticOutput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticOutputRelationsMetadataLoader)\nexport class StaticOutputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-output';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Boolean input\n     */\n    @Input()\n    public booleanInput: boolean;\n\n    /**\n     * String input\n     */\n    @Input()\n    public stringInput: string;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticOutputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticOutputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticOutputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticOutputSAComponent.relationsId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/layout', _available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/relations', _available.value]\">relations</a>\r\n\r\n    <ng-select [formControl]=\"_available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <static-input class=\"margin-right-extra-small\"></static-input>\r\n\r\n    <div class=\"flex-1 overflow-vertical-scroll thin-scrollbar\" style=\"border: 1px dotted #666;\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n\r\n    <static-output style=\"width: 200px;\"></static-output>\r\n</div>","<div>OUTPUT:</div>\n<div>\n    <div>string: {{stringInput}}</div>\n    <div>boolean: {{booleanInput}}</div>\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {provideRelations, RelationsManager} from '@anglr/dynamic/relations';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        provideRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _router: Router,\n                private _relationsManager: RelationsManager,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                const meta = this._store.getData(id);\n                this._metadata = meta?.layout;\n                this._relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this._relationsManager.setRelations([]);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/relationsComplex/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager} from '@anglr/dynamic/layout-relations';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,\n                protected _store: StoreDataService<LayoutRelationsMetadata>,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutRelationsMetadata\n    {\n        return {\n            relations: this._manager.getMetadata()\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexRelations;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsComplex/relations\" (metadataChange)=\"setMetadata($event)\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    LayoutComponent,\n    RelationsComponent,\n    PreviewComponent,\n];","import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {StaticInputSAComponent} from '../../components/staticInput/staticInput.component';\nimport {StaticOutputSAComponent} from '../../components/staticOutput/staticOutput.component';\n\n/**\n * Static components register for relations complex sample\n */\n@Injectable()\nexport class ComplexStaticRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[StaticInputSAComponent.relationsId] = StaticInputSAComponent;\n        result[StaticOutputSAComponent.relationsId] = StaticOutputSAComponent;\n\n        return result;\n    }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {GoBackModule} from '@anglr/common';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\n\nimport {components} from './relationsComplex.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {ComplexStaticRegister, StaticInputSAComponent, StaticOutputSAComponent} from './misc';\n\n/**\n * Module for relations complex sample with editor, static components and layout components samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackModule,\n        DynamicLayoutRelationsEditorModule.withStaticComponents(ComplexStaticRegister),\n        LoadSaveNewSAComponent,\n        StaticInputSAComponent,\n        StaticOutputSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_COMPLEX_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsComplexModule\n{\n}"],"names":["LayoutComponent","constructor","_manager","_store","_metadata","emptyMetadata","id","generateId","displayName","package","name","options","children","_getMetadata","layout","this","getMetadata","_loadDemo","DemoData","i0","selectors","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","LayoutEditorMetadataManager","StoreDataService","StaticInputRelationsMetadataLoader","StaticInputRelationsEditorMetadata","StaticInputSAComponent","_changeDetector","_relationsProcessor","_componentManager","stringForm","FormControl","booleanForm","valueChanges","subscribe","value","stringOutput","booleanOutput","relationsId","ngOnInit","registerComponent","StaticInputSAComponent_1","initialized","updateRelations","ngOnDestroy","destroyComponent","unregisterComponent","invalidateVisuals","detectChanges","standalone","features","ReactiveFormsModule","i2","encapsulation","changeDetection","DynamicOutput","RelationsEditorMetadata","ChangeDetectorRef","RelationsProcessor","RelationsComponentManager","StaticOutputRelationsMetadataLoader","StaticOutputRelationsEditorMetadata","StaticOutputSAComponent","StaticOutputSAComponent_1","val_r1","inputs","booleanInput","stringInput","PreviewComponent","_router","_relationsManager","_route","_available","_availableNames","getStored","params","setValue","meta","getData","setRelations","relations","val","navigate","skipLocationChange","replaceUrl","provideRelations","Router","RelationsManager","ActivatedRoute","RelationsComponent","_layoutManager","setMetadata","metadata","setLayout","RelationsNodeManager","LayoutManager","components","ComplexStaticRegister","Register","getDefinedTypes","result","t","factory","RelationsComplexModule","createStoreDataServiceFactory","imports","CommonModule","RouterModule","NgSelectModule","GoBackModule","DynamicLayoutRelationsEditorModule","LoadSaveNewSAComponent","ModuleRoutes"],"sourceRoot":""}