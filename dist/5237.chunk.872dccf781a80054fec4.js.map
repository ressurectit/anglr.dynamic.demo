{"version":3,"file":"5237.chunk.872dccf781a80054fec4.js","mappings":"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","sources":["webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/pages/+layoutEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+layoutEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+layoutEditor/layoutEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+layoutEditor/layoutEditor.module.ts","webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../src/modules/packageManager/components/packageManager/packageManager.component.html","webpack://ng-universal-demo/../src/modules/packageManager/components/packageManager/packageManager.component.ts","webpack://ng-universal-demo/../src/modules/packageManager/modules/packageManager.module.ts","webpack://ng-universal-demo/../src/services/packageManager/packageManager.service.ts"],"sourcesContent":["var map = {\n\t\"./checkbox/type\": [\n\t\t27614,\n\t\t7614\n\t],\n\t\"./datepicker/type\": [\n\t\t80902,\n\t\t902\n\t],\n\t\"./formGroup/type\": [\n\t\t66556,\n\t\t6556\n\t],\n\t\"./numberField/type\": [\n\t\t98092,\n\t\t8092\n\t],\n\t\"./period/type\": [\n\t\t38938,\n\t\t8938\n\t],\n\t\"./radio/type\": [\n\t\t54501,\n\t\t4501\n\t],\n\t\"./select/type\": [\n\t\t35742,\n\t\t5742\n\t],\n\t\"./textField/type\": [\n\t\t73813,\n\t\t3813\n\t],\n\t\"./textarea/type\": [\n\t\t82299,\n\t\t2299\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {MetadataHistoryManager} from '@anglr/dynamic';\nimport {LAYOUT_HISTORY_MANAGER} from '@anglr/dynamic/layout-editor';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'editor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\n@ComponentRoute({path: 'editor/:id'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(protected store: StoreDataService,\n        \n                @Inject(LAYOUT_HISTORY_MANAGER) protected history: MetadataHistoryManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: LayoutComponentMetadata): LayoutComponentMetadata\n    {\n        return metadata;\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <load-save-new [store]=\"store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/layout/editor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","import {EditorComponent} from './editor/editor.component';\n\nexport const components =\n[\n    EditorComponent,\n];","import {ClassProvider, FactoryProvider, NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicLayoutEditorModule} from '@anglr/dynamic/layout-editor';\nimport {provideBasicLayoutEditor} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayoutEditor} from '@anglr/dynamic/material-components';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideFormLayoutEditor} from '@anglr/dynamic/form';\n\nimport {components} from './layoutEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DemoLayoutPackageManager} from '../../services/demoLayoutPackageManager/demoLayoutPackageManager.service';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for layout editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        DynamicLayoutEditorModule.withProviders(),\n        LoadSaveNewSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutComponentMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        createStoreDataServiceFactory('LAYOUT_DATA'),\n        provideBasicLayoutEditor(),\n        provideMaterialLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n        provideFormLayoutEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoLayoutPackageManager,\n        },\n    ]\n})\n@ModuleRoutes(components)\nexport class LayoutEditorModule\n{\n}","export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|undefined|null, parentControl: AbstractControl|undefined|null, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","<div class=\"dynamic-flex-row\">\n    <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-right-extra-small\" (click)=\"detailVisible = !detailVisible\">\n        <span class=\"fas\" [class.fa-plus]=\"!detailVisible\" [class.fa-minus]=\"detailVisible\"></span>\n    </button>\n\n    <div class=\"pm-header\">packages</div>\n</div>\n\n<div *ngIf=\"detailVisible\">\n    <div class=\"dynamic-flex-row\">\n        <select class=\"dynamic-form-control dynamic-flex-1\" #avPkgs>\n            <option *ngFor=\"let package of availablePackages\" [value]=\"package\">{{package}}</option>\n        </select>\n\n        <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-left-extra-small\" (click)=\"addPackage(availablePackages[avPkgs.selectedIndex])\">\n            <span class=\"fas fa-plus\"></span>\n        </button>\n    </div>\n\n    <div class=\"dynamic-flex-row dynamic-align-items-center dynamic-margin-top-small\" *ngFor=\"let package of usedPackages\">\n        <div class=\"dynamic-flex-1\">{{package}}</div>\n\n        <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-left-extra-small\" (click)=\"removePackage(package)\">\n            <span class=\"fas fa-times\"></span>\n        </button>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, OnInit} from '@angular/core';\n\nimport {PackageManager} from '../../../../services';\n\n//TODO: animations\n\n/**\n * Component used as package manager of dynamic packages/modules\n */\n@Component(\n{\n    selector: 'package-manager',\n    templateUrl: 'packageManager.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PackageManagerComponent implements OnInit\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is detail visible\n     */\n    protected detailVisible: boolean = false;\n\n    /**\n     * Array of used packages\n     */\n    protected usedPackages: string[] = [];\n\n    /**\n     * Array of available packages\n     */\n    protected availablePackages: readonly string[] = [];\n\n    //######################### constructor #########################\n    constructor(protected packageManager: PackageManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.usedPackages = this.packageManager.usedPackages;\n        this.updatedAvailablePackages();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds package to used packages\n     * @param packageName - Name of package to be added\n     */\n    protected addPackage(packageName: string|null): void\n    {\n        if(!packageName)\n        {\n            return;\n        }\n\n        this.usedPackages = [...this.usedPackages, packageName];\n        this.updatedAvailablePackages();\n        this.packageManager.setUsedPackages(this.usedPackages);\n    }\n\n    /**\n     * Removes package from used packages\n     * @param packageName - Name of package to be removed\n     */\n    protected removePackage(packageName: string): void\n    {\n        this.usedPackages = this.usedPackages.filter(itm => itm != packageName);\n        this.updatedAvailablePackages();\n        this.packageManager.setUsedPackages(this.usedPackages);\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Updates available packages using used packages\n     */\n    protected updatedAvailablePackages(): void\n    {\n        this.availablePackages = this.packageManager.packages.filter(itm => !this.usedPackages.find(it => it == itm));\n    }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport {PackageManagerComponent} from '../components';\n\n/**\n * Module for package manager components, directives and pipes\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n    ],\n    declarations:\n    [\n        PackageManagerComponent,\n    ],\n    exports:\n    [\n        PackageManagerComponent,\n    ]\n})\nexport class PackageManagerModule\n{\n}","import {inject} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\nimport {PromiseOr} from '@jscrpt/common';\nimport {Observable, Subject, Subscription} from 'rxjs';\n\nimport {PackageSource} from '../../interfaces';\nimport {PACKAGE_SOURCES} from '../../misc/tokens';\n\n/**\n * Service used for obtaining available and used packages\n */\nexport class PackageManager\n{\n    //######################### private fields #########################\n    \n    /**\n     * Current usedPackages value\n     */\n    private _usedPackages: string[] = [];\n\n    //######################### protected properties #########################\n    \n    /**\n     * Subscriptions created during initialization\n     */\n    protected initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Used for emitting usedPackages changes\n     */\n    protected usedPackagesSubject: Subject<void> = new Subject<void>();\n\n    /**\n     * Used for emitting packages changes\n     */\n    protected packagesChangeSubject: Subject<void> = new Subject<void>();\n\n    /**\n     * Permanent storage storing selected packages\n     */\n    protected store: PermanentStorage = inject(PERMANENT_STORAGE);\n\n    /**\n     * Array of package source\n     */\n    protected packageSources: PackageSource[] = inject(PACKAGE_SOURCES);\n\n    //######################### public properties #########################\n\n    /**\n     * Occurs when available packages changes\n     */\n    public get packagesChange(): Observable<void>\n    {\n        return this.packagesChangeSubject.asObservable();\n    }\n\n    /**\n     * Gets available packages\n     */\n    public get packages(): readonly string[]\n    {\n        const result: string[] = [];\n\n        for(const source of this.packageSources)\n        {\n            result.push(...source.packages);\n        }\n\n        return result;\n    }\n\n    /**\n     * Gets current usedPackages value\n     */\n    public get usedPackages(): string[]\n    {\n        return this._usedPackages;\n    }\n    protected set usedPackages(value: string[])\n    {\n        this._usedPackages = value;\n    }\n    \n    /**\n     * Occurs when usedPackages changes\n     */\n    public get usedPackagesChange(): Observable<void>\n    {\n        return this.usedPackagesSubject.asObservable();\n    }\n\n    //######################### constructor #########################\n    constructor(protected storageName: string,)\n    {\n        this.usedPackages = this.store.get<string[]|null>(storageName) ?? [];\n\n        for(const source of this.packageSources)\n        {\n            this.initSubscriptions.add(source.packagesChange.subscribe(() =>this.packagesChangeSubject.next()));\n        }\n    }\n    \n    //######################### public methods #########################\n    \n    /**\n     * Sets usedPackages new value\n     * @param usedPackages - Value of usedPackages that changed\n     */\n    public setUsedPackages(usedPackages: string[]): void\n    {\n        if(this._usedPackages == usedPackages)\n        {\n            return;\n        }\n    \n        this._usedPackages = usedPackages;\n        this.store.set(this.storageName, usedPackages);\n        this.usedPackagesSubject.next();\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Refresh available packages with current data\n     */\n    public refresh(): PromiseOr<void>\n    {\n        for(const source of this.packageSources)\n        {\n            source.refresh();\n        }\n    }\n\n    /**\n     * Destroys service and all its resources\n     */\n    public destroy(): void\n    {\n        this.initSubscriptions.unsubscribe();\n    }\n} "],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","EditorComponent","emptyMetadata","generateId","displayName","package","name","options","children","constructor","store","history","_metadata","_getMetadata","metadata","_loadDemo","this","DemoData","demoLayout","i0","i1","LAYOUT_HISTORY_MANAGER","selectors","decls","vars","consts","template","rf","ctx","$event","tmp_b_0","undefined","__decorate","BindThis","ComponentRoute","path","StoreDataService","MetadataHistoryManager","components","LayoutEditorModule","provide","LAYOUT_METADATA_STORAGE","useFactory","MetadataStorage","getData","deps","createStoreDataServiceFactory","provideBasicLayoutEditor","provideMaterialLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","provideFormLayoutEditor","PackageManager","useClass","DemoLayoutPackageManager","imports","DynamicLayoutEditorModule","withProviders","LoadSaveNewSAComponent","ModuleRoutes","FormComponentControlType","FormDynamicModuleItemsProvider","_logger","tryToGet","source","_this","debug","item","LOGGER","factory","ɵfac","FormDynamicModuleTypesProvider","moduleName","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","multi","FORM_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","FORM_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideFormLayout","provideStaticPackageSource","provideFormLayoutRelationsEditor","provideFormLayoutRelations","getFormControl","controlName","parentControl","defaultControlType","FormControl","defaultValue","get","getControlForType","type","FormArray","FormGroup","package_r4","package_r5","_r7","$implicit","ctx_r6","removePackage","PackageManagerComponent_div_5_option_4_Template","_r9","_r1","ctx_r8","addPackage","availablePackages","selectedIndex","PackageManagerComponent_div_5_div_7_Template","ctx_r0","usedPackages","PackageManagerComponent","packageManager","detailVisible","ngOnInit","updatedAvailablePackages","packageName","setUsedPackages","filter","itm","packages","find","it","PackageManagerComponent_div_5_Template","PackageManagerModule","CommonModule","ReactiveFormsModule","packagesChange","packagesChangeSubject","asObservable","result","packageSources","push","_usedPackages","value","usedPackagesChange","usedPackagesSubject","storageName","initSubscriptions","Subscription","Subject","inject","PERMANENT_STORAGE","PACKAGE_SOURCES","add","subscribe","next","set","refresh","destroy","unsubscribe"],"sourceRoot":""}