{"version":3,"file":"1203.chunk.19b7a99b5e460bfe1209.js","mappings":"+aAgCaA,EAAe,MAqBxBC,YAAoBC,EACEC,GADF,KAAAD,SAAAA,EACE,KAAAC,MAAAA,EAlBZ,KAAAC,UAA0C,IAoBnD,CAlBaC,oBAEV,MAAO,CACHC,GAAI,eAAcC,EAAAA,EAAAA,IAAW,MAC7BC,YAAa,OACbC,QAAS,mBACTC,KAAM,aACNC,QACA,CACIC,SAAU,IAGrB,CAWSC,eAEN,OAAOC,KAAKZ,SAASa,aACxB,CAESC,YAENF,KAAKV,UAAYa,EAAAA,EAAAA,UACpB,G,iCArCQjB,GAAekB,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAA,E,kBAAflB,EAAemB,UAAAA,CAAAA,CAAAA,uBAAAC,SAAAA,CAAAA,EAAAA,EAZxB,CACIC,EAAAA,EAEA,CACIC,QAASC,EAAAA,EACTC,YAAaH,EAAAA,MAEpBI,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,YAAAA,iBAAAA,EAAAA,QAAAA,sBAAAA,kBAAAA,CAAAA,OAAAA,SAAAA,EAAAA,MAAAA,cAAAA,EAAAA,SAAAA,CAAAA,EAAAA,SAAAA,EAAAA,aAAAC,SAAAA,SAAAA,EAAAA,GAAA,MC3BLV,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAAsB,qBAC6EA,EAAAA,EAAC,kBAADA,SAAAA,GAAA,uEAA+DA,EAAAA,KAE9JA,EAAAA,GAAAA,EAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASW,EAAAA,WAAW,IAC9DX,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,EAAAA,QAAIA,EAAAA,IAAAA,KAIlBA,EAAAA,GAAAA,EAAAA,gBAAAA,I,MAPmBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,EAAAA,MAAAA,CAAe,sBAAAW,EAAAA,cAOJX,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,WAAAA,EAAAA,W,8DDqD1BY,EAAAA,EAAAA,IAAAA,CADCC,EAAAA,GACD,wIA7BS/B,GAAe,UAF3BgC,EAAAA,EAAAA,GAAe,CAACC,KAAM,YACtBD,EAAAA,EAAAA,GAAe,CAACC,KAAM,gBACK,6BAqBMC,EAAAA,EACDC,EAAAA,KAtBpBnC,GE9BN,MAAMoC,EACb,CACIpC,G,yCC8BSqC,EAAkB,Q,iCAAlBA,EAAkB,E,kBAAlBA,I,uBART,EACIC,EAAAA,EAAAA,GAA8B,gBAC9BC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACHC,QAAAA,CAbGC,EAAAA,EAAAA,gBACAC,EAAAA,MAeKP,GAAkB,UAD9BQ,EAAAA,EAAAA,GAAaT,IACDC,E","sources":["webpack://ng-universal-demo/./app/pages/+layoutEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+layoutEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+layoutEditor/layoutEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+layoutEditor/layoutEditor.module.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ExistingProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadataManager} from '@anglr/dynamic/layout-editor';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {DemoStorage} from '../../../services/metadataStorage';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'editor.component.html',\n    providers:\n    [\n        DemoStorage,\n        <ExistingProvider>\n        {\n            provide: MetadataStorage,\n            useExisting: DemoStorage\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\n@ComponentRoute({path: 'editor/:id'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: LayoutEditorMetadataManager,\n                protected store: StoreDataService,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutComponentMetadata\n    {\n        return this._manager.getMetadata();\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <load-save-new [store]=\"store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/layout/editor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\"></load-save-new>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","import {EditorComponent} from './editor/editor.component';\n\nexport const components =\n[\n    EditorComponent,\n];","import {NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicLayoutEditorModule} from '@anglr/dynamic/layout-editor';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\n\nimport {components} from './layoutEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for layout editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        DynamicLayoutEditorModule.withProviders(),\n        LoadSaveNewSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_DATA'),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n    ]\n})\n@ModuleRoutes(components)\nexport class LayoutEditorModule\n{\n}"],"names":["EditorComponent","constructor","_manager","store","_metadata","emptyMetadata","id","generateId","displayName","package","name","options","children","_getMetadata","this","getMetadata","_loadDemo","DemoData","i0","selectors","features","DemoStorage","provide","MetadataStorage","useExisting","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","LayoutEditorMetadataManager","StoreDataService","components","LayoutEditorModule","createStoreDataServiceFactory","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","imports","DynamicLayoutEditorModule","LoadSaveNewSAComponent","ModuleRoutes"],"sourceRoot":""}