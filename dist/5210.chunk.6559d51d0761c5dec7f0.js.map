{"version":3,"file":"5210.chunk.6559d51d0761c5dec7f0.js","mappings":"kVAMO,MAAMA,EAAiC,e,EAAAC,G,EAA6D,mBAAY,WAAW,0DAA+CC,kCAAmC,E,+KAAA,kBAAtK,OAAAD,EAAAE,MAAA,KAAAC,UAAA,KCIvC,IAAMC,EAAN,MAqBIC,iBAAAA,GAEP,CAEOC,WAAAA,CAAYC,GAEf,IAAGC,EAAAA,EAAAA,IAAmC,YAAaD,IAChDC,EAAAA,EAAAA,IAAmC,YAAaD,EACnD,CAWI,IAVIE,EAAAA,EAAAA,IAASC,KAAKC,UAEdD,KAAKC,OAASC,WAAWF,KAAKC,UAG9BF,EAAAA,EAAAA,IAASC,KAAKG,UAEdH,KAAKG,OAASD,WAAWF,KAAKG,UAG9BC,EAAAA,EAAAA,IAASJ,KAAKC,UACdG,EAAAA,EAAAA,IAASJ,KAAKG,QAEd,OAAoB,IAAhBH,KAAKG,YAELH,KAAKK,OAAS,WAIlBL,KAAKK,OAASL,KAAKC,OAASD,KAAKG,QAIrC,KAAKG,EAAAA,EAAAA,IAAUN,KAAKC,QAGhB,YADAD,KAAKK,OAAS,GAIlB,KAAKC,EAAAA,EAAAA,IAAUN,KAAKG,QAGhB,YADAH,KAAKK,OAASL,KAAKC,QAIvBD,KAAKK,OAAS,I,CAEtB,IA9DOE,EAAAA,EAAAA,IAAA,EADNC,EAAAA,EAAAA,OAAO,6DAIDD,EAAAA,EAAAA,IAAA,EADNC,EAAAA,EAAAA,OAAO,6DAMDD,EAAAA,EAAAA,IAAA,EADNE,EAAAA,EAAAA,MAAe,4DAZPf,GAAmBa,EAAAA,EAAAA,IAAA,EAF/BG,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwBtB,IACZK,GCRb,S","sources":["webpack://ng-universal-demo/../math-components/src/dynamicItems/divide/divide.metadata.ts","webpack://ng-universal-demo/../math-components/src/dynamicItems/divide/divide.relations.ts","webpack://ng-universal-demo/../math-components/src/dynamicItems/divide/type.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Math divide relations metadata loader\n */\nexport const MathDivideRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/divide.relationsMetadata')).MathDivideRelationsEditorMetadata();\n","import {Input, SimpleChanges} from '@angular/core';\nimport {DynamicOutput, PureRelationsComponent, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {isNumber, isPresent, isString, nameof} from '@jscrpt/common';\n\nimport {MathDivideRelationsMetadataLoader} from './divide.metadata';\nimport {MathDivideRelationsOptions} from './divide.options';\n\n@PureRelationsComponent()\n@RelationsEditorMetadata(MathDivideRelationsMetadataLoader)\nexport class MathDivideRelations implements RelationsComponent<MathDivideRelationsOptions>\n{\n    //######################### public proeperties - inputs #########################\n\n    @Input()\n    public input1: number|null|undefined;\n\n    @Input()\n    public input2: number|null|undefined;\n\n    //######################### public properties - dynamic outputs #########################\n\n    @DynamicOutput()\n    public result: number|null|undefined;\n\n    //######################### public properties #########################\n\n    relationsOptions: MathDivideRelationsOptions|undefined;\n\n    //######################### public methods #########################\n\n    public invalidateVisuals(): void\n    {\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<MathDivideRelationsOptions>('input1') in changes ||\n           nameof<MathDivideRelationsOptions>('input2') in changes)\n        {\n            if (isString(this.input1))\n            {\n                this.input1 = parseFloat(this.input1);\n            }\n\n            if (isString(this.input2))\n            {\n                this.input2 = parseFloat(this.input2);\n            }\n\n            if (isNumber(this.input1) &&\n                isNumber(this.input2))\n            {\n                if (this.input2 === 0)\n                {\n                    this.result = null;\n                    return;\n                }\n\n                this.result = this.input1 / this.input2;\n                return;\n            }\n\n            if (!isPresent(this.input1))\n            {\n                this.result = 0;\n                return;\n            }\n\n            if (!isPresent(this.input2))\n            {\n                this.result = this.input1;\n                return;\n            }\n\n            this.result = null;\n        }\n    }\n\n}","import {MathDivideRelations} from './divide.relations';\n\nexport default MathDivideRelations;"],"names":["MathDivideRelationsMetadataLoader","_ref","MathDivideRelationsEditorMetadata","apply","arguments","MathDivideRelations","invalidateVisuals","ngOnChanges","changes","nameof","isString","this","input1","parseFloat","input2","isNumber","result","isPresent","__decorate","Input","DynamicOutput","PureRelationsComponent","RelationsEditorMetadata"],"sourceRoot":""}