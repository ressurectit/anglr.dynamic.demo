{"version":3,"file":"2852.chunk.2de117a30c1f98e1ba3c.js","mappings":"+iBAKYA,EAAAA,GAAA,WACIA,EAAAA,GAAA,2BACAA,EAAAA,GAAA,SAAKA,EAAAA,EAAA,GAAkBA,EAAAA,IAAAA,I,iCADFA,EAAAA,EAAA,GAAAA,EAAAA,EAAA,oBAAAC,EAAAC,aAAAF,CAAkC,YAAAC,EAAAE,UAAlCH,CAAkC,OAAAI,EAAAC,KAAlCL,CAAkC,SAAAC,GAClDD,EAAAA,EAAA,GAAAA,EAAAA,GAAAI,EAAAC,K,2BAKTL,EAAAA,GAAA,UAAAA,CAAsF,SAC7EA,EAAAA,EAAA,GAAmBA,EAAAA,KACxBA,EAAAA,GAAA,4BACJA,EAAAA,M,iCAFSA,EAAAA,EAAA,GAAAA,EAAAA,GAAAM,EAAAD,MACiBL,EAAAA,EAAA,GAAAA,EAAAA,EAAA,oBAAAO,EAAAL,aAAAF,CAAkC,YAAAO,EAAAJ,UAAlCH,CAAkC,OAAAM,EAAAD,KAAlCL,CAAkC,SAAAO,E,ECgBlE,MAAOC,UAAuCC,EAAAA,EAfpDC,WAAAA,G,oBAsBc,KAAAC,0BAAqEC,EAAAA,EAAAA,IAAOC,EAAAA,IAK5E,KAAAC,0BAAqDF,EAAAA,EAAAA,IAAOG,EAAAA,E,CAmBhDC,UAAAA,GAAU,I,EAAAC,EAAA,Y,EAAC,Y,MAE7B,IAAIA,EAAKC,SAEL,QAGJC,EAAAF,EAAKC,UAASE,mBAAgBD,EAAhBC,iBACd,CACIf,KAAM,KAGV,MAAMgB,QAAsBJ,EAAKH,yBAAyBQ,iBAAiBL,EAAKC,SAASb,MAEzF,IAAIgB,EAEA,OAGJJ,EAAKC,SAASE,iBAAiBf,KAAOY,EAAKC,SAASb,KACpD,MAAMkB,SAAkBN,EAAKN,0BAA0Ba,YAAYH,KAAkB,GACrFJ,EAAKQ,YAAaC,EAAAA,EAAAA,GAAUH,GAC5BN,EAAKU,aAAcC,EAAAA,EAAAA,GAAWL,EAAW,E,gLAC7C,E,wDAtDSf,KAA8BqB,GAA9BrB,EAA8B,G,qBAA9BA,EAA8BsB,UAAA,4BAAAC,YAAA,EAAAC,SAAA,CAAAhC,EAAAA,EAAAA,EAAAA,GAAAiC,MAAA,EAAAC,KAAA,EAAAC,OAAA,6QAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ID9B3CrC,EAAAA,GAAA,6BAEAA,EAAAA,GAAA,UAAAA,CAA0B,UAA1BA,CAA0B,WAGdA,EAAAA,EAAA,EAAAuC,EAAA,aAIJvC,EAAAA,KAEAA,EAAAA,GAAA,WACIA,EAAAA,EAAA,EAAAwC,EAAA,aAIJxC,EAAAA,IAAAA,M,MAhBeA,EAAAA,EAAA,SAAAsC,EAAAtC,CAAe,iBAAAsC,EAAAG,gBAKezC,EAAAA,EAAA,GAAAA,EAAAA,EAAA,gBAAAsC,EAAAb,YAAA,MAAAa,EAAAb,WAAAL,iBAAA,KAAAkB,EAAAb,WAAAL,iBAAAsB,QAOE1C,EAAAA,EAAA,GAAAA,EAAAA,EAAA,gBAAAsC,EAAAX,aAAA,MAAAW,EAAAX,YAAAP,iBAAA,KAAAkB,EAAAX,YAAAP,iBAAAuB,S,gBCW/CC,EAAAA,EAAYC,EAAAA,GACZC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,GAA6BC,cAAA,EAAAC,gBAAA,IClB/B,MAAOC,EAkBTzC,WAAAA,GAXO,KAAA0C,SACP,CACIC,MAAO,cAMJ,KAAAC,eAAsC9C,EAKzC+C,OAAOC,OAAOC,KAClB,E","sources":["webpack://ng-universal-demo/../layout-relations/src/dynamicItems/customComponent/node/customComponentNode.component.html","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/customComponent/node/customComponentNode.component.ts","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/customComponent/metadata/customComponent.relationsMetadata.ts"],"sourcesContent":["<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"custom\"></relations-node-header>\n\n<div class=\"node-content\">\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <div class=\"input\" *ngFor=\"let inputMeta of inputsMeta?.relationsOptions?.inputs\">\n                <relation-node-input [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"inputMeta.name\" [parent]=\"this\"></relation-node-input>\n                <div>{{inputMeta.name}}</div>\n            </div>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\" *ngFor=\"let outputMeta of outputsMeta?.relationsOptions?.outputs\">\n                <div>{{outputMeta.name}}</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"outputMeta.name\" [parent]=\"this\"></relation-node-output>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationsNodeHeaderSAComponent, RelationNodeOutputSAComponent, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {CustomComponentRelationsOptions} from '../customComponent.options';\nimport {ComponentInputsRelationsOptions} from '../../componentInputs';\nimport {ComponentOutputsRelationsOptions} from '../../componentOutputs';\nimport {LayoutComponentsRegister} from '../../../services';\nimport {getInputs, getOutputs} from '../customComponent.utils';\n\n/**\n * Relations node component for custom component\n */\n@Component(\n{\n    selector: 'custom-component-node',\n    templateUrl: 'customComponentNode.component.html',\n    // styleUrls: ['customComponentNode.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomComponentNodeSAComponent extends RelationsNodeBase<CustomComponentRelationsOptions> implements RelationsNode<CustomComponentRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Storage for relations metadata\n     */\n    protected relationsMetadataStorage: MetadataStorage<RelationsNodeMetadata[]> = inject(RELATIONS_METADATA_STORAGE);\n\n    /**\n     * Layout components register instance\n     */\n    protected layoutComponentsRegister: LayoutComponentsRegister = inject(LayoutComponentsRegister);\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Metadata that contains information about available inputs\n     */\n    protected inputsMeta: RelationsNodeMetadata<ComponentInputsRelationsOptions>|undefined;\n\n    /**\n     * Metadata that contains information about available outputs\n     */\n    protected outputsMeta: RelationsNodeMetadata<ComponentOutputsRelationsOptions>|undefined;\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    public override async initialize(): Promise<void>\n    {\n        if(!this.metadata)\n        {\n            return;\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            name: ''\n        };\n\n        const componentName = await this.layoutComponentsRegister.getComponentName(this.metadata.name);\n\n        if(!componentName)\n        {\n            return;\n        }\n\n        this.metadata.relationsOptions.name = this.metadata.name;\n        const relations = await this.relationsMetadataStorage?.getMetadata(componentName) ?? [];\n        this.inputsMeta = getInputs(relations);\n        this.outputsMeta = getOutputs(relations);\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {CustomComponentNodeSAComponent} from '../node/customComponentNode.component';\n\n/**\n * Custom component relations metadata\n */\nexport class CustomComponentRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        group: 'Components',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = CustomComponentNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["i0","ctx_r0","nodePosition","zoomLevel","inputMeta_r2","name","outputMeta_r3","ctx_r1","CustomComponentNodeSAComponent","RelationsNodeBase","constructor","relationsMetadataStorage","inject","RELATIONS_METADATA_STORAGE","layoutComponentsRegister","LayoutComponentsRegister","initialize","_this","metadata","_a","relationsOptions","componentName","getComponentName","relations","getMetadata","inputsMeta","getInputs","outputsMeta","getOutputs","t","selectors","standalone","features","decls","vars","consts","template","rf","ctx","CustomComponentNodeSAComponent_div_4_Template","CustomComponentNodeSAComponent_div_6_Template","destroySubject","inputs","outputs","CommonModule","i1","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","encapsulation","changeDetection","CustomComponentRelationsEditorMetadata","metaInfo","group","nodeDefinition","Object","freeze","this"],"sourceRoot":""}