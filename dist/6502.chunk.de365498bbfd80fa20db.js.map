{"version":3,"file":"6502.chunk.de365498bbfd80fa20db.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/services/demoDefaultsOverride/demoLayoutDefaultsOverride.service.ts","webpack://ng-universal-demo/./app/services/demoDefaultsOverride/demoRelationsDefaultsOverride.service.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.html","webpack://ng-universal-demo/../math-components/src/services/mathDynamicModuleItemsProvider/mathDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../math-components/src/services/mathDynamicModuleTypesProvider/mathDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../math-components/src/services/mathDynamicModuleRelationsProvider/mathDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../math-components/src/misc/providers.ts","webpack://ng-universal-demo/../math-components/src/misc/utils.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.html","webpack://ng-universal-demo/../relations-debugger/src/directives/showRelationsDebugger/showRelationsDebugger.directive.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/services/complexStaticRegister/complexStaticRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.module.ts","webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../layout-relations/src/modules/dynamicLayoutRelationsEditor.module.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleRelationsProvider/restDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/services/restDynamicModuleItemsProvider/restDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../rest-components/src/misc/providers.ts","webpack://ng-universal-demo/../rest-components/src/misc/utils.ts","webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../math-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../rest-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../../src/cdk/clipboard/pending-copy.ts","webpack://ng-universal-demo/../../../../src/cdk/clipboard/clipboard.ts","webpack://ng-universal-demo/../../../../material/src/directives/debugDataCopyClick/debugDataCopyClick.directive.ts","webpack://ng-universal-demo/../../../../src/directives/goBack/goBack.directive.ts","webpack://ng-universal-demo/../../../../src/modules/castPipes/modules/castPipes.module.ts","webpack://ng-universal-demo/../../../../packages/core/primitives/signals/src/equality.ts","webpack://ng-universal-demo/../../../../packages/core/primitives/signals/src/signal.ts","webpack://ng-universal-demo/../../../../packages/core/src/render3/reactivity/signal.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.html","webpack://ng-universal-demo/../../../../src/pipes/isPresent/isPresent.pipe.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {DefaultsOverride} from '@anglr/dynamic';\nimport {ButtonComponentOptions} from '@anglr/dynamic/basic-components';\nimport {extend} from '@jscrpt/common';\n\n@Injectable()\nexport class DemoLayoutDefaultsOverrideService implements DefaultsOverride\n{\n    /**\n     * @inheritdoc\n     */\n    public getOptions(packageName: string, name: string, defaultOptions: any)\n    {\n        switch (packageName)\n        {\n            case 'basic-components':\n                switch (name)\n                {\n                    case 'button':\n                        return extend(true, {}, defaultOptions, <ButtonComponentOptions>{\n                            buttonCssClass: 'btn btn-info'\n                        });\n                }\n                break;\n        }\n\n        return defaultOptions;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getDisplayName(packageName: string, name: string, displayName?: string): string \n    {\n        return displayName;\n    }        \n}","import {Injectable} from '@angular/core';\nimport {DefaultsOverride} from '@anglr/dynamic';\n\n@Injectable()\nexport class DemoRelationsDefaultsOverrideService implements DefaultsOverride\n{\n    /**\n     * @inheritdoc\n     */\n    public getOptions(packageName: string, name: string, defaultOptions: any)\n    {\n        return defaultOptions;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public getDisplayName(packageName: string, name: string, displayName?: string): string \n    {\n        switch (packageName)\n        {\n            case 'custom-components':\n                switch (name)\n                {\n                    case 'componentInputs':\n                        return 'custom input display name';\n                }\n                break;\n        }\n\n        return null;\n    }    \n}","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject, ExistingProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {LAYOUT_HISTORY_MANAGER, provideLayoutDefaultsOverride, provideLayoutEditor, REFRESH_PALETTE_OBSERVABLES} from '@anglr/dynamic/layout-editor';\nimport {provideBasicLayoutEditor, StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideMaterialLayoutEditor} from '@anglr/dynamic/material-components';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {CustomComponentsRegister, provideEditorLayoutCustomComponents} from '@anglr/dynamic/layout-relations';\nimport {provideFormLayoutEditor} from '@anglr/dynamic/form';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoLayoutPackageManager} from '../../../services/demoLayoutPackageManager/demoLayoutPackageManager.service';\nimport {DemoCustomComponentsRegister} from '../../../services/demoCustomComponentsRegister';\nimport {DemoLayoutDefaultsOverrideService} from '../../../services/demoDefaultsOverride';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutEditor(),\n        provideFormLayoutEditor(),\n        provideBasicLayoutEditor(),\n        provideMaterialLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n        provideEditorLayoutCustomComponents([], DemoCustomComponentsRegister),\n        provideLayoutDefaultsOverride(DemoLayoutDefaultsOverrideService),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoLayoutPackageManager,\n        },\n        <ExistingProvider>\n        {\n            provide: DemoCustomComponentsRegister,\n            useExisting: CustomComponentsRegister,\n        },\n        <FactoryProvider>\n        {\n            provide: REFRESH_PALETTE_OBSERVABLES,\n            useFactory: (register: DemoCustomComponentsRegister) => register.registeredChange,\n            deps: [DemoCustomComponentsRegister],\n            multi: true,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n                @Inject(LAYOUT_HISTORY_MANAGER) protected history: MetadataHistoryManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: LayoutComponentMetadata): LayoutRelationsMetadata\n    {\n        return {\n            layout: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexLayout;\n    }\n\n    protected _loadRestDemo(): void\n    {\n        this._metadata = DemoData.complexDemoRestLayout;\n    }\n\n    protected _loadFullDemo(): void\n    {\n        this._metadata = DemoData.complexDemoFullLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\"\r\n                   [getMetadataCallback]=\"_getMetadata\"\r\n                   [history]=\"history\"\r\n                   [componentMarking]=\"true\"\r\n                   routePath=\"/relationsComplex/layout\"\r\n                   (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadRestDemo()\">\r\n        <span>demo rest</span>\r\n    </button>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadFullDemo()\">\r\n        <span>demo full</span>\r\n    </button>\r\n\r\n    <debug-data [copyClick]=\"_metadata\"><div class=\"margin-horizontal-small\">metadata</div></debug-data>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for math module items\n */\n@Injectable()\nexport class MathDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'math-components':\n            {\n                try\n                {\n                    this._logger?.debug('MathDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('MathDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for math types\n */\n@Injectable()\nexport class MathDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MathDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'math-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MathDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for math types\n */\n@Injectable()\nexport class MathDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('MathDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {item: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'math-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('MathDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {item: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {MathDynamicModuleItemsProvider, MathDynamicModuleRelationsProvider, MathDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for math package layout components provider\n */\nexport const MATH_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MathDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for basic dynamic layout module types provider\n */\nexport const MATH_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: MathDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for basic dynamic relations types provider\n */\nexport const MATH_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: MathDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for basic package relations nodes provider\n */\nexport const MATH_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: MathDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for basic package relations components provider\n */\nexport const MATH_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MathDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {MATH_LAYOUT_COMPONENTS_PROVIDER, MATH_LAYOUT_MODULE_TYPES_PROVIDER, MATH_RELATIONS_COMPONENTS_PROVIDER, MATH_RELATIONS_MODULE_TYPES_PROVIDER, MATH_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout math subpackage\n */\nexport function provideMathLayout(): Provider[]\n{\n    return [\n        MATH_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations math subpackage\n */\nexport function provideMathRelations(): Provider[]\n{\n    return [\n        MATH_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor math subpackage\n */\nexport function provideMathLayoutEditor(): Provider[]\n{\n    return [\n        MATH_LAYOUT_COMPONENTS_PROVIDER,\n        MATH_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('math-components'),\n    ];\n}\n\n/**\n * Providers for relations editor math subpackage\n */\nexport function provideMathRelationsEditor(): Provider[]\n{\n    return [\n        MATH_RELATIONS_MODULE_TYPES_PROVIDER,\n        MATH_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('math-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor math subpackage\n */\nexport function provideMathLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideMathRelationsEditor(),\n        ...provideMathLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations math subpackage\n */\nexport function provideMathLayoutRelations(): Provider[]\n{\n    return [\n        ...provideMathLayout(),\n        ...provideMathRelations(),\n    ];\n}","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static input relations metadata loader\n */\nexport const StaticInputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticInput.relationsMetadata')).StaticInputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {DynamicOutput, RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticInputRelationsMetadataLoader} from './staticInput.metadata';\n\n/**\n * Static input component\n */\n@Component(\n{\n    selector: 'static-input',\n    templateUrl: 'staticInput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticInputRelationsMetadataLoader)\nexport class StaticInputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-input';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Defines form control for string value\n     */\n    protected stringForm: FormControl<string> = new FormControl<string>('');\n\n    /**\n     * Defines form control for boolean value\n     */\n    protected booleanForm: FormControl<boolean> = new FormControl<boolean>(false);\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * String output\n     */\n    @DynamicOutput()\n    public stringOutput: string;\n\n    /**\n     * Boolean output\n     */\n    @DynamicOutput()\n    public booleanOutput: boolean;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n        this.stringForm.valueChanges.subscribe(value => this.stringOutput = value);\n        this.booleanForm.valueChanges.subscribe(value => this.booleanOutput = value);\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticInputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticInputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div>INPUT:</div>\n<div class=\"flex-column\">\n    <input type=\"text\" [formControl]=\"stringForm\">\n    <input type=\"checkbox\" [formControl]=\"booleanForm\">\n</div>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static output relations metadata loader\n */\nexport const StaticOutputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticOutput.relationsMetadata')).StaticOutputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, OnInit, OnDestroy} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticOutputRelationsMetadataLoader} from './staticOutput.metadata';\n\n/**\n * Static output component\n */\n@Component(\n{\n    selector: 'static-output',\n    templateUrl: 'staticOutput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticOutputRelationsMetadataLoader)\nexport class StaticOutputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-output';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Boolean input\n     */\n    @Input()\n    public booleanInput: boolean;\n\n    /**\n     * String input\n     */\n    @Input()\n    public stringInput: string;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticOutputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticOutputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticOutputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticOutputSAComponent.relationsId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div>OUTPUT:</div>\n<div>\n    <div>string: {{stringInput}}</div>\n    <div>boolean: {{booleanInput}}</div>\n</div>","import {ComponentRef, Directive, EmbeddedViewRef, HostListener, Inject, Injector, Input, OnChanges, OnDestroy, SimpleChanges, ViewContainerRef} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Position, POSITION} from '@anglr/common';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {nameof} from '@jscrpt/common';\n\nimport {RelationsDebuggerVisualizerSAComponent} from '../../components';\n\n/**\n * Directive that shows relations debugger\n */\n@Directive(\n{\n    selector: '[showRelationsDebugger]',\n    standalone: true,\n})\nexport class ShowRelationsDebuggerSADirective implements OnDestroy, OnChanges\n{\n    //######################### protected properties #########################\n\n    /**\n     * Instance of reference to created visualizer\n     */\n    protected visualizer: ComponentRef<RelationsDebuggerVisualizerSAComponent>|undefined|null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Name of element and optionaly css classes to be used as container, if not specified body is used\n     */\n    @Input()\n    public containerElement: string|undefined|null;\n\n    /**\n     * Definition of relations and their nodes, used for rendering canvas\n     */\n    @Input()\n    public relationsDefinition: RelationsNodeMetadata[] = [];\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Delay between steps during automatic play\n     */\n    @Input()\n    public playDelay: number = 1500;\n\n    //######################### constructor #########################\n    constructor(@Inject(POSITION) protected position: Position,\n                protected viewContainer: ViewContainerRef,\n                protected injector: Injector,\n                @Inject(DOCUMENT) protected document: Document, )\n    {\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n    \n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<ShowRelationsDebuggerSADirective>('playDelay') in changes)\n        {\n            if(this.visualizer)\n            {\n                this.visualizer.setInput(nameof<RelationsDebuggerVisualizerSAComponent>('playDelay'), this.playDelay);\n            }\n        }\n\n        if(nameof<ShowRelationsDebuggerSADirective>('relationsDefinition') in changes)\n        {\n            if(this.visualizer)\n            {\n                this.visualizer.setInput(nameof<RelationsDebuggerVisualizerSAComponent>('relationsDefinition'), this.relationsDefinition);\n            }\n        }\n\n        if(this.visualizer)\n        {\n            this.visualizer.changeDetectorRef.detectChanges();\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this.visualizer?.destroy();\n        this.visualizer = null;\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Shows relations debugger\n     * @param event - Event that occured\n     */\n    @HostListener('click', ['$event'])\n    public show(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if(ngRelationsDebugger)\n        {\n            this.visualizer = this.viewContainer.createComponent(RelationsDebuggerVisualizerSAComponent);\n            const visualizerElement = (this.visualizer.hostView as EmbeddedViewRef<unknown>).rootNodes[0] as HTMLElement;\n\n            //render to specified target element\n            if(this.containerElement)\n            {\n                let element = this.document.querySelector(`body ${this.containerElement}`);\n\n                //element does not exists\n                if(!element)\n                {\n                    const [name, ...css] = this.containerElement.split('.');\n\n                    element = this.document.createElement(name);\n\n                    if(css?.length)\n                    {\n                        for(const cssClass of css)\n                        {\n                            element.classList.add(cssClass);\n                        }\n                    }\n\n                    this.document.body.appendChild(element);\n                }\n\n                element.appendChild(visualizerElement);\n            }\n            //render directly to body\n            else\n            {\n                this.document.body.appendChild(visualizerElement);\n            }\n\n            this.visualizer.instance.close.subscribe(() => this.ngOnDestroy());\n            this.visualizer.setInput(nameof<RelationsDebuggerVisualizerSAComponent>('playDelay'), this.playDelay);\n            this.visualizer.setInput(nameof<RelationsDebuggerVisualizerSAComponent>('relationsDefinition'), this.relationsDefinition);\n\n            this.visualizer.changeDetectorRef.markForCheck();\n        }\n    }\n}","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/layout', available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/relations', available.value]\">relations</a>\r\n    <a class=\"margin-horizontal-small\" href=\"#\" showRelationsDebugger [relationsDefinition]=\"relations\">debug</a>\r\n\r\n    <ng-select [formControl]=\"available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n\r\n    <debug-data [copyClick]=\"selectedMetadata\"><div class=\"margin-horizontal-small\">{{available.value}}</div></debug-data>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <static-input class=\"margin-right-extra-small\"></static-input>\r\n\r\n    <div class=\"flex-1 overflow-vertical-scroll thin-scrollbar\" style=\"border: 1px dotted #666;\">\r\n        <ng-container [layoutComponentRenderer]=\"metadata\"></ng-container>\r\n    </div>\r\n\r\n    <static-output style=\"width: 200px;\"></static-output>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy, FactoryProvider} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {provideLayoutRelationsCustomComponents} from '@anglr/dynamic/layout-relations';\nimport {RelationsManager, RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideCssLayoutRelations} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelations} from '@anglr/dynamic/handlebars-components';\nimport {provideMaterialLayoutRelations} from '@anglr/dynamic/material-components';\nimport {provideMathLayoutRelations} from '@anglr/dynamic/math-components';\nimport {provideBasicLayoutRelations} from '@anglr/dynamic/basic-components';\nimport {provideRestLayoutRelations} from '@anglr/dynamic/rest-components';\nimport {provideFormLayoutRelations} from '@anglr/dynamic/form';\nimport {MetadataStorage} from '@anglr/dynamic';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelationsCustomComponents(),\n        provideFormLayoutRelations(),\n        provideBasicLayoutRelations(),\n        provideMaterialLayoutRelations(),\n        provideCssLayoutRelations(),\n        provideTinyMceLayoutRelations(),\n        provideHandlebarsLayoutRelations(),\n        provideRestLayoutRelations(),\n        provideMathLayoutRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected available: FormControl = new FormControl('');\n\n    protected metadata: LayoutComponentMetadata = null;\n\n    protected relations: RelationsNodeMetadata[] = [];\n\n    protected selectedMetadata: LayoutRelationsMetadata|null = null;\n\n    protected availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private store: StoreDataService<LayoutRelationsMetadata>,\n                private router: Router,\n                private relationsManager: RelationsManager,\n                private route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.availableNames = this.store.getStored();\n\n        this.route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this.available.setValue(id);\n                const meta = this.selectedMetadata = this.store.getData(id);\n                this.metadata = meta?.layout;\n                this.relations = meta?.relations ?? [];\n                this.relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this.selectedMetadata = null;\n                this.relationsManager.setRelations([]);\n            }\n\n            this.available.valueChanges.subscribe(val =>\n            {\n                this.router.navigate(['/relationsComplex/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {StaticInputSAComponent} from '../../components/staticInput/staticInput.component';\nimport {StaticOutputSAComponent} from '../../components/staticOutput/staticOutput.component';\n\n/**\n * Static components register for relations complex sample\n */\n@Injectable()\nexport class ComplexStaticRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[StaticInputSAComponent.relationsId] = StaticInputSAComponent;\n        result[StaticOutputSAComponent.relationsId] = StaticOutputSAComponent;\n\n        return result;\n    }\n}","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER, provideRelationsDefaultOverride} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager, provideLayoutRelationsEditorWithStatic, provideEditorRelationsCustomComponents} from '@anglr/dynamic/layout-relations';\nimport {provideTinyMceLayoutRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {provideCssLayoutRelationsEditor} from '@anglr/dynamic/css-components';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideBasicLayoutRelationsEditor} from '@anglr/dynamic/basic-components';\nimport {provideMaterialLayoutRelationsEditor} from '@anglr/dynamic/material-components';\nimport {provideMathLayoutRelationsEditor} from '@anglr/dynamic/math-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {provideRestLayoutRelationsEditor} from '@anglr/dynamic/rest-components';\nimport {provideFormLayoutRelationsEditor} from '@anglr/dynamic/form';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {ComplexStaticRegister} from '../misc';\nimport {DemoRelationsPackageManager} from '../../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\nimport {DemoCustomComponentsRegister} from '../../../services/demoCustomComponentsRegister';\nimport {DemoRelationsDefaultsOverrideService} from '../../../services/demoDefaultsOverride';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations),\n            deps: [StoreDataService]\n        },\n        provideFormLayoutRelationsEditor(),\n        provideBasicLayoutRelationsEditor(),\n        provideHandlebarsLayoutRelationsEditor(),\n        provideMaterialLayoutRelationsEditor(),\n        provideRestLayoutRelationsEditor(),\n        provideTinyMceLayoutRelationsEditor(),\n        provideCssLayoutRelationsEditor(),\n        provideMathLayoutRelationsEditor(),\n        provideEditorRelationsCustomComponents(provideLayoutRelationsEditorWithStatic(ComplexStaticRegister), DemoCustomComponentsRegister),\n        provideRelationsDefaultOverride(DemoRelationsDefaultsOverrideService),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): LayoutRelationsMetadata\n    {\n        return {\n            relations: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexRelations;\n    }\n\n    protected _loadRestDemo(): void\n    {\n        this._metadata = DemoData.complexDemoRestRelations;\n    }\n\n    protected _loadFullDemo(): void\n    {\n        this._metadata = DemoData.complexDemoFullRelations;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" [layoutControls]=\"false\" routePath=\"/relationsComplex/relations\" (metadataChange)=\"setMetadata($event)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadRestDemo()\">\n        <span>demo rest</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadFullDemo()\">\n        <span>demo full</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    LayoutComponent,\n    RelationsComponent,\n    PreviewComponent,\n];","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DebugDataCopyClickModule} from '@anglr/common/material';\nimport {NgSelectModule} from '@anglr/select';\nimport {GoBackSADirective} from '@anglr/common';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\nimport {ShowRelationsDebuggerSADirective} from '@anglr/dynamic/relations-debugger';\n\nimport {components} from './relationsComplex.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {StaticInputSAComponent, StaticOutputSAComponent} from './misc';\n\n/**\n * Module for relations complex sample with editor, static components and layout components samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackSADirective,\n        DynamicLayoutRelationsEditorModule,\n        DebugDataCopyClickModule,\n        LoadSaveNewSAComponent,\n        StaticInputSAComponent,\n        StaticOutputSAComponent,\n        ShowRelationsDebuggerSADirective,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_COMPLEX_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsComplexModule\n{\n}","export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|null|undefined, parentControl: AbstractControl|undefined, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","import {ModuleWithProviders, NgModule, Type} from '@angular/core';\nimport {DynamicLayoutEditorModule} from '@anglr/dynamic/layout-editor';\nimport {DynamicRelationsEditorModule, StaticComponentsRegister} from '@anglr/dynamic/relations-editor';\n\nimport {provideLayoutRelationsEditor, provideLayoutRelationsEditorWithStatic} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic layout relations editor rendering\n */\n@NgModule(\n{\n    exports:\n    [\n        DynamicLayoutEditorModule,\n        DynamicRelationsEditorModule,\n    ]\n})\nexport class DynamicLayoutRelationsEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicLayoutRelationsEditorModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicLayoutRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutRelationsEditorModule,\n            providers:\n            [\n                provideLayoutRelationsEditor(),\n            ]\n        };\n    }\n\n    /**\n     * Creates DynamicLayoutRelationsEditorModule extended with providers for static components\n     * @param staticRegister - Type that represents implementation of static components register\n     */\n    public static withStaticComponents(staticRegister: Type<StaticComponentsRegister>): ModuleWithProviders<DynamicLayoutRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicLayoutRelationsEditorModule,\n            providers:\n            [\n                provideLayoutRelationsEditorWithStatic(staticRegister, ),\n            ]\n        };\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for rest types\n */\n@Injectable()\nexport class RestDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'rest-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('RestDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for rest module items\n */\n@Injectable()\nexport class RestDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'rest-components':\n            {\n                try\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('RestDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {RestDynamicModuleItemsProvider, RestDynamicModuleRelationsProvider} from '../services';\n\n/**\n * Provider for rest dynamic relations types provider\n */\nexport const REST_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: RestDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations nodes provider\n */\nexport const REST_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for rest package relations components provider\n */\nexport const REST_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: RestDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {REST_RELATIONS_COMPONENTS_PROVIDER, REST_RELATIONS_MODULE_TYPES_PROVIDER, REST_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for relations rest subpackage\n */\nexport function provideRestRelations(): Provider[]\n{\n    return [\n        REST_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations editor rest subpackage\n */\nexport function provideRestRelationsEditor(): Provider[]\n{\n    return [\n        REST_RELATIONS_MODULE_TYPES_PROVIDER,\n        REST_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('rest-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor rest subpackage\n */\nexport function provideRestLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideRestRelationsEditor(),\n    ];\n}\n\n/**\n * Providers for layout relations rest subpackage\n */\nexport function provideRestLayoutRelations(): Provider[]\n{\n    return [\n        ...provideRestRelations(),\n    ];\n}","var map = {\n\t\"./checkbox/type\": [\n\t\t34757,\n\t\t4757\n\t],\n\t\"./datepicker/type\": [\n\t\t96425,\n\t\t6425\n\t],\n\t\"./formGroup/type\": [\n\t\t70613,\n\t\t613\n\t],\n\t\"./numberField/type\": [\n\t\t90560,\n\t\t560\n\t],\n\t\"./period/type\": [\n\t\t13487,\n\t\t3487\n\t],\n\t\"./radio/type\": [\n\t\t41197,\n\t\t1197\n\t],\n\t\"./select/type\": [\n\t\t98746,\n\t\t8746\n\t],\n\t\"./textField/type\": [\n\t\t80477,\n\t\t477\n\t],\n\t\"./textarea/type\": [\n\t\t25552,\n\t\t5552\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./add/type\": [\n\t\t88880,\n\t\t8765,\n\t\t4760\n\t],\n\t\"./divide/type\": [\n\t\t95210,\n\t\t8765,\n\t\t5210\n\t],\n\t\"./multiply/type\": [\n\t\t53164,\n\t\t8765,\n\t\t3164\n\t],\n\t\"./power/type\": [\n\t\t4352,\n\t\t8765,\n\t\t4352\n\t],\n\t\"./round/type\": [\n\t\t52133,\n\t\t8765,\n\t\t2133\n\t],\n\t\"./subtract/type\": [\n\t\t33507,\n\t\t8765,\n\t\t3507\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 95554;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./rest/type\": [\n\t\t20309,\n\t\t309\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2721;\nmodule.exports = webpackAsyncContext;","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nexport class PendingCopy {\n  private _textarea: HTMLTextAreaElement | undefined;\n\n  constructor(text: string, private readonly _document: Document) {\n    const textarea = (this._textarea = this._document.createElement('textarea'));\n    const styles = textarea.style;\n\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    // The element needs to be inserted into the fullscreen container, if the page\n    // is in fullscreen mode, otherwise the browser won't execute the copy command.\n    (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n  }\n\n  /** Finishes copying the text. */\n  copy(): boolean {\n    const textarea = this._textarea;\n    let successful = false;\n\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement as HTMLOrSVGElement | null;\n\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n\n    return successful;\n  }\n\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {PendingCopy} from './pending-copy';\n\n/**\n * A service for copying text to the clipboard.\n */\n@Injectable({providedIn: 'root'})\nexport class Clipboard {\n  private readonly _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text: string): boolean {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n\n    return successful;\n  }\n\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text: string): PendingCopy {\n    return new PendingCopy(text, this._document);\n  }\n}\n","import {Directive, HostBinding, HostListener, Input} from '@angular/core';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\n/**\n * Directive that allows to copy data to clipboard on click on debug-data\n */\n@Directive(\n{\n    selector: 'debug-data[copyClick]'\n})\nexport class DebugDataCopyClickDirective\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data to be copied as serialized json\n     */\n    @Input('copyClick')\n    public data: any;\n\n    //######################### public properties - host #########################\n\n    /**\n     * Adds css class clickable to this element\n     * \n     * @internal\n     */\n    @HostBinding('class.clickable')\n    public clickable: boolean = true;\n\n    //######################### constructor #########################\n    constructor(protected _clipboard: Clipboard)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Copies data to clipboard on click\n     * \n     * @internal\n     */\n    @HostListener('click')\n    public copyData(): void\n    {\n        this._clipboard.copy(JSON.stringify(this.data, null, 4));\n    }\n}","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]',\n    standalone: true,\n})\nexport class GoBackSADirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}","import {NgModule} from '@angular/core';\n\nimport {AsHtmlElementPipe, AsNgClassRequiredPipe, AsRequiredTypePipe, CastTypePipe} from '../pipes';\n\n/**\n * Module that holds cast pipes\n */\n@NgModule(\n{\n    declarations:\n    [\n        AsHtmlElementPipe,\n        AsNgClassRequiredPipe,\n        AsRequiredTypePipe,\n        CastTypePipe,\n    ],\n    exports:\n    [\n        AsHtmlElementPipe,\n        AsNgClassRequiredPipe,\n        AsRequiredTypePipe,\n        CastTypePipe,\n    ]\n})\nexport class CastPipesModule\n{\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A comparison function which can determine if two values are equal.\n */\nexport type ValueEqualityFn<T> = (a: T, b: T) => boolean;\n\n/**\n * The default equality function used for `signal` and `computed`, which uses referential equality.\n */\nexport function defaultEquals<T>(a: T, b: T) {\n  return Object.is(a, b);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defaultEquals, ValueEqualityFn} from './equality';\nimport {throwInvalidWriteToSignalError} from './errors';\nimport {producerAccessed, producerIncrementEpoch, producerNotifyConsumers, producerUpdatesAllowed, REACTIVE_NODE, ReactiveNode, SIGNAL} from './graph';\n\n// Required as the signals library is in a separate package, so we need to explicitly ensure the\n// global `ngDevMode` type is defined.\ndeclare const ngDevMode: boolean|undefined;\n\n/**\n * If set, called after `WritableSignal`s are updated.\n *\n * This hook can be used to achieve various effects, such as running effects synchronously as part\n * of setting a signal.\n */\nlet postSignalSetFn: (() => void)|null = null;\n\nexport interface SignalNode<T> extends ReactiveNode {\n  value: T;\n  equal: ValueEqualityFn<T>;\n  readonly[SIGNAL]: SignalNode<T>;\n}\n\nexport type SignalBaseGetter<T> = (() => T)&{readonly[SIGNAL]: unknown};\n\n// Note: Closure *requires* this to be an `interface` and not a type, which is why the\n// `SignalBaseGetter` type exists to provide the correct shape.\nexport interface SignalGetter<T> extends SignalBaseGetter<T> {\n  readonly[SIGNAL]: SignalNode<T>;\n}\n\n/**\n * Create a `Signal` that can be set or updated directly.\n */\nexport function createSignal<T>(initialValue: T): SignalGetter<T> {\n  const node: SignalNode<T> = Object.create(SIGNAL_NODE);\n  node.value = initialValue;\n  const getter = (() => {\n                   producerAccessed(node);\n                   return node.value;\n                 }) as SignalGetter<T>;\n  (getter as any)[SIGNAL] = node;\n  return getter;\n}\n\nexport function setPostSignalSetFn(fn: (() => void)|null): (() => void)|null {\n  const prev = postSignalSetFn;\n  postSignalSetFn = fn;\n  return prev;\n}\n\nexport function signalGetFn<T>(this: SignalNode<T>): T {\n  producerAccessed(this);\n  return this.value;\n}\n\nexport function signalSetFn<T>(node: SignalNode<T>, newValue: T) {\n  if (!producerUpdatesAllowed()) {\n    throwInvalidWriteToSignalError();\n  }\n\n  const value = node.value;\n  if (Object.is(value, newValue)) {\n    if (typeof ngDevMode !== 'undefined' && ngDevMode && !node.equal(value, newValue)) {\n      console.warn(\n          'Signal value equality implementations should always return `true` for' +\n          ' values that are the same according to `Object.is` but returned `false` instead.');\n    }\n  } else if (!node.equal(value, newValue)) {\n    node.value = newValue;\n    signalValueChanged(node);\n  }\n}\n\nexport function signalUpdateFn<T>(node: SignalNode<T>, updater: (value: T) => T): void {\n  if (!producerUpdatesAllowed()) {\n    throwInvalidWriteToSignalError();\n  }\n\n  signalSetFn(node, updater(node.value));\n}\n\nexport function signalMutateFn<T>(node: SignalNode<T>, mutator: (value: T) => void): void {\n  if (!producerUpdatesAllowed()) {\n    throwInvalidWriteToSignalError();\n  }\n  // Mutate bypasses equality checks as it's by definition changing the value.\n  mutator(node.value);\n  signalValueChanged(node);\n}\n\n// Note: Using an IIFE here to ensure that the spread assignment is not considered\n// a side-effect, ending up preserving `COMPUTED_NODE` and `REACTIVE_NODE`.\n// TODO: remove when https://github.com/evanw/esbuild/issues/3392 is resolved.\nconst SIGNAL_NODE: object = /* @__PURE__ */ (() => {\n  return {\n    ...REACTIVE_NODE,\n    equal: defaultEquals,\n    value: undefined,\n  };\n})();\n\nfunction signalValueChanged<T>(node: SignalNode<T>): void {\n  node.version++;\n  producerIncrementEpoch();\n  producerNotifyConsumers(node);\n  postSignalSetFn?.();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {createSignal, SIGNAL, SignalGetter, signalMutateFn, SignalNode, signalSetFn, signalUpdateFn} from '@angular/core/primitives/signals';\n\nimport {Signal, ValueEqualityFn} from './api';\n\n/**\n * A `Signal` with a value that can be mutated via a setter interface.\n */\nexport interface WritableSignal<T> extends Signal<T> {\n  /**\n   * Directly set the signal to a new value, and notify any dependents.\n   */\n  set(value: T): void;\n\n  /**\n   * Update the value of the signal based on its current value, and\n   * notify any dependents.\n   */\n  update(updateFn: (value: T) => T): void;\n\n  /**\n   * Returns a readonly version of this signal. Readonly signals can be accessed to read their value\n   * but can't be changed using set, update or mutate methods. The readonly signals do _not_ have\n   * any built-in mechanism that would prevent deep-mutation of their value.\n   */\n  asReadonly(): Signal<T>;\n}\n\n/**\n * Options passed to the `signal` creation function.\n */\nexport interface CreateSignalOptions<T> {\n  /**\n   * A comparison function which defines equality for signal values.\n   */\n  equal?: ValueEqualityFn<T>;\n}\n\n/**\n * Create a `Signal` that can be set or updated directly.\n */\nexport function signal<T>(initialValue: T, options?: CreateSignalOptions<T>): WritableSignal<T> {\n  const signalFn = createSignal(initialValue) as SignalGetter<T>& WritableSignal<T>;\n  const node = signalFn[SIGNAL];\n  if (options?.equal) {\n    node.equal = options.equal;\n  }\n\n  signalFn.set = (newValue: T) => signalSetFn(node, newValue);\n  signalFn.update = (updateFn: (value: T) => T) => signalUpdateFn(node, updateFn);\n  signalFn.asReadonly = signalAsReadonlyFn.bind(signalFn as any) as () => Signal<T>;\n\n  return signalFn as WritableSignal<T>;\n}\n\nfunction signalAsReadonlyFn<T>(this: SignalGetter<T>): Signal<T> {\n  const node = this[SIGNAL] as SignalNode<T>& {readonlyFn?: Signal<T>};\n  if (node.readonlyFn === undefined) {\n    const readonlyFn = () => this();\n    (readonlyFn as any)[SIGNAL] = node;\n    node.readonlyFn = readonlyFn as Signal<T>;\n  }\n  return node.readonlyFn;\n}\n","import {Component, ChangeDetectionStrategy, OnDestroy, OnInit, ChangeDetectorRef, ElementRef, signal, WritableSignal} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DebugDataEnabledService} from '../../services/debugDataEnabled/debugDataEnabled.service';\n\n/**\n * Name of css class for enabled debug data\n */\nconst ENABLED = 'enabled';\n\n/**\n * Component used for displaying debug data\n */\n@Component(\n{\n    selector: 'debug-data',\n    templateUrl: 'debugData.component.html',\n    styleUrls: ['debugData.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DebugDataComponent implements OnDestroy, OnInit\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscription for changes of debug data enabled\n     */\n    protected debugDataEnabledChangeSubscription: Subscription|undefined|null;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is debug data enabled\n     *\n     * @internal\n     */\n    protected enabled: WritableSignal<boolean> = signal(false);\n\n    //######################### constructor #########################\n    constructor(protected debugDataEnabledSvc: DebugDataEnabledService,\n                protected changeDetector: ChangeDetectorRef,\n                protected element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.enabled.set(this.debugDataEnabledSvc.enabled);\n        this.setEnabledCssClass();\n\n        this.debugDataEnabledChangeSubscription = this.debugDataEnabledSvc.enabledChange.subscribe(() =>\n        {\n            this.enabled.set(this.debugDataEnabledSvc.enabled);\n            this.setEnabledCssClass();\n\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this.debugDataEnabledChangeSubscription?.unsubscribe();\n        this.debugDataEnabledChangeSubscription = null;\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Sets enabled css class according enabled state\n     */\n    protected setEnabledCssClass(): void\n    {\n        if(this.enabled())\n        {\n            this.element.nativeElement.classList.add(ENABLED);\n        }\n        else\n        {\n            this.element.nativeElement.classList.remove(ENABLED);\n        }\n    }\n}","<ng-template [ngIf]=\"enabled()\">\r\n    <ng-content></ng-content>\r\n</ng-template>","import {Pipe, PipeTransform} from '@angular/core';\nimport {isPresent} from '@jscrpt/common';\n\n/**\n * Returns true if object is different from null or undefined\n */\n@Pipe(\n{\n    name: 'isPresent',\n    standalone: true,\n})\nexport class IsPresentSAPipe implements PipeTransform\n{\n    //######################### public methods #########################\n\n    /**\n     * Checks whether is value different from null or undefined\n     * @param value - Value to be checked\n     */\n    public transform(value: unknown): boolean\n    {\n        return isPresent(value);\n    }\n}"],"names":["DemoLayoutDefaultsOverrideService","getOptions","packageName","name","defaultOptions","extend","buttonCssClass","getDisplayName","displayName","factory","ɵfac","DemoRelationsDefaultsOverrideService","LayoutComponent","emptyMetadata","id","generateId","package","options","children","constructor","_store","history","_metadata","_getMetadata","metadata","layout","_loadDemo","this","DemoData","demoRelationsComplexLayout","_loadRestDemo","complexDemoRestLayout","_loadFullDemo","complexDemoFullLayout","i0","i1","LAYOUT_HISTORY_MANAGER","selectors","features","EditorHotkeys","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","getData","deps","StoreDataService","provideLayoutEditor","provideFormLayoutEditor","provideBasicLayoutEditor","provideMaterialLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","provideEditorLayoutCustomComponents","DemoCustomComponentsRegister","provideLayoutDefaultsOverride","PackageManager","useClass","DemoLayoutPackageManager","useExisting","CustomComponentsRegister","REFRESH_PALETTE_OBSERVABLES","register","registeredChange","multi","decls","vars","consts","template","rf","ctx","$event","tmp_b_0","undefined","__decorate","BindThis","ComponentRoute","path","MetadataHistoryManager","MathDynamicModuleItemsProvider","_logger","tryToGet","source","_this","debug","item","e","LOGGER","MathDynamicModuleTypesProvider","module","moduleName","MathDynamicModuleRelationsProvider","MATH_LAYOUT_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","MATH_RELATIONS_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","RELATIONS_MODULE_TYPES_PROVIDERS","MATH_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","MATH_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideMathLayout","StaticInputRelationsMetadataLoader","_ref","StaticInputRelationsEditorMetadata","apply","arguments","StaticInputSAComponent","StaticInputSAComponent_1","relationsId","_changeDetector","_relationsProcessor","_componentManager","stringForm","FormControl","booleanForm","valueChanges","subscribe","value","stringOutput","booleanOutput","ngOnInit","registerComponent","initialized","updateRelations","ngOnDestroy","destroyComponent","unregisterComponent","invalidateVisuals","detectChanges","standalone","ReactiveFormsModule","i2","encapsulation","changeDetection","DynamicOutput","RelationsEditorMetadata","ChangeDetectorRef","RelationsProcessor","RelationsComponentManager","StaticOutputRelationsMetadataLoader","StaticOutputRelationsEditorMetadata","StaticOutputSAComponent","StaticOutputSAComponent_1","inputs","booleanInput","stringInput","ShowRelationsDebuggerSADirective","position","viewContainer","injector","document","relationsDefinition","playDelay","ngOnChanges","changes","nameof","visualizer","setInput","changeDetectorRef","destroy","show","event","preventDefault","stopPropagation","val_r1","POSITION","DOCUMENT","hostBindings","PreviewComponent","router","relationsManager","route","available","relations","selectedMetadata","availableNames","getStored","params","setValue","meta","setRelations","val","navigate","skipLocationChange","replaceUrl","i3","RELATIONS_METADATA_STORAGE","provideLayoutRelationsCustomComponents","provideFormLayoutRelations","provideBasicLayoutRelations","provideMaterialLayoutRelations","provideCssLayoutRelations","provideTinyMceLayoutRelations","provideHandlebarsLayoutRelations","provideRestLayoutRelations","PreviewComponent_ng_option_8_Template","_c0","_c1","Router","RelationsManager","ActivatedRoute","ComplexStaticRegister","Register","getDefinedTypes","result","t","RelationsComponent","_layoutManager","demoRelationsComplexRelations","complexDemoRestRelations","complexDemoFullRelations","setMetadata","setLayout","RELATIONS_HISTORY_MANAGER","provideFormLayoutRelationsEditor","provideBasicLayoutRelationsEditor","provideHandlebarsLayoutRelationsEditor","provideMaterialLayoutRelationsEditor","provideRestLayoutRelationsEditor","provideTinyMceLayoutRelationsEditor","provideCssLayoutRelationsEditor","provideStaticPackageSource","provideEditorRelationsCustomComponents","provideLayoutRelationsEditorWithStatic","provideRelationsDefaultOverride","DemoRelationsPackageManager","LayoutManager","components","RelationsComplexModule","createStoreDataServiceFactory","imports","CommonModule","RouterModule","NgSelectModule","DynamicLayoutRelationsEditorModule","DebugDataCopyClickModule","LoadSaveNewSAComponent","ModuleRoutes","FormComponentControlType","FormDynamicModuleItemsProvider","FormDynamicModuleTypesProvider","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","FORM_MODULE_TYPES_PROVIDER","FORM_RELATIONS_MODULE_TYPES_PROVIDER","FORM_RELATIONS_NODES_PROVIDER","FORM_RELATIONS_COMPONENTS_PROVIDER","provideFormLayout","getFormControl","controlName","parentControl","defaultControlType","defaultValue","get","getControlForType","type","FormArray","FormGroup","withProviders","ngModule","providers","provideLayoutRelationsEditor","withStaticComponents","staticRegister","DynamicLayoutEditorModule","DynamicRelationsEditorModule","RestDynamicModuleRelationsProvider","RestDynamicModuleItemsProvider","REST_RELATIONS_MODULE_TYPES_PROVIDER","REST_RELATIONS_NODES_PROVIDER","REST_RELATIONS_COMPONENTS_PROVIDER","provideRestRelationsEditor","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","keys","Object","exports","all","slice","PendingCopy","text","_document","textarea","_textarea","createElement","styles","style","top","opacity","left","setAttribute","readOnly","fullscreenElement","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","remove","Clipboard","pendingCopy","beginCopy","providedIn","DebugDataCopyClickDirective","_clipboard","data","clickable","copyData","JSON","stringify","hostVars","GoBackSADirective","_location","goBack","back","CastPipesModule","defaultEquals","a","b","is","postSignalSetFn","signalSetFn","node","newValue","producerUpdatesAllowed","throwInvalidWriteToSignalError","equal","version","producerIncrementEpoch","producerNotifyConsumers","signalValueChanged","SIGNAL_NODE","REACTIVE_NODE","signal","initialValue","signalFn","create","getter","producerAccessed","SIGNAL","createSignal","set","update","updateFn","updater","signalUpdateFn","asReadonly","signalAsReadonlyFn","bind","readonlyFn","DebugDataComponent_ng_template_0_Template","ENABLED","DebugDataComponent","debugDataEnabledSvc","changeDetector","element","debugDataEnabledChangeSubscription","enabled","setEnabledCssClass","enabledChange","unsubscribe","nativeElement","classList","add","ngContentSelectors","dependencies","IsPresentSAPipe","transform","isPresent","pure"],"sourceRoot":""}