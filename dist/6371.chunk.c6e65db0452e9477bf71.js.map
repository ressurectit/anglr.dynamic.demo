{"version":3,"file":"6371.chunk.c6e65db0452e9477bf71.js","mappings":";kkBAgDaA,EAAe,MAqBxBC,YAAsBC,EACgCC,GADhC,KAAAD,OAAAA,EACgC,KAAAC,QAAAA,EAlB5C,KAAAC,UAA0C,IAoBnD,CAlBaC,oBAEV,MAAO,CACHC,GAAI,eAAcC,EAAAA,EAAAA,IAAW,MAC7BC,YAAa,OACbC,QAAS,mBACTC,KAAM,aACNC,QACA,CACIC,SAAU,IAGrB,CAWSC,aAAaC,GAEnB,MAAO,CACHC,OAAQD,EAEf,CAESE,YAENC,KAAKb,UAAYc,EAAAA,EAAAA,0BACpB,CAESC,gBAENF,KAAKb,UAAYc,EAAAA,EAAAA,qBACpB,CAESE,gBAENH,KAAKb,UAAYc,EAAAA,EAAAA,qBACpB,oCAjDQlB,GAAeqB,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAsBJC,EAAAA,IAAsB,oBAtBjCtB,EAAeuB,UAAAA,CAAAA,CAAAA,uBAAAC,SAAAA,CAAAA,EAAAA,EAvBxB,CACIC,EAAAA,EAEA,CACIC,QAASC,EAAAA,GACTC,WAAaC,GAAqD,IAAIC,EAAAA,GAAyCxB,GAAMuB,EAAME,QAAQzB,IAAKS,SACxIiB,KAAM,CAACC,EAAAA,KAEXC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MAEA,CACIZ,QAASa,EAAAA,EACTC,SAAUC,EAAAA,MAEjBC,MAAAA,GAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,OAAAA,SAAAA,SAAAA,GAAAA,EAAAA,MAAAA,cAAAA,4BAAAA,CAAAA,YAAAA,2BAAAA,EAAAA,QAAAA,sBAAAA,UAAAA,kBAAAA,CAAAA,OAAAA,SAAAA,EAAAA,MAAAA,cAAAA,EAAAA,SAAAA,CAAAA,EAAAA,SAAAA,EAAAA,aAAAC,SAAAA,SAAAA,EAAAA,GAAA,MC3CLxB,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAAsB,aAAtBA,CAAsB,UAERA,EAAAA,EAAAA,EAAAA,WAAOA,EAAAA,IAAAA,GAGjBA,EAAAA,GAAAA,EAAAA,gBAAAA,GAA0GA,EAAAA,EAAC,kBAADA,SAAAA,GAAA,2FAA2FA,EAAAA,KAErMA,EAAAA,GAAAA,EAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASyB,EAAAA,WAAW,IAC9DzB,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,EAAAA,QAAIA,EAAAA,IAAAA,GAGdA,EAAAA,GAAAA,EAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASyB,EAAAA,eAAe,IAClEzB,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,GAAAA,aAASA,EAAAA,IAAAA,GAGnBA,EAAAA,GAAAA,GAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASyB,EAAAA,eAAe,IAClEzB,EAAAA,GAAAA,GAAAA,QAAMA,EAAAA,EAAAA,GAAAA,aAASA,EAAAA,IAAAA,KAIvBA,EAAAA,GAAAA,GAAAA,gBAAAA,UAfmBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,EAAAA,OAAAA,CAAgB,sBAAAyB,EAAAA,aAAhBzB,CAAgB,UAAAyB,EAAAA,SAeLzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,WAAAA,EAAAA,6EDyD1B0B,EAAAA,EAAAA,IAAAA,CADCC,EAAAA,GACD,8IA7BShD,GAAe,UAF3BiD,EAAAA,EAAAA,GAAe,CAACC,KAAM,YACtBD,EAAAA,EAAAA,GAAe,CAACC,KAAM,gBACK,6BAqBMjB,EAAAA,EACiCkB,EAAAA,KAtBtDnD,2NE3BP,MAAOoD,GAGXnD,YAAYoD,EAA+BC,GAAA,KAAAA,UAAAA,EACzC,MAAMC,EAAYtC,KAAKuC,UAAYvC,KAAKqC,UAAUG,cAAc,YAC1DC,EAASH,EAASI,MAKxBD,EAAOE,SAAW,QAClBF,EAAOG,IAAMH,EAAOI,QAAU,IAC9BJ,EAAOK,KAAO,SACdR,EAASS,aAAa,cAAe,QACrCT,EAASU,MAAQZ,EAEjBE,EAASW,UAAW,EACpBjD,KAAKqC,UAAUa,KAAKC,YAAYb,EACjC,CAGDc,OACE,MAAMd,EAAWtC,KAAKuC,UACtB,IAAIc,GAAa,EAEjB,IAEE,GAAIf,EAAU,CACZ,MAAMgB,EAAetD,KAAKqC,UAAUkB,cAEpCjB,EAASkB,SACTlB,EAASmB,kBAAkB,EAAGnB,EAASU,MAAMU,QAC7CL,EAAarD,KAAKqC,UAAUsB,YAAY,QAEpCL,GACFA,EAAaM,OAEhB,CAIF,CAHC,MAGD,CAED,OAAOP,CACR,CAGDQ,UACE,MAAMvB,EAAWtC,KAAKuC,UAElBD,IACFA,EAASwB,SACT9D,KAAKuC,eAAYwB,EAEpB,8BC3DG,MAAOC,GAGXhF,YAA8BiF,GAC5BjE,KAAKqC,UAAY4B,CAClB,CAQDb,KAAKhB,GACH,MAAM8B,EAAclE,KAAKmE,UAAU/B,GAC7BiB,EAAaa,EAAYd,OAG/B,OAFAc,EAAYL,UAELR,CACR,CAWDc,UAAU/B,GACR,OAAO,IAAID,GAAYC,EAAMpC,KAAKqC,UACnC,oCAhCU2B,IAAAA,GAAAA,GAGSI,GAAAA,2BAHTJ,WAAAA,GAAAA,gBADY,SCLnB,MAAOK,GAqBTrF,YAAsBsF,GAAA,KAAAA,WAAAA,EAHf,KAAAC,WAAqB,CAK3B,CAUMC,WAEHxE,KAAKsE,WAAWlB,KAAKqB,KAAKC,UAAU1E,KAAK2E,KAAM,KAAM,GACxD,oCApCQN,IAAAA,EAAAA,EAA2BO,yBAA3BP,uHAAA,qLCTT,SCOEQ,GAAU,UAYV,MAAOC,GAmBT9F,YAAsB+F,EACAC,EACAC,GAFA,KAAAF,qBAAAA,EACA,KAAAC,gBAAAA,EACA,KAAAC,SAAAA,EALf,KAAAC,SAAmB,CAOzB,CAOMC,WAEHnF,KAAKkF,QAAUlF,KAAK+E,qBAAqBG,QACzClF,KAAKoF,sBAELpF,KAAKqF,oCAAsCrF,KAAK+E,qBAAqBO,cAAcC,WAAU,KAEzFvF,KAAKkF,QAAUlF,KAAK+E,qBAAqBG,QACzClF,KAAKoF,sBAELpF,KAAKgF,gBAAgBQ,eAArB,GAEP,CAOMC,cAEHzF,KAAKqF,qCAAqCK,cAC1C1F,KAAKqF,oCAAsC,IAC9C,CAOOD,sBAEDpF,KAAKkF,QAEJlF,KAAKiF,SAASU,cAAcC,UAAUC,IAAIhB,IAI1C7E,KAAKiF,SAASU,cAAcC,UAAU9B,OAAOe,GAEpD,oCAtEQC,IAAAA,EAAAA,EAAkBF,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,yBAAlBE,mIDpBb,oCAAa,iCEECgB,GAAAA,ydCIP,MAAMC,GAAkC,sBAA6D,mBAAY,WAAW,0DAAoDC,mCAA3E,mLAA7D,8NCiBlCC,GAAsB,SA8C/BjH,YAAoBgG,EACAkB,EACAC,GAFA,KAAAnB,gBAAAA,EACA,KAAAkB,oBAAAA,EACA,KAAAC,kBAAAA,EAxBV,KAAAC,WAAkC,IAAIC,EAAAA,GAAoB,IAK1D,KAAAC,YAAoC,IAAID,EAAAA,IAAqB,GAqBnErG,KAAKoG,WAAWG,aAAahB,WAAUvC,GAAShD,KAAKwG,aAAexD,IACpEhD,KAAKsG,YAAYC,aAAahB,WAAUvC,GAAShD,KAAKyG,cAAgBzD,GACzE,CA7CiB0D,yBAEd,MAAO,cACV,CAiDYvB,WAAQ,kCAEjB,EAAKgB,kBAAkBQ,kBAAkBC,GAAuBF,YAAa,SACvE,EAAKR,oBAAoBW,YAC/B,EAAKX,oBAAoBY,gBAAgBF,GAAuBF,YAJ/C,oLAKpB,CAOMjB,cAEHzF,KAAKkG,oBAAoBa,iBAAiBH,GAAuBF,aACjE1G,KAAKmG,kBAAkBa,oBAAoBJ,GAAuBF,YACrE,CAOMO,oBAEHjH,KAAKgF,gBAAgBQ,eACxB,+JArFQS,IAAsB7F,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAA,qBAAtB6F,GAAsB3F,UAAAA,CAAAA,CAAAA,iBAAA4G,YAAAA,EAAA3G,SAAAA,CAAAA,GAAAA,GAAAkB,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,eAAAA,CAAAA,OAAAA,OAAAA,EAAAA,eAAAA,CAAAA,OAAAA,WAAAA,EAAAA,gBAAAC,SAAAA,SAAAA,EAAAA,GAAA,MCvBnCxB,EAAAA,GAAAA,EAAAA,OAAKA,EAAAA,EAAAA,EAAAA,UAAMA,EAAAA,KACXA,EAAAA,GAAAA,EAAAA,MAAAA,GACIA,EAAAA,GAAAA,EAAAA,QAAAA,EAAAA,CAA8C,aAElDA,EAAAA,YAFuBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,EAAAA,YACIA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,EAAAA,6BDenB+G,EAAAA,EAAmBrB,GAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,IAAAsB,cAAAA,EAAAC,gBAAAA,KA0CvBvF,EAAAA,EAAAA,IAAAA,EADCwF,EAAAA,GAAAA,MACD,oEAMAxF,EAAAA,EAAAA,IAAAA,EADCwF,EAAAA,GAAAA,MACD,qEA3CSrB,GAAsB,cADlCsB,EAAAA,GAAAA,GAAwBxB,KACU,6BA8CMyB,GAAAA,EACIC,GAAAA,EACFC,GAAAA,KAhD9BzB,IEjBN,MAAM0B,GAAmC,sBAA6D,mBAAY,WAAW,0DAAqDC,oCAA5E,mLAA7D,0LCiBnCC,GAAuB,SAkChC7I,YAAoBgG,EACAkB,EACAC,GAFA,KAAAnB,gBAAAA,EACA,KAAAkB,oBAAAA,EACA,KAAAC,kBAAAA,CAEnB,CA/BiBO,yBAEd,MAAO,eACV,CAmCYvB,WAAQ,kCAEjB,EAAKgB,kBAAkBQ,kBAAkBmB,GAAwBpB,YAAa,SACxE,EAAKR,oBAAoBW,YAC/B,EAAKX,oBAAoBY,gBAAgBgB,GAAwBpB,YAJhD,oLAKpB,CAOMjB,cAEHzF,KAAKkG,oBAAoBa,iBAAiBe,GAAwBpB,aAClE1G,KAAKmG,kBAAkBa,oBAAoBc,GAAwBpB,YACtE,CAKMO,oBAEHjH,KAAKgF,gBAAgBQ,eACxB,4BCvFGpF,EAAAA,GAAAA,EAAAA,YAAAA,6BAA+CA,EAAAA,EAAAA,QAAAA,EAAAA,CAAa,OAAA2H,sCDkBvDF,IAAuBzH,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAA,qBAAvByH,GAAuBvH,UAAAA,CAAAA,CAAAA,kBAAA0H,OAAAA,CAAAC,aAAAA,eAAAC,YAAAA,eAAAhB,YAAAA,EAAA3G,SAAAA,CAAAA,GAAAA,GAAAkB,MAAAA,EAAAC,KAAAA,EAAAE,SAAAA,SAAAA,EAAAA,GAAA,MEvBpCxB,EAAAA,GAAAA,EAAAA,OAAKA,EAAAA,EAAAA,EAAAA,WAAOA,EAAAA,KACZA,EAAAA,GAAAA,EAAAA,MAAAA,CAAK,SACIA,EAAAA,EAAAA,GAAuBA,EAAAA,KAC5BA,EAAAA,GAAAA,EAAAA,OAAKA,EAAAA,EAAAA,GAAyBA,EAAAA,IAAAA,UADzBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,WAAAA,EAAAA,YAAAA,IACAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,YAAAA,EAAAA,aAAAA,oBFeD+G,EAAAA,GAAmBC,cAAAA,EAAAC,gBAAAA,IAKdQ,GAAuB,cADnCN,EAAAA,GAAAA,GAAwBI,KACW,6BAkCKH,GAAAA,EACIC,GAAAA,EACFC,GAAAA,KApC9BG,2HGgBAM,GAAgB,MAazBnJ,YAAoBC,EACAmJ,EACAC,EACAC,GAHA,KAAArJ,OAAAA,EACA,KAAAmJ,QAAAA,EACA,KAAAC,kBAAAA,EACA,KAAAC,OAAAA,EAZV,KAAAC,WAA0B,IAAIlC,EAAAA,GAAY,IAE1C,KAAAlH,UAAqC,KAErC,KAAAqJ,iBAAiD,KAEjD,KAAAC,gBAA4B,EAQrC,CAOMtD,WAEHnF,KAAKyI,gBAAkBzI,KAAKf,OAAOyJ,YAEnC1I,KAAKsI,OAAOK,OAAOpD,WAAU,EAAElG,SAE3B,GAAGA,EACH,CACIW,KAAKuI,WAAWK,SAASvJ,GACzB,MAAMwJ,EAAO7I,KAAKwI,iBAAmBxI,KAAKf,OAAO6B,QAAQzB,GACzDW,KAAKb,UAAY0J,GAAM/I,OACvBE,KAAKqI,kBAAkBS,aAAaD,EAAKE,WAAa,GACzD,MAGG/I,KAAKwI,iBAAmB,KACxBxI,KAAKqI,kBAAkBS,aAAa,IAGxC9I,KAAKuI,WAAWhC,aAAahB,WAAUyD,IAEnChJ,KAAKoI,QAAQa,SAAS,CAAC,4BAA6BD,GAAM,CAACE,oBAAoB,EAAOC,YAAY,GAAlG,GAFJ,GAKP,CAOM1D,cAEN,qCA1DQ0C,IAAgB/H,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAAA,qBAAhB+H,GAAgB7H,UAAAA,CAAAA,CAAAA,wBAAAC,SAAAA,CAAAA,EAAAA,EAhBzB,CAEI,CACIE,QAASC,EAAAA,GACTC,WAAaC,GAAqD,IAAIC,EAAAA,GAAyCxB,GAAMuB,EAAME,QAAQzB,IAAKS,SACxIiB,KAAM,CAACC,EAAAA,KAEXoI,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,SACH9H,MAAAA,GAAAC,KAAAA,GAAAC,OAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,EAAAA,0BAAAA,EAAAA,cAAAA,CAAAA,EAAAA,SAAAA,EAAAA,eAAAA,CAAAA,EAAAA,QAAAA,OAAAA,EAAAA,QAAAA,WAAAA,CAAAA,EAAAA,aAAAA,CAAAA,EAAAA,2BAAAA,CAAAA,EAAAA,WAAAA,iBAAAA,UAAAA,CAAAA,EAAAA,4BAAAA,CAAAA,EAAAA,SAAAA,2BAAAA,iBAAAA,EAAAA,SAAAA,mBAAAA,CAAAA,EAAAA,2BAAAA,CAAAA,EAAAA,QAAAA,SAAAA,CAAAA,EAAAA,QAAAA,SAAAC,SAAAA,SAAAA,EAAAA,GAAA,MFlCLxB,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAAsB,SAC+EA,EAAAA,EAAAA,EAAAA,UAAMA,EAAAA,KACvGA,EAAAA,GAAAA,EAAAA,IAAAA,GAAoGA,EAAAA,EAAAA,EAAAA,aAASA,EAAAA,KAE7GA,EAAAA,GAAAA,EAAAA,YAAAA,GACIA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,YAAAA,GACJA,EAAAA,KAEAA,EAAAA,GAAAA,EAAAA,aAAAA,EAAAA,CAA2C,WAAqCA,EAAAA,EAAAA,GAAoBA,EAAAA,IAAAA,KAGxGA,EAAAA,GAAAA,GAAAA,MAAAA,GACIA,EAAAA,GAAAA,GAAAA,eAAAA,GAEAA,EAAAA,GAAAA,GAAAA,MAAAA,GACIA,EAAAA,GAAAA,GAAAA,GACJA,EAAAA,KAEAA,EAAAA,GAAAA,GAAAA,gBAAAA,IACJA,EAAAA,YAlBuCA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,aAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,WAAAA,QACAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,aAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,WAAAA,QAExBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,EAAAA,YACoBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,iBAGnBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,YAAAA,EAAAA,kBAAoEA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,WAAAA,OAO9DA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,0BAAAA,EAAAA,kHEwBT+H,IAAgB,UAF5BnG,EAAAA,EAAAA,GAAe,CAACC,KAAM,aACtBD,EAAAA,EAAAA,GAAe,CAACC,KAAM,iBACM,6BAaGjB,EAAAA,EACCwI,EAAAA,GACUC,EAAAA,EACXC,EAAAA,MAhBnBvB,oEC5BP,MAAOwB,WAA8BC,GAAAA,EAO7BC,kBAEN,MAAMC,EAAgC,CAAC,EAKvC,OAHAA,EAAO7D,GAAuBS,aAAeT,GAC7C6D,EAAOjC,GAAwBnB,aAAemB,GAEvCiC,CACV,iEAfQH,MAAqBI,GAArBJ,GAAqB,2BAArBA,GAAqBK,QAArBL,GAAqB,uCCoCrBM,GAAkB,MAY3BjL,YAAsBC,EACmCC,EACnCgL,GAFA,KAAAjL,OAAAA,EACmC,KAAAC,QAAAA,EACnC,KAAAgL,eAAAA,EAVZ,KAAA/K,UAAqC,EAY9C,CAVaC,oBAEV,MAAO,EACV,CAYSQ,aAAaC,GAEnB,MAAO,CACHkJ,UAAWlJ,EAElB,CAESE,YAENC,KAAKb,UAAYc,EAAAA,EAAAA,6BACpB,CAESC,gBAENF,KAAKb,UAAYc,EAAAA,EAAAA,wBACpB,CAESE,gBAENH,KAAKb,UAAYc,EAAAA,EAAAA,wBACpB,CAESkK,YAAYtK,GAElBG,KAAKb,UAAYU,GAAUkJ,WAAa/I,KAAKZ,cAC7CY,KAAKkK,eAAeE,UAAUvK,GAAUC,OAC3C,qCA/CQmK,IAAkB7J,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAaPiK,GAAAA,IAAyBjK,EAAAA,EAAAA,GAAAA,GAAA,qBAbpC6J,GAAkB3J,UAAAA,CAAAA,CAAAA,0BAAAC,SAAAA,CAAAA,EAAAA,EAtB3B,CACIC,EAAAA,EAEA,CACIC,QAAS6J,GAAAA,GACT3J,WAAaC,GAAqD,IAAIC,EAAAA,GAAyCxB,GAAMuB,EAAME,QAAQzB,IAAK0J,YACxIhI,KAAM,CAACC,EAAAA,KAEXuJ,EAAAA,EAAAA,IAAuCZ,KACvCa,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MAEA,CACIjK,QAASa,EAAAA,EACTC,SAAUoJ,GAAAA,MAEjBlJ,MAAAA,GAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,OAAAA,SAAAA,SAAAA,GAAAA,EAAAA,MAAAA,cAAAA,4BAAAA,CAAAA,YAAAA,8BAAAA,EAAAA,QAAAA,sBAAAA,UAAAA,kBAAAA,CAAAA,OAAAA,SAAAA,EAAAA,MAAAA,cAAAA,EAAAA,SAAAA,CAAAA,EAAAA,SAAAA,EAAAA,aAAAC,SAAAA,SAAAA,EAAAA,GAAA,MC1CLxB,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAAsB,aAAtBA,CAAsB,UAERA,EAAAA,EAAAA,EAAAA,WAAOA,EAAAA,IAAAA,GAGjBA,EAAAA,GAAAA,EAAAA,gBAAAA,GAA6GA,EAAAA,EAAC,kBAADA,SAAAA,GAAA,OAAkByB,EAAAA,YAAAA,EAAmB,IAAsBzB,EAAAA,KAExKA,EAAAA,GAAAA,EAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASyB,EAAAA,WAAW,IAC9DzB,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,EAAAA,QAAIA,EAAAA,IAAAA,GAGdA,EAAAA,GAAAA,EAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASyB,EAAAA,eAAe,IAClEzB,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,GAAAA,aAASA,EAAAA,IAAAA,GAGnBA,EAAAA,GAAAA,GAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASyB,EAAAA,eAAe,IAClEzB,EAAAA,GAAAA,GAAAA,QAAMA,EAAAA,EAAAA,GAAAA,aAASA,EAAAA,IAAAA,KAIvBA,EAAAA,GAAAA,GAAAA,mBAAAA,UAfmBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,EAAAA,OAAAA,CAAgB,sBAAAyB,EAAAA,aAAhBzB,CAAgB,UAAAyB,EAAAA,SAeFzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,WAAAA,EAAAA,8EDgD7B0B,EAAAA,EAAAA,IAAAA,CADCC,EAAAA,GACD,8IArBSkI,IAAkB,UAF9BjI,EAAAA,EAAAA,GAAe,CAACC,KAAM,eACtBD,EAAAA,EAAAA,GAAe,CAACC,KAAM,mBACQ,6BAYGjB,EAAAA,EACoCkB,EAAAA,EAC5B0I,GAAAA,KAd7BX,IE3CN,MAAMY,GACb,CACI9L,EACAkL,GACA9B,oCCmCS2C,GAAsB,0CAAtBA,GAAsB,qBAAtBA,8BALT,EACIC,EAAAA,GAAAA,GAA8B,kCACjCC,QAAAA,CAlBGC,EAAAA,EACA9D,EAAAA,EACA+D,EAAAA,GACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,GAAAA,GACAtF,GACA4B,MAYKiD,IAAsB,UADlCU,EAAAA,EAAAA,GAAaX,KACDC,yPCnCP,MAAOW,EAGTzM,YAAkD0M,GAAA,KAAAA,QAAAA,CAEjD,CAOYC,SAASC,GAAyB,kCAE3C,GAES,oBAFFA,EAAOpM,QAqBN,OAAO,KAjBP,IAMI,OAJA,EAAKkM,SAASG,MAAM,6DAA8D,CAACpM,KAAMmM,EAAOnM,KAAMD,QAASoM,EAAOpM,gBAEtF,SAAO,KAAoCoM,EAAOnM,YAOrF,CAHD,MAAMqM,GAEF,EAAKJ,SAASG,MAAM,uEAAyEC,EAAG,CAACrM,KAAMmM,EAAOnM,KAAMD,QAASoM,EAAOpM,SACvI,CAUT,OAAO,IA3BoC,kLA4B9C,4JAxCQiM,GAA8BrL,EAAAA,GAGnB2L,EAAAA,GAAM,yBAHjBN,EAA8BzB,QAA9ByB,EAA8B,OCArC,MAAOO,EAGThN,YAAkD0M,GAAA,KAAAA,QAAAA,CAEjD,CAOYC,SAASC,GAAyB,kCAE3C,IAII,OAFA,EAAKF,SAASG,MAAM,2EAA4E,CAACI,WAAYL,EAAOpM,UAI3G,oBAFFoM,EAAOpM,cAGO,gCAEN,IAMlB,CAHD,MAAMsM,GAEF,EAAKJ,SAASG,MAAM,2EAA6EC,EAAG,CAACG,WAAYL,EAAOpM,SAC3H,CAED,OAAO,IAnBoC,kLAoB9C,mCAhCQwM,GAA8B5L,EAAAA,GAGnB2L,EAAAA,GAAM,yBAHjBC,EAA8BhC,QAA9BgC,EAA8B,OCEpC,MAAME,EACb,CACIzL,QAAS0L,EAAAA,GACT5K,SAAUkK,EACVW,OAAO,GAMEC,EACb,CACI5L,QAAS6L,EAAAA,GACT/K,SAAUyK,EACVI,OAAO,GChBL,SAAUG,IAEZ,MAAO,CACHL,EAEP,CAKK,SAAUhL,IAEZ,MAAO,CACHgL,EACAG,GACAG,EAAAA,EAAAA,GAA2B,mBAElC,mBCzBD,IAAIC,EAAM,CACT,mBAAoB,CACnB,MACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIlB,EAAI,IAAImB,MAAM,uBAAyBN,EAAM,KAEjD,MADAb,EAAEoB,KAAO,mBACHpB,CAAC,IAIT,IAAIqB,EAAMV,EAAIE,GAAMtN,EAAK8N,EAAI,GAC7B,OAAOP,EAAoBd,EAAEqB,EAAI,IAAIH,MAAK,IAClCJ,EAAoBvN,IAE7B,CACAqN,EAAoBU,KAAO,IAAOC,OAAOD,KAAKX,GAC9CC,EAAoBrN,GAAK,MACzBiO,EAAOC,QAAUb","sources":["webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/layout/layout.component.html","webpack://ng-universal-demo/../../../../src/cdk/clipboard/pending-copy.ts","webpack://ng-universal-demo/../../../../src/cdk/clipboard/clipboard.ts","webpack://ng-universal-demo/../../../../material/src/directives/debugDataCopyClick/debugDataCopyClick.directive.ts","webpack://ng-universal-demo/../node_modules/@anglr/common/src/modules/debugData/components/debugData/debugData.component.html","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticInput/staticInput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.metadata.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/components/staticOutput/staticOutput.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/misc/services/complexStaticRegister/complexStaticRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsComplex/relationsComplex.module.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {LAYOUT_HISTORY_MANAGER, provideLayoutEditor} from '@anglr/dynamic/layout-editor';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {provideCssLayoutEditor} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutEditor} from '@anglr/dynamic/handlebars-components';\nimport {provideFormLayoutEditor} from '@anglr/dynamic/form';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoLayoutPackageManager} from '../../../services/demoLayoutPackageManager/demoLayoutPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutEditor(),\n        provideFormLayoutEditor(),\n        provideCssLayoutEditor(),\n        provideTinyMceLayoutEditor(),\n        provideHandlebarsLayoutEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoLayoutPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n                @Inject(LAYOUT_HISTORY_MANAGER) protected history: MetadataHistoryManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: LayoutComponentMetadata): LayoutRelationsMetadata\n    {\n        return {\n            layout: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexLayout;\n    }\n\n    protected _loadRestDemo(): void\n    {\n        this._metadata = DemoData.complexDemoRestLayout;\n    }\n\n    protected _loadFullDemo(): void\n    {\n        this._metadata = DemoData.complexDemoFullLayout;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsComplex/layout\" (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\" [history]=\"history\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadRestDemo()\">\r\n        <span>demo rest</span>\r\n    </button>\r\n\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadFullDemo()\">\r\n        <span>demo full</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nexport class PendingCopy {\n  private _textarea: HTMLTextAreaElement | undefined;\n\n  constructor(text: string, private readonly _document: Document) {\n    const textarea = (this._textarea = this._document.createElement('textarea'));\n    const styles = textarea.style;\n\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    this._document.body.appendChild(textarea);\n  }\n\n  /** Finishes copying the text. */\n  copy(): boolean {\n    const textarea = this._textarea;\n    let successful = false;\n\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement as HTMLOrSVGElement | null;\n\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n\n    return successful;\n  }\n\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {PendingCopy} from './pending-copy';\n\n/**\n * A service for copying text to the clipboard.\n */\n@Injectable({providedIn: 'root'})\nexport class Clipboard {\n  private readonly _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text: string): boolean {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n\n    return successful;\n  }\n\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text: string): PendingCopy {\n    return new PendingCopy(text, this._document);\n  }\n}\n","import {Directive, HostBinding, HostListener, Input} from '@angular/core';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\n/**\n * Directive that allows to copy data to clipboard on click on debug-data\n */\n@Directive(\n{\n    selector: 'debug-data[copyClick]'\n})\nexport class DebugDataCopyClickDirective\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data to be copied as serialized json\n     */\n    @Input('copyClick')\n    public data: any;\n\n    //######################### public properties - host #########################\n\n    /**\n     * Adds css class clickable to this element\n     * \n     * @internal\n     */\n    @HostBinding('class.clickable')\n    public clickable: boolean = true;\n\n    //######################### constructor #########################\n    constructor(protected _clipboard: Clipboard)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Copies data to clipboard on click\n     * \n     * @internal\n     */\n    @HostListener('click')\n    public copyData(): void\n    {\n        this._clipboard.copy(JSON.stringify(this.data, null, 4));\n    }\n}",null,"import {Component, ChangeDetectionStrategy, OnDestroy, OnInit, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DebugDataEnabledService} from '../../services/debugDataEnabled/debugDataEnabled.service';\n\n/**\n * Name of css class for enabled debug data\n */\nconst ENABLED = 'enabled';\n\n/**\n * Component used for displaying debug data\n */\n@Component(\n{\n    selector: 'debug-data',\n    templateUrl: 'debugData.component.html',\n    styleUrls: ['debugData.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DebugDataComponent implements OnDestroy, OnInit\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscription for changes of debug data enabled\n     */\n    protected _debugDataEnabledChangeSubscription: Subscription;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is debug data enabled\n     *\n     * @internal\n     */\n    public enabled: boolean = false;\n\n    //######################### constructor #########################\n    constructor(protected _debugDataEnabledSvc: DebugDataEnabledService,\n                protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.enabled = this._debugDataEnabledSvc.enabled;\n        this._setEnabledCssClass();\n\n        this._debugDataEnabledChangeSubscription = this._debugDataEnabledSvc.enabledChange.subscribe(() =>\n        {\n            this.enabled = this._debugDataEnabledSvc.enabled;\n            this._setEnabledCssClass();\n\n            this._changeDetector.detectChanges();\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._debugDataEnabledChangeSubscription?.unsubscribe();\n        this._debugDataEnabledChangeSubscription = null;\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Sets enabled css class according enabled state\n     */\n    private _setEnabledCssClass(): void\n    {\n        if(this.enabled)\n        {\n            this._element.nativeElement.classList.add(ENABLED);\n        }\n        else\n        {\n            this._element.nativeElement.classList.remove(ENABLED);\n        }\n    }\n}","<ng-template [ngIf]=\"enabled\">\r\n    <ng-content></ng-content>\r\n</ng-template>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static input relations metadata loader\n */\nexport const StaticInputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticInput.relationsMetadata')).StaticInputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {DynamicOutput, RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticInputRelationsMetadataLoader} from './staticInput.metadata';\n\n/**\n * Static input component\n */\n@Component(\n{\n    selector: 'static-input',\n    templateUrl: 'staticInput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticInputRelationsMetadataLoader)\nexport class StaticInputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-input';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Defines form control for string value\n     */\n    protected stringForm: FormControl<string> = new FormControl<string>('');\n\n    /**\n     * Defines form control for boolean value\n     */\n    protected booleanForm: FormControl<boolean> = new FormControl<boolean>(false);\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * String output\n     */\n    @DynamicOutput()\n    public stringOutput: string;\n\n    /**\n     * Boolean output\n     */\n    @DynamicOutput()\n    public booleanOutput: boolean;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n        this.stringForm.valueChanges.subscribe(value => this.stringOutput = value);\n        this.booleanForm.valueChanges.subscribe(value => this.booleanOutput = value);\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticInputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticInputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticInputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div>INPUT:</div>\n<div class=\"flex-column\">\n    <input type=\"text\" [formControl]=\"stringForm\">\n    <input type=\"checkbox\" [formControl]=\"booleanForm\">\n</div>","import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Static output relations metadata loader\n */\nexport const StaticOutputRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/staticOutput.relationsMetadata')).StaticOutputRelationsEditorMetadata();\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, OnInit, OnDestroy} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RelationsComponent, RelationsComponentManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {StaticOutputRelationsMetadataLoader} from './staticOutput.metadata';\n\n/**\n * Static output component\n */\n@Component(\n{\n    selector: 'static-output',\n    templateUrl: 'staticOutput.component.html',\n    // styleUrls: ['relationsSampleClick.component.scss'],\n    standalone: true,\n    imports:\n    [\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@RelationsEditorMetadata(StaticOutputRelationsMetadataLoader)\nexport class StaticOutputSAComponent implements RelationsComponent, OnInit, OnDestroy\n{\n    //######################### public static properties #########################\n\n    /**\n     * Gets relations id\n     */\n    public static get relationsId(): string\n    {\n        return 'static-output';\n    }\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public relationsOptions: any;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Boolean input\n     */\n    @Input()\n    public booleanInput: boolean;\n\n    /**\n     * String input\n     */\n    @Input()\n    public stringInput: string;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef,\n                private _relationsProcessor: RelationsProcessor,\n                private _componentManager: RelationsComponentManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._componentManager.registerComponent(StaticOutputSAComponent.relationsId, this);\n        await this._relationsProcessor.initialized;\n        this._relationsProcessor.updateRelations(StaticOutputSAComponent.relationsId);\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._relationsProcessor.destroyComponent(StaticOutputSAComponent.relationsId);\n        this._componentManager.unregisterComponent(StaticOutputSAComponent.relationsId);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/layout', _available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsComplex/relations', _available.value]\">relations</a>\r\n\r\n    <ng-select [formControl]=\"_available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n\r\n    <debug-data [copyClick]=\"selectedMetadata\"><div class=\"margin-horizontal-small\">{{_available.value}}</div></debug-data>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <static-input class=\"margin-right-extra-small\"></static-input>\r\n\r\n    <div class=\"flex-1 overflow-vertical-scroll thin-scrollbar\" style=\"border: 1px dotted #666;\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n\r\n    <static-output style=\"width: 200px;\"></static-output>\r\n</div>","<div>OUTPUT:</div>\n<div>\n    <div>string: {{stringInput}}</div>\n    <div>boolean: {{booleanInput}}</div>\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy, FactoryProvider} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata, LAYOUT_METADATA_STORAGE} from '@anglr/dynamic/layout';\nimport {provideLayoutRelations} from '@anglr/dynamic/layout-relations';\nimport {RelationsManager} from '@anglr/dynamic/relations';\nimport {provideCssLayoutRelations} from '@anglr/dynamic/css-components';\nimport {provideTinyMceLayoutRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelations} from '@anglr/dynamic/handlebars-components';\nimport {MetadataStorage} from '@anglr/dynamic';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: LAYOUT_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<LayoutComponentMetadata>(id => store.getData(id)?.layout),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelations(),\n        provideCssLayoutRelations(),\n        provideTinyMceLayoutRelations(),\n        provideHandlebarsLayoutRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected selectedMetadata: LayoutRelationsMetadata|null = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _router: Router,\n                private _relationsManager: RelationsManager,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                const meta = this.selectedMetadata = this._store.getData(id);\n                this._metadata = meta?.layout;\n                this._relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this.selectedMetadata = null;\n                this._relationsManager.setRelations([]);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/relationsComplex/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {StaticInputSAComponent} from '../../components/staticInput/staticInput.component';\nimport {StaticOutputSAComponent} from '../../components/staticOutput/staticOutput.component';\n\n/**\n * Static components register for relations complex sample\n */\n@Injectable()\nexport class ComplexStaticRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[StaticInputSAComponent.relationsId] = StaticInputSAComponent;\n        result[StaticOutputSAComponent.relationsId] = StaticOutputSAComponent;\n\n        return result;\n    }\n}","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata, RELATIONS_HISTORY_MANAGER} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager, provideLayoutRelationsEditorWithStatic} from '@anglr/dynamic/layout-relations';\nimport {provideTinyMceLayoutRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsLayoutRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {provideCssLayoutRelationsEditor} from '@anglr/dynamic/css-components';\nimport {EditorHotkeys, MetadataHistoryManager, MetadataStorage, PackageManager} from '@anglr/dynamic';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {ComplexStaticRegister} from '../misc';\nimport {DemoRelationsPackageManager} from '../../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<LayoutRelationsMetadata>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)?.relations),\n            deps: [StoreDataService]\n        },\n        provideLayoutRelationsEditorWithStatic(ComplexStaticRegister),\n        provideHandlebarsLayoutRelationsEditor(),\n        provideTinyMceLayoutRelationsEditor(),\n        provideCssLayoutRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService<LayoutRelationsMetadata>,\n                @Inject(RELATIONS_HISTORY_MANAGER) protected history: MetadataHistoryManager,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): LayoutRelationsMetadata\n    {\n        return {\n            relations: metadata\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoRelationsComplexRelations;\n    }\n\n    protected _loadRestDemo(): void\n    {\n        this._metadata = DemoData.complexDemoRestRelations;\n    }\n\n    protected _loadFullDemo(): void\n    {\n        this._metadata = DemoData.complexDemoFullRelations;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsComplex/relations\" (metadataChange)=\"setMetadata($event)\" [history]=\"history\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadRestDemo()\">\n        <span>demo rest</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadFullDemo()\">\n        <span>demo full</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    LayoutComponent,\n    RelationsComponent,\n    PreviewComponent,\n];","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DebugDataCopyClickModule} from '@anglr/common/material';\nimport {NgSelectModule} from '@anglr/select';\nimport {GoBackModule} from '@anglr/common';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\n\nimport {components} from './relationsComplex.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {StaticInputSAComponent, StaticOutputSAComponent} from './misc';\n\n/**\n * Module for relations complex sample with editor, static components and layout components samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackModule,\n        DynamicLayoutRelationsEditorModule,\n        DebugDataCopyClickModule,\n        LoadSaveNewSAComponent,\n        StaticInputSAComponent,\n        StaticOutputSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_COMPLEX_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsComplexModule\n{\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`@anglr/dynamic/form/dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('@anglr/dynamic/form/types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleTypesProvider} from '../services';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for css dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER} from './providers';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}","var map = {\n\t\"./formGroup/type\": [\n\t\t70613,\n\t\t613\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;"],"names":["LayoutComponent","constructor","_store","history","_metadata","emptyMetadata","id","generateId","displayName","package","name","options","children","_getMetadata","metadata","layout","_loadDemo","this","DemoData","_loadRestDemo","_loadFullDemo","i0","LAYOUT_HISTORY_MANAGER","selectors","features","EditorHotkeys","provide","LAYOUT_METADATA_STORAGE","useFactory","store","MetadataStorage","getData","deps","StoreDataService","provideLayoutEditor","provideFormLayoutEditor","provideCssLayoutEditor","provideTinyMceLayoutEditor","provideHandlebarsLayoutEditor","PackageManager","useClass","DemoLayoutPackageManager","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","MetadataHistoryManager","PendingCopy","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","DOCUMENT","DebugDataCopyClickDirective","_clipboard","clickable","copyData","JSON","stringify","data","i1","ENABLED","DebugDataComponent","_debugDataEnabledSvc","_changeDetector","_element","enabled","ngOnInit","_setEnabledCssClass","_debugDataEnabledChangeSubscription","enabledChange","subscribe","detectChanges","ngOnDestroy","unsubscribe","nativeElement","classList","add","i2","StaticInputRelationsMetadataLoader","StaticInputRelationsEditorMetadata","StaticInputSAComponent","_relationsProcessor","_componentManager","stringForm","FormControl","booleanForm","valueChanges","stringOutput","booleanOutput","relationsId","registerComponent","StaticInputSAComponent_1","initialized","updateRelations","destroyComponent","unregisterComponent","invalidateVisuals","standalone","ReactiveFormsModule","encapsulation","changeDetection","DynamicOutput","RelationsEditorMetadata","ChangeDetectorRef","RelationsProcessor","RelationsComponentManager","StaticOutputRelationsMetadataLoader","StaticOutputRelationsEditorMetadata","StaticOutputSAComponent","StaticOutputSAComponent_1","val_r1","inputs","booleanInput","stringInput","PreviewComponent","_router","_relationsManager","_route","_available","selectedMetadata","_availableNames","getStored","params","setValue","meta","setRelations","relations","val","navigate","skipLocationChange","replaceUrl","provideLayoutRelations","provideCssLayoutRelations","provideTinyMceLayoutRelations","provideHandlebarsLayoutRelations","Router","RelationsManager","ActivatedRoute","ComplexStaticRegister","Register","getDefinedTypes","result","t","factory","RelationsComponent","_layoutManager","setMetadata","setLayout","RELATIONS_HISTORY_MANAGER","RELATIONS_METADATA_STORAGE","provideLayoutRelationsEditorWithStatic","provideHandlebarsLayoutRelationsEditor","provideTinyMceLayoutRelationsEditor","provideCssLayoutRelationsEditor","DemoRelationsPackageManager","LayoutManager","components","RelationsComplexModule","createStoreDataServiceFactory","imports","CommonModule","RouterModule","NgSelectModule","GoBackModule","DynamicLayoutRelationsEditorModule","DebugDataCopyClickModule","LoadSaveNewSAComponent","ModuleRoutes","FormDynamicModuleItemsProvider","_logger","tryToGet","source","debug","e","LOGGER","FormDynamicModuleTypesProvider","moduleName","FORM_COMPONENTS_PROVIDER","LAYOUT_COMPONENTS_MODULE_PROVIDERS","multi","FORM_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","provideFormLayout","provideStaticPackageSource","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}