{"version":3,"file":"7069.chunk.51539767fe10d2e614c1.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/misc/factories.ts","webpack://ng-universal-demo/./app/pages/+layout/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+layout/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+layout/layout.routes.ts","webpack://ng-universal-demo/./app/pages/+layout/layout.module.ts","webpack://ng-universal-demo/./app/services/storeData/storeData.service.ts","webpack://ng-universal-demo/../layout/src/directives/layoutComponentRenderer/layoutComponentRenderer.types.ts","webpack://ng-universal-demo/../layout/src/directives/layoutComponentRenderer/layoutComponentRenderer.options.ts","webpack://ng-universal-demo/../layout/src/components/notFoundLayoutType/notFoundLayoutType.component.ts","webpack://ng-universal-demo/../layout/src/components/notFoundLayoutType/notFoundLayoutType.component.html","webpack://ng-universal-demo/../layout/src/directives/layoutComponentRenderer/layoutComponentRenderer.directive.ts","webpack://ng-universal-demo/../layout/src/misc/tokens.ts","webpack://ng-universal-demo/../src/services/materialComponentsDynamicModuleItemsProvider/materialComponentsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/misc/extractors/extensionsExports.extractor.ts","webpack://ng-universal-demo/../layout/src/misc/providers.ts","webpack://ng-universal-demo/../layout/src/misc/utils.ts","webpack://ng-universal-demo/../layout/src/modules/dynamicLayout.module.ts","webpack://ng-universal-demo/../src/misc/extractors/defaultExport.extractor.ts","webpack://ng-universal-demo/../src/misc/utils.ts","webpack://ng-universal-demo/../src/services/basicComponentsDynamicModuleItemsProvider/basicComponentsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/services/dynamicItemLoader/dynamicItemLoader.service.ts","webpack://ng-universal-demo/../src/services/dynamicModuleDataExtractor/dynamicModuleDataExtractor.service.ts","webpack://ng-universal-demo/../material-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../src/utils/async.ts"],"sourcesContent":["var map = {\n\t\"./button/type\": [\n\t\t66249,\n\t\t634,\n\t\t6249\n\t],\n\t\"./gridPanel/type\": [\n\t\t49,\n\t\t49\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t9918,\n\t\t9918\n\t],\n\t\"./ifBlock/type\": [\n\t\t29781,\n\t\t634,\n\t\t9781\n\t],\n\t\"./negation/type\": [\n\t\t3214,\n\t\t3214\n\t],\n\t\"./sampleChange/type\": [\n\t\t89354,\n\t\t9354\n\t],\n\t\"./sampleSource/type\": [\n\t\t51133,\n\t\t1133\n\t],\n\t\"./stackPanel/type\": [\n\t\t14433,\n\t\t4433\n\t],\n\t\"./textBlock/type\": [\n\t\t2252,\n\t\t2252\n\t],\n\t\"./toggleButton/type\": [\n\t\t48928,\n\t\t634,\n\t\t8928\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 84635;\nmodule.exports = webpackAsyncContext;","import {FactoryProvider} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\n\nimport {StoreDataService} from '../services/storeData';\n\n/**\n * Creates factory provider for store data service\n * @param storeName - Name of storage that should be used\n */\nexport function createStoreDataServiceFactory(storeName: string): FactoryProvider\n{\n    return {\n        provide: StoreDataService,\n        useFactory: (storage: PermanentStorage) => new StoreDataService(storage, storeName),\n        deps: [PERMANENT_STORAGE]\n    };\n}","<div>\r\n    <ng-select [formControl]=\"_available\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <div class=\"flex-1 overflow-vertical-scroll\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\n\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService,\n                private _router: Router,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                this._metadata = this._store.getData(id);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/layout/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {PreviewComponent} from './preview/preview.component';\n\nexport const components =\n[\n    PreviewComponent,\n];","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {DynamicLayoutModule, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\n\nimport {components} from './layout.routes';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for layout preview samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        NgSelectModule,\n        LayoutComponentRendererSADirective,\n        DynamicLayoutModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class LayoutModule\n{\n}","import {PermanentStorage} from '@anglr/common';\nimport {Dictionary} from '@jscrpt/common';\n\n/**\n * Service used for obtaining and storing data\n */\nexport class StoreDataService<TData = any>\n{\n    //######################### constructor #########################\n    constructor(private _storage: PermanentStorage,\n                private _storeKey: string,)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Stores data into store\n     * @param name - Name of stored data\n     * @param data - Data to be stored\n     */\n    public setData(name: string, data: TData): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        store[name] = data;\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data\n     * @param name - Name of data to be retrieved\n     */\n    public getData(name: string): TData|null\n    {\n        return (this._storage.get(this._storeKey)?.[name]) ?? null;\n    }\n\n    /**\n     * Removes data from store\n     * @param name - Name of data to be removed\n     */\n    public removeData(name: string): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        delete store[name];\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data names\n     */\n    public getStored(): string[]\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        return Object.keys(store);\n    }\n}","/**\n * Defines behavior what should happen if rendered layout component type was not found\n */\nexport enum MissingTypeBehavior\n{\n    /**\n     * Shows special not found component as *placeholder*\n     */\n    ShowNotFound,\n\n    /**\n     * Ignores missing component, silently continues\n     */\n    Ignore,\n\n    /**\n     * Throws javascript error with missing component error\n     */\n    ThrowError\n}","import {isPresent} from '@jscrpt/common';\n\nimport {MissingTypeBehavior} from './layoutComponentRenderer.types';\n\n/**\n * Options for LayoutComponentRendererDirective\n */\nexport class LayoutComponentRendererDirectiveOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * Describes what should happen if layout component type described in metadata was not found\n     */\n    public missingTypeBehavior: MissingTypeBehavior = MissingTypeBehavior.ShowNotFound;\n\n    //######################### constructor #########################\n    constructor(missingTypeBehavior?: MissingTypeBehavior)\n    {\n        if(isPresent(missingTypeBehavior))\n        {\n            this.missingTypeBehavior = missingTypeBehavior;\n        } \n    }\n}","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\n/**\n * Component used for displaying not found layout type placeholder\n */\n@Component(\n{\n    selector: 'not-found-layout-type',\n    templateUrl: 'notFoundLayoutType.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotFoundLayoutTypeSAComponent \n{\n}","<div>\n    <span class=\"fas fa-minus-circle\"></span>\n    <span>NOT FOUND</span>\n    <span class=\"fas fa-minus-circle\"></span>\n</div>","import {ComponentRef, Directive, EventEmitter, Inject, Injector, Input, OnChanges, OnDestroy, Optional, Output, SimpleChanges, SkipSelf, ValueProvider, ViewContainerRef} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {addSimpleChange, DynamicItemExtensionType, DynamicItemLoader} from '@anglr/dynamic';\nimport {nameof, resolvePromiseOr} from '@jscrpt/common';\n\nimport {LayoutComponentRendererDirectiveOptions} from './layoutComponentRenderer.options';\nimport {MissingTypeBehavior} from './layoutComponentRenderer.types';\nimport {NotFoundLayoutTypeSAComponent} from '../../components';\nimport {LayoutComponent, LayoutComponentMetadata, LayoutComponentTransform} from '../../interfaces';\nimport {LAYOUT_COMPONENTS_LOADER, LAYOUT_COMPONENT_CHILD_EXTENSIONS, LAYOUT_COMPONENT_TRANSFORM} from '../../misc/tokens';\nimport {LayoutComponentDef} from '../../misc/types';\n\n/**\n * Renders layout component from metadata\n */\n@Directive(\n{\n    selector: '[layoutComponentRenderer]',\n    exportAs: 'layoutComponentRenderer',\n    providers: \n    [\n        <ValueProvider>\n        {\n            provide: LAYOUT_COMPONENT_CHILD_EXTENSIONS,\n            useValue: null,\n        }\n    ],\n    standalone: true\n})\nexport class LayoutComponentRendererSADirective<TComponent extends LayoutComponent<TComponentOptions> = any, TComponentOptions = any> implements OnChanges, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Created component reference\n     */\n    protected _componentRef: ComponentRef<TComponent>|null = null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Type that should be dynamically created into current container\n     */\n    @Input('layoutComponentRenderer')\n    public componentMetadata: LayoutComponentMetadata<TComponentOptions>|undefined|null = null;\n\n    /**\n     * Custom injector used as parent for layout components tree\n     */\n    @Input('layoutComponentRendererInjector')\n    public customInjector: Injector|undefined|null;\n\n    /**\n     * Disables component metadata transformer\n     */\n    @Input('layoutComponentRendererDisableTransformer')\n    public disableTransformer: boolean = false;\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when rendered component changes\n     */\n    @Output('layoutComponentRendererComponentChange')\n    public componentChange: EventEmitter<ComponentRef<TComponent>|null> = new EventEmitter<ComponentRef<TComponent>|null>();\n\n    //######################### protected properties #########################\n\n    /**\n     * Instance of dynamically created component\n     */\n    protected get component(): TComponent|null\n    {\n        if(!this._componentRef)\n        {\n            return null;\n        }\n\n        return this._componentRef.instance;\n    }\n\n    //######################### public properties #########################\n\n    /**\n     * Gets component ref of created component or null\n     */\n    public get componentRef(): ComponentRef<TComponent>|null\n    {\n        return this._componentRef;\n    }\n\n    //######################### constructor #########################\n    constructor(protected _viewContainerRef: ViewContainerRef,\n                @Inject(LAYOUT_COMPONENTS_LOADER) protected _loader: DynamicItemLoader<LayoutComponentDef>,\n                @Inject(LAYOUT_COMPONENT_CHILD_EXTENSIONS) @Optional() @SkipSelf() protected _childExtensions?: DynamicItemExtensionType[]|null,\n                @Optional() protected _options?: LayoutComponentRendererDirectiveOptions,\n                @Inject(LAYOUT_COMPONENT_TRANSFORM) @Optional() protected _metadataTransformer?: LayoutComponentTransform,\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n        if(!this._options || !(this._options instanceof LayoutComponentRendererDirectiveOptions))\n        {\n            this._options = new LayoutComponentRendererDirectiveOptions();\n        }\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n\n    /**\n     * Called when input value changes\n     */\n    public async ngOnChanges(changes: SimpleChanges): Promise<void>\n    {\n        this._logger?.debug('LayoutComponentRendererSADirective: rendering component {@id}', {id: this.componentMetadata?.id});\n\n        this.ngOnDestroy();\n        this._viewContainerRef.clear();\n\n        // component metadata is present\n        if(nameof<LayoutComponentRendererSADirective<TComponent, TComponentOptions>>('componentMetadata') in changes && this.componentMetadata)\n        {\n            const injector = this.customInjector ?? this._viewContainerRef.injector;\n            let componentMetadata = this.componentMetadata;\n\n            if(this._metadataTransformer && !this.disableTransformer)\n            {\n                componentMetadata = this._metadataTransformer(this.componentMetadata, injector);\n            }\n            \n            const layoutComponentType = await this._loader.loadItem(componentMetadata);\n\n            if(!layoutComponentType)\n            {\n                this._logger?.warn('LayoutComponentRendererSADirective: Unable to find layout component type {@type}', {name: componentMetadata.name, package: componentMetadata.package});\n\n                switch(this._options?.missingTypeBehavior)\n                {\n                    default:\n                    //case MissingTypeBehavior.ShowNotFound:\n                    {\n                        this._viewContainerRef.createComponent(NotFoundLayoutTypeSAComponent);\n\n                        break;\n                    }\n                    case MissingTypeBehavior.Ignore:\n                    {\n                        //do nothing\n\n                        break;\n                    }\n                    case MissingTypeBehavior.ThrowError:\n                    {\n                        throw new Error(`LayoutComponentRendererSADirective: Unable to find layout component type Name: ${componentMetadata.name} Package: ${componentMetadata.package}`);\n                    }\n                }\n\n                return;\n            }\n\n            const usedInjector = Injector.create(\n            {\n                parent: injector,\n                providers:\n                [\n                    <ValueProvider>\n                    {\n                        provide: LAYOUT_COMPONENT_CHILD_EXTENSIONS,\n                        useValue: layoutComponentType.childExtensions,\n                    }\n                ]\n            });\n\n            this._componentRef = this._viewContainerRef.createComponent(layoutComponentType.data,\n                                                                        {\n                                                                            injector: usedInjector,\n                                                                        }) as ComponentRef<TComponent>;\n\n            this._logger?.debug('LayoutComponentRendererSADirective: component rendered {@id}', {id: componentMetadata?.id});\n            const component = this.component;\n\n            if(component)\n            {\n                //registers extensions and child extensions\n                component.registerExtensions(\n                [\n                    ...this._childExtensions?.map(itm => new itm(componentMetadata)) ?? [],\n                    ...layoutComponentType?.extensions?.map(itm => new itm(componentMetadata)) ?? [],\n                ]);\n\n                const changes: SimpleChanges = {};\n                addSimpleChange<LayoutComponent>(changes, 'options', componentMetadata.options, component.options, true);\n\n                this._logger?.debug('LayoutComponentRendererSADirective: setting options for component {@id}', {id: componentMetadata?.id});\n                component.options = componentMetadata.options;\n                \n                this._logger?.debug('LayoutComponentRendererSADirective: setting changes for component {@id}', {id: componentMetadata?.id});\n                await resolvePromiseOr(component.ngOnChanges?.(changes));\n\n                this._logger?.debug('LayoutComponentRendererSADirective: initializing component {@id}', {id: componentMetadata?.id});\n                await resolvePromiseOr(component.ngOnInit?.());\n\n                this._logger?.debug('LayoutComponentRendererSADirective: invalidating component visuals {@id}', {id: componentMetadata?.id});\n                component.invalidateVisuals();\n                this._componentRef?.changeDetectorRef.markForCheck();\n\n                this.componentChange.next(this._componentRef);\n            }\n        }\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._componentRef)\n        {\n            this._logger?.debug('LayoutComponentRendererSADirective: destroying component {@id}', {id: this.componentMetadata?.id, designer: this.disableTransformer});\n    \n            this._componentRef?.destroy();\n            this._componentRef = null;\n            this.componentChange.next(null);\n        }\n    }\n}","import {InjectionToken} from '@angular/core';\nimport {DynamicItemExtensionType, DynamicItemLoader, DynamicModuleDataExtractor, DynamicModuleProvider} from '@anglr/dynamic';\n\nimport {LayoutComponentTransform} from '../interfaces';\nimport {LayoutComponentDef} from './types';\n\n/**\n * Injection token for layout component metadata transformation function\n */\nexport const LAYOUT_COMPONENT_TRANSFORM: InjectionToken<LayoutComponentTransform> = new InjectionToken<LayoutComponentTransform>('LAYOUT_COMPONENT_TRANSFORM');\n\n/**\n * Injection token for layout component child extension types\n */\nexport const LAYOUT_COMPONENT_CHILD_EXTENSIONS: InjectionToken<DynamicItemExtensionType[]> = new InjectionToken<DynamicItemExtensionType[]>('LAYOUT_COMPONENT_CHILD_EXTENSIONS');\n\n/**\n * Injection token for layout components module data extractors\n */\nexport const LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS');\n\n/**\n * Injection token for layout components module providers\n */\nexport const LAYOUT_COMPONENTS_MODULE_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('LAYOUT_COMPONENTS_MODULE_PROVIDERS');\n\n/**\n * Injection token for layout components loader\n */\nexport const LAYOUT_COMPONENTS_LOADER: InjectionToken<DynamicItemLoader<LayoutComponentDef>> = new InjectionToken<DynamicItemLoader<LayoutComponentDef>>('LAYOUT_COMPONENTS_LOADER');\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in material-components\n */\n@Injectable()\nexport class MaterialComponentsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with material-components\n        if(source.package != 'material-components' && source.package != '@anglr/dynamic/material-components')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('MaterialComponentsDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            const dynamicItemModule = await import(`@anglr/dynamic/material-components/${source.name}/type`);\n\n            return dynamicItemModule;\n        }\n        catch(e)\n        {\n            this._logger?.debug('MaterialComponentsDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n        }\n\n        return null;\n    }\n}","import {isJsObject} from '@jscrpt/common';\n\nimport {DynamicItemExtensions, DynamicItemExtensionType, DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from '../../services';\n\n/**\n * Module with extensions named exports\n */\ninterface ɵDynamicModuleNamedExtensions extends DynamicModule\n{\n    /**\n     * Extensions applied directly to self or object storing extensions and child extensions\n     */\n    extensions?: DynamicItemExtensionType[]|DynamicItemExtensions;\n\n    /**\n     * Extensions applied to children\n     */\n    childExtensions?: DynamicItemExtensionType[];\n}\n\n/**\n * Extracts dynamic item extensions which are exported as named exports of module\n */\nexport const extensionsExportsExtractor: DynamicModuleDataExtractorFn<DynamicItemExtensions> = (module, logger) =>\n{\n    const localModule = module as ɵDynamicModuleNamedExtensions;\n    const extensionsObject = localModule.extensions as DynamicItemExtensions;\n\n    logger?.debug('extensionsExportsExtractor: trying to extract dynamic item extensions');\n\n    //extensions stored as object\n    if(extensionsObject && isJsObject(extensionsObject) && (extensionsObject.extensions || extensionsObject.childExtensions))\n    {\n        return {\n            extensions: extensionsObject.extensions,\n            childExtensions: extensionsObject.childExtensions,\n        };\n    }\n\n    if(localModule.childExtensions || localModule.extensions)\n    {\n        return {\n            extensions: localModule.extensions as DynamicItemExtensionType[],\n            childExtensions: localModule.childExtensions,\n        };\n    }\n\n    return null;\n};\n","import {ClassProvider, FactoryProvider, inject, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {BasicComponentsDynamicModuleItemsProvider, defaultExportExtractor, DynamicItemLoader, DynamicModuleDataExtractor, extensionsExportsExtractor, MaterialComponentsDynamicModuleItemsProvider} from '@anglr/dynamic';\n\nimport {LAYOUT_COMPONENTS_LOADER, LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS, LAYOUT_COMPONENTS_MODULE_PROVIDERS} from './tokens';\nimport {isLayoutComponentDef} from './utils';\n\n/**\n * Provider for basic components package layout components provider\n */\nexport const BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: BasicComponentsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for material components package layout components provider\n */\nexport const MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: MaterialComponentsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for default layout components extractor\n */\nexport const DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR: FactoryProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS,\n    useFactory: (logger?: Logger) =>\n    {\n        return new DynamicModuleDataExtractor([\n                                                  defaultExportExtractor,\n                                                  extensionsExportsExtractor,\n                                              ],\n                                              logger);\n    },\n    deps: [[new Optional(), LOGGER]],\n    multi: true\n};\n\n/**\n * Provider for layout components loader\n */\nexport const LAYOUT_COMPONENTS_LOADER_PROVIDER: FactoryProvider =\n{\n    provide: LAYOUT_COMPONENTS_LOADER,\n    useFactory: () =>\n    {\n        return new DynamicItemLoader(inject(LAYOUT_COMPONENTS_MODULE_PROVIDERS),\n                                     inject(LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS),\n                                     isLayoutComponentDef,\n                                     inject(LOGGER, {optional: true}) ?? undefined);\n    }\n};","import {Provider} from '@angular/core';\nimport {DynamicItemLoaderValidatorFn} from '@anglr/dynamic';\nimport {isBlank, isPresent, isType} from '@jscrpt/common';\n\nimport {LayoutComponentDef} from './types';\nimport {BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER, DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR, LAYOUT_COMPONENTS_LOADER_PROVIDER, MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER} from './providers';\n\n/**\n * Checks whether data is layout component def\n * @param data - Data to be checked\n */\nexport const isLayoutComponentDef: DynamicItemLoaderValidatorFn<LayoutComponentDef> = function(data): data is LayoutComponentDef\n{\n    //type is required and must be type\n    if(isBlank(data?.data) || !isType(data.data))\n    {\n        return false;\n    }\n\n    if(isPresent(data?.childExtensions) && (!Array.isArray(data.childExtensions) || data.childExtensions.some(itm => !isType(itm))))\n    {\n        return false;\n    }\n\n    if(isPresent(data?.extensions) && (!Array.isArray(data.extensions) || data.extensions.some(itm => !isType(itm))))\n    {\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Default providers for layout subpackage\n */\nexport function provideLayout(): Provider[]\n{\n    return [\n        LAYOUT_COMPONENTS_LOADER_PROVIDER,\n        BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER,\n        MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER,\n        DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR,\n    ];\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {LayoutComponentRendererSADirective} from '../directives';\nimport {provideLayout} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic layout rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        LayoutComponentRendererSADirective,\n    ],\n    exports:\n    [\n        LayoutComponentRendererSADirective,\n    ]\n})\nexport class DynamicLayoutModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicLayoutModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicLayoutModule>\n    {\n        return {\n            ngModule: DynamicLayoutModule,\n            providers:\n            [\n                provideLayout(),\n            ]\n        };\n    }\n}","import {isPresent} from '@jscrpt/common';\n\nimport {DynamicItemDefData, DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from '../../services';\n\n/**\n * Module with default export\n */\ninterface ɵDynamicModuleWithDefault<TData = any> extends DynamicModule\n{\n    /**\n     * Default export value\n     */\n    default?: TData;\n}\n\n/**\n * Extracts dynamic data which is module exports as default export\n */\nexport const defaultExportExtractor: DynamicModuleDataExtractorFn<DynamicItemDefData> = (module, logger) =>\n{\n    const localModule = module as ɵDynamicModuleWithDefault;\n\n    logger?.debug('defaultExportExtractor: trying to extract default dynamic data');\n\n    if(isPresent(localModule.default))\n    {\n        return {\n            data: localModule.default\n        };\n    }\n\n    return null;\n};","import {SimpleChange, SimpleChanges} from '@angular/core';\n\n/**\n * Adds simple change into simple changes object\n * @param changes - Object with changes to be added to\n * @param key - Key under wich should be change stored\n * @param currentValue - Current value that is being changed\n * @param previousValue - Previous value that is being changed\n * @param firstChange - Indication whether is first change, defaults to false\n */\nexport function addSimpleChange<TObj, TValue = any>(changes: SimpleChanges, key: Extract<keyof TObj, string>, currentValue: TValue|undefined|null, previousValue: TValue|undefined|null, firstChange: boolean = false): void\n{\n    changes[key] = <SimpleChange>\n    {\n        currentValue,\n        previousValue,\n        firstChange,\n        isFirstChange: () => firstChange,\n    };\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in basic-components\n */\n@Injectable()\nexport class BasicComponentsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with basic-components\n        if(source.package != 'basic-components' && source.package != '@anglr/dynamic/basic-components')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            const dynamicItemModule = await import(`@anglr/dynamic/basic-components/${source.name}/type`);\n\n            return dynamicItemModule;\n        }\n        catch(e)\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n        }\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, resolvePromiseOr} from '@jscrpt/common';\n\nimport {DynamicModuleProvider, DynamicItemLoaderValidatorFn} from './dynamicItemLoader.interface';\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleDataExtractor} from '../dynamicModuleDataExtractor/dynamicModuleDataExtractor.service';\n\n//TODO: make no chace dynamic, observable\n\n/**\n * Service used for loading dynamic items\n */\nexport class DynamicItemLoader<TDynamicItemDef = any>\n{\n    //######################### protected cache #########################\n\n    /**\n     * Cached dynamic items definition\n     */\n    protected _cachedDynamicItems: Dictionary<TDynamicItemDef|null> = {};\n\n    //######################### constructors #########################\n    constructor(protected _providers: DynamicModuleProvider[],\n                protected _extractors: DynamicModuleDataExtractor<TDynamicItemDef>[],\n                protected _validatorFn: DynamicItemLoaderValidatorFn<TDynamicItemDef>,\n                protected _logger?: Logger,\n                protected _noCache?: boolean,)\n    {\n        //providers is not an array\n        if(!Array.isArray(this._providers))\n        {\n            this._logger?.error('DynamicItemLoader: missing providers!');\n\n            this._providers = [];\n        }\n\n        //extractors is not an array\n        if(!Array.isArray(this._extractors))\n        {\n            this._logger?.error('DynamicItemLoader: missing extractors!');\n\n            this._extractors = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Loads dynamic item, or null if not found\n     * @param source - Definition of source for dynamic item\n     */\n    public async loadItem(source: DynamicItemSource): Promise<TDynamicItemDef|null>\n    {\n        let dynamicModule: DynamicModule|null = null;\n        const cacheId = `${source.package}-${source.name}`;\n\n        //try to get from cache\n        if(cacheId in this._cachedDynamicItems && !this._noCache)\n        {\n            this._logger?.verbose('DynamicItemLoader: Loading from cache {@source}', {name: source.name, package: source.package});\n\n            return this._cachedDynamicItems[cacheId];\n        }\n\n        //loops all providers, return result from first that returns non null value\n        for(const provider of this._providers)\n        {\n            const asyncDynamicModule = provider.tryToGet(source);\n\n            if(asyncDynamicModule)\n            {\n                dynamicModule = await resolvePromiseOr(asyncDynamicModule);\n            }\n            else\n            {\n                dynamicModule = null;\n            }\n\n            if(dynamicModule)\n            {\n                break;\n            }\n        }\n\n        //no module found\n        if(!dynamicModule)\n        {\n            this._logger?.debug('DynamicItemLoader: Failed to get dynamic module {@source}', {name: source.name, package: source.package});\n\n            return null;\n        }\n\n        //loops all extractors, return result from first that returns non null value\n        for(const extractor of this._extractors)\n        {\n            const dynamicItem = await extractor.tryToExtract(dynamicModule);\n\n            if(dynamicItem)\n            {\n                this._cachedDynamicItems[cacheId] = this._validatorFn(dynamicItem) ? dynamicItem : null; \n\n                if(!this._cachedDynamicItems[cacheId])\n                {\n                    this._logger?.warn('DynamicItemLoader: Found dynamic item {@source} is not of requested type', {name: source.name, package: source.package});        \n                }\n\n                return this._cachedDynamicItems[cacheId];\n\n            }\n        }\n\n        this._logger?.debug('DynamicItemLoader: Failed to extract dynamic item {@source}', {name: source.name, package: source.package});\n\n        this._cachedDynamicItems[cacheId] = null;\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, extend, resolvePromiseOr, isEmptyObject} from '@jscrpt/common';\n\nimport {DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from './dynamicModuleDataExtractor.interface';\n\n/**\n * Extractor used for extracting dynamic data from dynamic module\n */\nexport class DynamicModuleDataExtractor<TData extends Dictionary<any> = any>\n{\n    //######################### constructor #########################\n\n    /**\n     * Creates new instance of DynamicModuleDataExtractor\n     * @param _extractorFunctions - Array of extractor functions used to create result\n     * @param _logger - Instance of logger used for logging, optional\n     */\n    constructor(protected _extractorFunctions: DynamicModuleDataExtractorFn[],\n                protected _logger?: Logger,)\n    {\n        //extractor functions is not an array\n        if(!Array.isArray(this._extractorFunctions))\n        {\n            this._logger?.error('DynamicModuleDataExtractor: missing extractor functions!');\n\n            this._extractorFunctions = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Tries to extract dynamic data from dynamic module\n     * @param module - Module containing dynamic data\n     */\n    public async tryToExtract(module: DynamicModule): Promise<TData|null>\n    {\n        const result: TData = {} as any;\n\n        for(const fn of this._extractorFunctions)\n        {\n            extend(true, result, await resolvePromiseOr(fn(module, this._logger)));\n        }\n\n        if(isEmptyObject(result))\n        {\n            return null;\n        }\n\n        return result;\n    }\n}","var map = {\n\t\"./checkbox/type\": [\n\t\t93833,\n\t\t294,\n\t\t3833\n\t],\n\t\"./datepicker/type\": [\n\t\t23489,\n\t\t3167,\n\t\t9101,\n\t\t4262,\n\t\t6038,\n\t\t3489\n\t],\n\t\"./numberField/type\": [\n\t\t62459,\n\t\t3167,\n\t\t4262,\n\t\t2459\n\t],\n\t\"./period/type\": [\n\t\t94391,\n\t\t3167,\n\t\t4262,\n\t\t4391\n\t],\n\t\"./radio/type\": [\n\t\t7570,\n\t\t5613,\n\t\t7570\n\t],\n\t\"./select/type\": [\n\t\t79838,\n\t\t3167,\n\t\t5887,\n\t\t9838\n\t],\n\t\"./textField/type\": [\n\t\t28945,\n\t\t3167,\n\t\t4262,\n\t\t8945\n\t],\n\t\"./textarea/type\": [\n\t\t13702,\n\t\t3167,\n\t\t4262,\n\t\t3702\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 13680;\nmodule.exports = webpackAsyncContext;","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}","import {PromiseOr} from '../types/async';\n\n/**\n * Resolves `PromiseOr` value\n * @param value - Value to be solved\n */\nexport async function resolvePromiseOr<TResult>(value: PromiseOr<TResult>): Promise<TResult>\n{\n    if(value instanceof Promise)\n    {\n        return await value;\n    }\n\n    return value;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","createStoreDataServiceFactory","storeName","provide","StoreDataService","useFactory","storage","deps","PERMANENT_STORAGE","i0","val_r1","PreviewComponent","constructor","_store","_router","_route","_available","FormControl","_metadata","_availableNames","ngOnInit","this","getStored","params","subscribe","setValue","getData","valueChanges","val","navigate","skipLocationChange","replaceUrl","ngOnDestroy","selectors","decls","vars","consts","template","ComponentRoute","path","Router","ActivatedRoute","components","LayoutModule","imports","CommonModule","ReactiveFormsModule","NgSelectModule","DynamicLayoutModule","ModuleRoutes","_storage","_storeKey","setData","name","data","store","get","set","removeData","MissingTypeBehavior","LayoutComponentRendererDirectiveOptions","missingTypeBehavior","ShowNotFound","isPresent","NotFoundLayoutTypeSAComponent","standalone","features","LayoutComponentRendererSADirective","_viewContainerRef","_loader","_childExtensions","_options","_metadataTransformer","_logger","_componentRef","componentMetadata","disableTransformer","componentChange","EventEmitter","component","instance","componentRef","ngOnChanges","changes","debug","clear","nameof","injector","customInjector","layoutComponentType","loadItem","warn","package","createComponent","Ignore","ThrowError","usedInjector","Injector","parent","providers","LAYOUT_COMPONENT_CHILD_EXTENSIONS","useValue","childExtensions","registerExtensions","itm","extensions","addSimpleChange","options","resolvePromiseOr","invalidateVisuals","changeDetectorRef","markForCheck","next","designer","destroy","LAYOUT_COMPONENTS_LOADER","LAYOUT_COMPONENT_TRANSFORM","LOGGER","inputs","outputs","exportAs","InjectionToken","LAYOUT_COMPONENTS_MODULE_DATA_EXTRACTORS","LAYOUT_COMPONENTS_MODULE_PROVIDERS","MaterialComponentsDynamicModuleItemsProvider","tryToGet","source","factory","extensionsExportsExtractor","logger","localModule","extensionsObject","isJsObject","BASIC_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER","useClass","BasicComponentsDynamicModuleItemsProvider","multi","MATERIAL_COMPONENTS_LAYOUT_COMPONENTS_PROVIDER","DEFAULT_LAYOUT_COMPONENTS_EXTRACTOR","DynamicModuleDataExtractor","defaultExportExtractor","Optional","LAYOUT_COMPONENTS_LOADER_PROVIDER","DynamicItemLoader","inject","isLayoutComponentDef","optional","undefined","isBlank","isType","Array","isArray","some","provideLayout","ngModule","default","key","currentValue","previousValue","firstChange","isFirstChange","_providers","_extractors","_validatorFn","_noCache","_cachedDynamicItems","error","dynamicModule","cacheId","verbose","provider","asyncDynamicModule","extractor","dynamicItem","tryToExtract","_extractorFunctions","result","fn","extend","isEmptyObject","route","target","rt","routeDecoratedComponent","routeValues","defineProperty","enumerable","configurable","writable","value","push"],"sourceRoot":""}