{"version":3,"file":"2611.chunk.aedaf2bb884f438bb156.js","mappings":"kZAUM,MAAOA,UAAiCC,EAAAA,EAOhCC,kBAEN,MAAMC,EAAgC,CAAC,EAKvC,OAHAA,EAAOC,EAAAA,GAAAA,aAA0CA,EAAAA,GACjDD,EAAOE,EAAAA,GAAAA,aAA+CA,EAAAA,GAE/CF,CACX,E,6DAfSH,KAAwB,GAAxBA,EAAwB,E,uBAAxBA,EAAwBM,QAAxBN,EAAwB,O,6HC+B9B,IAAMO,EAAN,MAOHC,YAAoBC,GAAA,KAAAA,SAAAA,EAHV,KAAAC,SAAoCC,EAAAA,EAAAA,6BAK9C,CAIUC,OAEND,EAAAA,EAAAA,8BAAyCE,KAAKJ,SAASK,aAC3D,G,iCAhBSP,GAAe,W,kBAAfA,EAAeQ,UAAAA,CAAAA,CAAAA,gBAAAC,SAAAA,CAAAA,EAAAA,EApBxB,CACIC,EAAAA,EAEA,CACIC,QAASC,EAAAA,GACTC,WAAY,IAAM,IAAIC,EAAAA,GAAyC,IAAM,OAEzEC,EAAAA,EAAAA,IAAiCtB,IACjCuB,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MAEA,CACIP,QAASQ,EAAAA,EACTC,SAAUC,EAAAA,MAEjBC,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,YAAAA,CAAAA,OAAAA,SAAAA,SAAAA,GAAAA,EAAAA,MAAAA,cAAAA,2BAAAA,CAAAA,OAAAA,SAAAA,EAAAA,MAAAA,cAAAA,EAAAA,SAAAA,CAAAA,EAAAA,SAAAA,EAAAA,aAAAC,SAAAA,SAAAA,EAAAA,GAAA,MCrCLC,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAAsB,aAAtBA,CAAsB,UAERA,EAAAA,EAAAA,EAAAA,WAAOA,EAAAA,IAAAA,GAGjBA,EAAAA,GAAAA,EAAAA,SAAAA,GAA8CA,EAAAA,EAAC,SAADA,WAAA,OAASC,EAAAA,MAAM,IACzDD,EAAAA,GAAAA,EAAAA,QAAMA,EAAAA,EAAAA,EAAAA,QAAIA,EAAAA,IAAAA,KAIlBA,EAAAA,GAAAA,EAAAA,mBAAAA,I,MAAiCA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,WAAAA,EAAAA,U,6DD+BpB1B,GAAe,UAD3B4B,EAAAA,EAAAA,GAAe,CAACC,KAAM,YAAU,6BAQCC,EAAAA,KAPrB9B,G,2DEZN,IAAM+B,EAAN,MAGH9B,YAAoB+B,GAAA,KAAAA,kBAAAA,CAEpB,CAOOC,WAEH3B,KAAK0B,kBAAkBE,aAAa9B,EAAAA,EAAAA,8BACxC,G,iCAfS2B,GAAkB,W,kBAAlBA,EAAkBvB,UAAAA,CAAAA,CAAAA,mBAAAC,SAAAA,CAAAA,EAAAA,EAT3B,EACI0B,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,QACHhB,MAAAA,GAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,qBAAAA,CAAAA,aAAAA,+BAAAA,CAAAA,EAAAA,SAAAC,SAAAA,SAAAA,EAAAA,GAAA,MCzBLC,EAAAA,GAAAA,EAAAA,MAAAA,EAAAA,CAA+B,SACiBA,EAAAA,EAAAA,EAAAA,UAAMA,EAAAA,IAAAA,GAGtDA,EAAAA,GAAAA,EAAAA,MAAAA,CAAK,WACiBA,EAAAA,EAAAA,EAAAA,0BAAsBA,EAAAA,KACxCA,EAAAA,GAAAA,EAAAA,0BACJA,EAAAA,KAEAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAK,WACiBA,EAAAA,EAAAA,EAAAA,oBAAgBA,EAAAA,KAClCA,EAAAA,GAAAA,GAAAA,oBACJA,EAAAA,K,iEDiBaK,GAAkB,UAD9BH,EAAAA,EAAAA,GAAe,CAACC,KAAM,MAAI,6BAIgBU,EAAAA,KAH9BR,GE1BN,MAAMS,EACb,CACIT,EACA/B,G,eC6BG,IAAMyC,EAAN,Q,iCAAMA,EAAyB,E,kBAAzBA,I,uBALT,EACIC,EAAAA,EAAAA,GAA8B,kBACjCC,QAAAA,CAdGC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAjD,EAAAA,GACAD,EAAAA,MAYK4C,GAAyB,UADrCO,EAAAA,EAAAA,GAAaR,IACDC,E,wECzBP,MAAOK,EAOFG,uBAEH,MAAO,CACHC,SAAUJ,EACVK,UACA,EACIhB,EAAAA,EAAAA,OAGZ,E,iCAhBSW,EAAsB,E,kBAAtBA,I,iECaP,SAAUlB,EAAewB,GAG3B,OAAO,SAAuCC,GAE1C,MAAMC,EAAKF,EAEXE,EAAGC,UAAiBF,EAEpB,MAAMG,EAAwDH,EAgB9D,OAdGI,EAAAA,EAAAA,IAAQD,EAAwBE,cAE/BC,OAAOC,eAAeP,EACA,cACA,CACIQ,YAAY,EACZC,cAAc,EACdC,UAAU,EACVC,MAAO,KAIrCR,EAAwBE,YAAYO,KAAKX,GAElCD,CACX,CACJ,C,mFCxCM,MAAOa,EAGTjE,YAAoBkE,GAAA,KAAAA,UAAAA,CAEpB,CASOC,OAAOC,GAEVA,EAAMC,iBACND,EAAME,kBAENjE,KAAK6D,UAAUK,MACnB,E,iCApBSN,GAAe,W,kBAAfA,EAAe,6D,gCAAf,iB,6DCQP,MAAOrB,G,iCAAAA,EAAY,E,kBAAZA,I","sources":["webpack://ng-universal-demo/./app/services/staticComponentsRegister/staticComponentsRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.module.ts","webpack://ng-universal-demo/../relations/src/modules/dynamicRelations.module.ts","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../../src/modules/goBack/directives/goBack/goBack.directive.ts","webpack://ng-universal-demo/../../../../src/modules/goBack/modules/goBack.module.ts"],"sourcesContent":["import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Static components register for demo app\n */\n@Injectable()\nexport class StaticComponentsRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[RelationsResultSAComponent.relationsId] = RelationsResultSAComponent;\n        result[RelationsSampleClickSAComponent.relationsId] = RelationsSampleClickSAComponent;\n\n        return result;\n    }\n}","import {Component, ChangeDetectionStrategy, ClassProvider, FactoryProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {provideRelationsEditorWithStatic, RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {provideBasicRelationsEditor} from '@anglr/dynamic/basic-components';\nimport {EditorHotkeys, MetadataStorage, PackageManager} from '@anglr/dynamic';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StaticComponentsRegister} from '../../../services/staticComponentsRegister/staticComponentsRegister.service';\nimport {DemoRelationsPackageManager} from '../../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'editor-view',\n    templateUrl: 'editor.component.html',\n    providers:\n    [\n        EditorHotkeys,\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: () => new MetadataStorage<RelationsNodeMetadata[]>(() => []),\n        },\n        provideRelationsEditorWithStatic(StaticComponentsRegister),\n        provideTinyMceRelationsEditor(),\n        provideBasicRelationsEditor(),\n        provideHandlebarsRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected metadata: RelationsNodeMetadata[] = DemoData.relationsStaticWithEditorDemo;\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    protected save(): void\n    {\n        DemoData.relationsStaticWithEditorDemo = this._manager.getMetadata();\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-left-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"save()\">\n        <span>save</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"metadata\"></relations-editor>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {provideRelations, RelationsManager} from '@anglr/dynamic/relations';\nimport {provideBasicRelations} from '@anglr/dynamic/basic-components';\nimport {provideTinyMceRelations} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelations} from '@anglr/dynamic/handlebars-components';\n\nimport {DemoData} from '../../../services/demoData';\n\n//TODO: check why relations does not work after returning from editor\n\n/**\n * Page for displaying relations\n */\n@Component(\n{\n    selector: 'relations-view',\n    templateUrl: 'relations.component.html',\n    // styleUrls: ['relations.component.scss'],\n    providers:\n    [\n        provideRelations(),\n        provideBasicRelations(),\n        provideTinyMceRelations(),\n        provideHandlebarsRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\nexport class RelationsComponent\n{\n    //######################### constructor #########################\n    constructor(private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._relationsManager.setRelations(DemoData.relationsStaticWithEditorDemo);\n    }\n}","<div class=\"margin-bottom-big\">\n    <a routerLink=\"/relationsWithEditor/editor\">editor</a>\n</div>\n\n<div>\n    <div class=\"bold\">relations sample click</div>\n    <relations-sample-click></relations-sample-click>\n</div>\n\n<div>\n    <div class=\"bold\">relations result</div>\n    <relations-result></relations-result>\n</div>","import {EditorComponent} from './editor/editor.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    RelationsComponent,\n    EditorComponent,\n];","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {GoBackModule} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsModule} from '@anglr/dynamic/relations';\nimport {DynamicRelationsEditorModule} from '@anglr/dynamic/relations-editor';\n\nimport {components} from './relationsWithEditor.routes';\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for relations with editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        RouterModule,\n        GoBackModule,\n        DynamicRelationsModule,\n        DynamicRelationsEditorModule,\n        RelationsSampleClickSAComponent,\n        RelationsResultSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('RELATIONS_TMP'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithEditorModule\n{\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {provideRelations} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic relations rendering\n */\n@NgModule(\n{\n})\nexport class DynamicRelationsModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsModule>\n    {\n        return {\n            ngModule: DynamicRelationsModule,\n            providers:\n            [\n                provideRelations(),\n            ]\n        };\n    }\n}","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]'\n})\nexport class GoBackDirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}","import {NgModule} from '@angular/core';\n\nimport {GoBackDirective} from '../directives';\n\n/**\n * Module for GoBack directive\n */\n@NgModule(\n{\n    declarations:\n    [\n        GoBackDirective\n    ],\n    exports:\n    [\n        GoBackDirective\n    ]\n})\nexport class GoBackModule\n{\n}\n"],"names":["StaticComponentsRegister","Register","getDefinedTypes","result","RelationsResultSAComponent","RelationsSampleClickSAComponent","factory","EditorComponent","constructor","_manager","metadata","DemoData","save","this","getMetadata","selectors","features","EditorHotkeys","provide","RELATIONS_METADATA_STORAGE","useFactory","MetadataStorage","provideRelationsEditorWithStatic","provideTinyMceRelationsEditor","provideBasicRelationsEditor","provideHandlebarsRelationsEditor","PackageManager","useClass","DemoRelationsPackageManager","decls","vars","consts","template","i0","ctx","ComponentRoute","path","RelationsNodeManager","RelationsComponent","_relationsManager","ngOnInit","setRelations","provideRelations","provideBasicRelations","provideTinyMceRelations","provideHandlebarsRelations","RelationsManager","components","RelationsWithEditorModule","createStoreDataServiceFactory","imports","RouterModule","GoBackModule","DynamicRelationsModule","DynamicRelationsEditorModule","ModuleRoutes","static","ngModule","providers","route","target","rt","component","routeDecoratedComponent","isBlank","routeValues","Object","defineProperty","enumerable","configurable","writable","value","push","GoBackDirective","_location","goBack","event","preventDefault","stopPropagation","back"],"sourceRoot":""}