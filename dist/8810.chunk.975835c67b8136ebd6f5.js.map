{"version":3,"file":"8810.chunk.975835c67b8136ebd6f5.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/components/relationsSampleClick/node/relationsSampleClickNode.component.ts","webpack://ng-universal-demo/./app/components/relationsSampleClick/node/relationsSampleClickNode.component.html","webpack://ng-universal-demo/./app/components/relationsSampleClick/metadata/relationsSampleClick.relationsMetadata.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeBase.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeEndpointBase.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeInput/relationsNodeInput.component.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeOutput/relationsNodeOutput.component.ts","webpack://ng-universal-demo/../relations/src/decorators/pureRelationsComponent/pureRelationsComponent.decorator.ts","webpack://ng-universal-demo/../src/services/basicComponentsDynamicModuleItemsProvider/basicComponentsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/services/dynamicItemLoader/dynamicItemLoader.service.ts","webpack://ng-universal-demo/../src/services/dynamicModuleDataExtractor/dynamicModuleDataExtractor.service.ts","webpack://ng-universal-demo/../../../src/utils/async.ts"],"sourcesContent":["var map = {\n\t\"./button/type\": [\n\t\t38206,\n\t\t8206\n\t],\n\t\"./gridPanel/type\": [\n\t\t49,\n\t\t49\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t9918,\n\t\t9918\n\t],\n\t\"./sampleChange/type\": [\n\t\t89354,\n\t\t9354\n\t],\n\t\"./sampleSource/type\": [\n\t\t51133,\n\t\t1133\n\t],\n\t\"./stackPanel/type\": [\n\t\t14433,\n\t\t4433\n\t],\n\t\"./textBlock/type\": [\n\t\t2252,\n\t\t2252\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 84635;\nmodule.exports = webpackAsyncContext;","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationNodeOutputSAComponent} from '@anglr/dynamic/relations-editor';\n\n/**\n * Relations node component for relations sample click\n */\n@Component(\n{\n    selector: 'relations-sample-click-node',\n    templateUrl: 'relationsSampleClickNode.component.html',\n    styleUrls: ['relationsSampleClickNode.component.scss'],\n    standalone: true,\n    imports:\n    [\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationsSampleClickNodeSAComponent extends RelationsNodeBase implements RelationsNode\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected metadataSet(): void\n    {\n    }\n}","<div class=\"node-header\">\n    {{metadata?.id}}\n</div>\n\n<div class=\"node-content\">\n    <div class=\"inputs margin-right-small\">\n        <div class=\"flex-row\">\n            <relation-node-input [parentCoordiantes]=\"_nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"vstup\" [parent]=\"this\"></relation-node-input>\n            <div class=\"margin-left-extra-small\">vstup</div>\n        </div>\n    </div>\n\n    <div class=\"outputs margin-left-small\">\n        <div class=\"flex-row\">\n            <div class=\"margin-right-extra-small\">výstup</div>\n            <relation-node-output [parentCoordiantes]=\"_nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"vystup\" [parent]=\"this\"></relation-node-output>\n        </div>\n    </div>\n</div>","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {RelationsSampleClickNodeSAComponent} from '../node/relationsSampleClickNode.component';\n\n/**\n * Relations sample click relations metadata\n */\nexport class RelationsSampleClickRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Relations sample click',\n        description: 'Relations sample click node',\n        group: 'Sample component',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = RelationsSampleClickNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {HostListener, ViewChildren, QueryList, ChangeDetectorRef, ElementRef, SimpleChanges, Directive} from '@angular/core';\nimport {Dictionary, nameof} from '@jscrpt/common';\n\nimport {Coordinates, RelationsInput, RelationsNode, RelationsNodeMetadata, RelationsOutput} from '../interfaces';\nimport {RelationNodeOutputSAComponent} from './relationsNodeOutput/relationsNodeOutput.component';\nimport {RelationNodeInputSAComponent} from './relationsNodeInput/relationsNodeInput.component';\n\n//TODO: add way of destruction for nodes! into renderer into interface and here\n\n/**\n * Base class for relations node components\n */\n@Directive()\nexport abstract class RelationsNodeBase<TOptions = any, TEditorOptions = any> implements RelationsNode<TOptions, TEditorOptions>\n{\n    //######################### protected fields #########################\n\n    /**\n     * Indication whether is node initialized\n     */\n    protected _initialized: boolean = false;\n\n    /**\n     * Indication whether user is dragging\n     */\n    protected _isDragging: boolean = false;\n\n    /**\n     * Last mouse down position\n     */\n    protected _lastMouseDownPosition: Coordinates =\n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Node position on last mouse down event\n     */\n    protected _lastMouseDownNodePosition: Coordinates =\n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Node position\n     */\n    protected _nodePosition: Coordinates =\n    {\n        x: 0,\n        y: 0,\n    };\n\n    /**\n     * Array of all available outputs\n     */\n    protected _allOutputs: readonly RelationsOutput[] = [];\n\n    /**\n     * Object storing inputs by their names\n     */\n    protected _inputs: Dictionary<RelationsInput> = {};\n \n    /**\n     * Object storing outputs by their names\n     */\n    protected _outputs: Dictionary<RelationsOutput> = {};\n\n    //######################### protected properties - view children #########################\n\n    /**\n     * Relations node inputs\n     */\n    @ViewChildren(RelationNodeInputSAComponent)\n    protected _inputsChildren!: QueryList<RelationsInput>;\n\n    /**\n     * Relations node outputs\n     */\n    @ViewChildren(RelationNodeOutputSAComponent)\n    protected _outputsChildren!: QueryList<RelationsOutput>;\n\n    //######################### public properties - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n    public zoomLevel: number = 1;\n\n    /**\n     * @inheritdoc\n     */\n    public get id(): string\n    {\n        return this.metadata?.id ?? '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public metadata: RelationsNodeMetadata<TOptions, TEditorOptions>|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public get allOutputs(): readonly RelationsOutput[]\n    {\n        return this._allOutputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get inputs(): Dictionary<RelationsInput>\n    {\n        return this._inputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get outputs(): Dictionary<RelationsOutput>\n    {\n        return this._outputs;\n    }\n\n    //######################### constructor #########################\n    constructor(protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>,)\n    {\n        this._updatePosition();\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n    \n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        //initial change of metadata\n        if(nameof<RelationsNodeBase>('metadata') in changes && this.metadata)\n        {\n            if(this.metadata.nodeMetadata?.coordinates)\n            {\n                this._nodePosition = this.metadata.nodeMetadata.coordinates;\n                this._updatePosition();\n            }\n\n            this.metadataSet();\n        }\n    }\n\n    //######################### public methods - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n\n        if(!this._initialized)\n        {\n            this._initialized = true;\n\n            this._initEndpoints();\n        }\n    }\n\n    //######################### protected methods methods - host listeners #########################\n\n    /**\n     * Mouse down event\n     * @param event\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: MouseEvent): void\n    {\n        this._isDragging = true;\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._lastMouseDownNodePosition =\n        {\n            x: this._nodePosition.x,\n            y: this._nodePosition.y\n        };\n\n        event.stopImmediatePropagation();\n    }\n\n    /**\n     * Mouse move event\n     * @param event\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._nodePosition =\n            {\n                x: this._lastMouseDownNodePosition.x + (event.clientX - this._lastMouseDownPosition.x) * 1/this.zoomLevel,\n                y: this._lastMouseDownNodePosition.y + (event.clientY - this._lastMouseDownPosition.y) * 1/this.zoomLevel,\n            };\n\n            this._updatePosition();\n\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            this._updateRelations();\n        }\n    }\n\n    /**\n     * Mouse up event\n     * @param event\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Initialize endpoints\n     */\n    protected _initEndpoints(): void\n    {\n        const updateInputs = () =>\n        {\n            this._inputs = {};\n\n            this._inputsChildren?.forEach(input =>\n            {\n                if(input.name)\n                {\n                    this._inputs[input.name] = input;\n                }\n            });\n\n            Object.freeze(this._inputs);\n        };\n\n        const updateOutputs = () =>\n        {\n            this._allOutputs = this._outputsChildren.toArray();\n            this._outputs = {};\n\n            this._outputsChildren?.forEach(output =>\n            {\n                if(output.name)\n                {\n                    this._outputs[output.name] = output;\n                }\n            });\n\n            Object.freeze(this._outputs);\n        };\n\n        this._inputsChildren?.changes.subscribe(() => updateInputs());\n        this._outputsChildren?.changes.subscribe(() => updateOutputs());\n\n        updateInputs();\n        updateOutputs();\n    }\n\n    /**\n     * Updates node relations\n     */\n    protected _updateRelations(): void\n    {\n        this._inputsChildren.forEach(input =>\n        {\n            input.updateRelation();\n        });\n\n        this._outputsChildren.forEach(output =>\n        {\n            output.updateRelation();\n        });\n    }\n\n    /**\n     * Updates node position\n     */\n    protected _updatePosition(): void\n    {\n        this._element.nativeElement.style.left = `${this._nodePosition.x}px`;\n        this._element.nativeElement.style.top = `${this._nodePosition.y}px`;\n\n        if(this.metadata?.nodeMetadata?.coordinates)\n        {\n            this.metadata.nodeMetadata.coordinates.x = this._nodePosition.x;\n            this.metadata.nodeMetadata.coordinates.y = this._nodePosition.y;\n        }\n    }\n\n    /**\n     * Allows code to be called after metadata were set\n     */\n    protected abstract metadataSet(): void;\n}","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\n\nimport {Coordinates, RelationsEndpoint, RelationsNode} from '../interfaces';\nimport {NodeRelationPath} from '../misc/nodeRelationPath';\nimport {RelationsNodeManager} from '../services';\nimport {RelationsCanvasSAComponent} from './relationsCanvas/relationsCanvas.component';\n\n/**\n * Base class for relations node endpoints (inputs/outputs)\n */\n@Directive()\nexport abstract class RelationNodeEndpointBase implements RelationsEndpoint, OnInit\n{\n    //######################### protected properties #########################\n\n    /**\n     * Node relation\n     */\n    protected _relation: NodeRelationPath|null|undefined;\n\n    /**\n     * Indication whether component is dragging\n     */\n    protected _isDragging: boolean = false;\n\n    /**\n     * Last mouse down position\n     */\n    protected _lastMouseDownPosition: Coordinates = \n    {\n        x: 0,\n        y: 0\n    };\n\n    //######################### public properties - implementation of RelationsEndpoint #########################\n\n    /**\n     * @inheritdoc\n     */\n    @Input()\n    public name: string|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public get parentId(): string\n    {\n        return this.parent?.id ?? '';\n    }\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Parent zoom level\n     */\n    @Input()\n    public zoomLevel: number = 1;\n\n    /**\n     * Parent node coordinates\n     */\n    @Input()\n    public parentCoordiantes: Coordinates = \n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Instance of parent node\n     */\n    @Input()\n    public parent: RelationsNode|undefined|null;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _relationManager: RelationsNodeManager,\n                protected _canvas: RelationsCanvasSAComponent,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        if(!this.parent)\n        {\n            throw new Error('Every input or output endpoint must have parent specified');\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * @inheritdoc\n     */\n    public getCoordinates(): Coordinates\n    {\n        return {\n            x: this.parentCoordiantes.x + this._element.nativeElement.offsetLeft + this._element.nativeElement.offsetWidth/2,\n            y: this.parentCoordiantes.y + this._element.nativeElement.offsetTop + this._element.nativeElement.offsetHeight/2\n        };\n    }\n\n    /**\n     * Updates relation coordinates\n     */\n    public abstract updateRelation(): void;\n}","import {Component, ChangeDetectionStrategy, HostListener} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationNodeEndpointBase} from '../relationsNodeEndpointBase';\nimport {RelationsInput} from '../../interfaces';\nimport {NodeRelationPath} from '../../misc/nodeRelationPath';\nimport {MouseButton} from '../../misc/enums';\nimport {INVALIDATE_DROP} from '../../misc/constants';\n\n/**\n * Component used to display relation node input\n */\n@Component(\n{\n    selector: 'relation-node-input',\n    template: '',\n    styleUrls: ['relationsNodeInput.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationNodeInputSAComponent extends RelationNodeEndpointBase implements RelationsInput\n{\n    //######################### private properties #########################\n\n    /**\n     * Temporary relation path when updating existing relation\n     */\n    private _tempRelation: NodeRelationPath|null|undefined;\n\n    //######################### public methods - implementation of RelationsInput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public addRelation(relation: NodeRelationPath): boolean\n    {\n        if (this._relation)\n        {\n            //Same relation\n            if (this._relation.start?.x === relation.start?.x &&\n                this._relation.start?.y === relation.start?.y)\n            {\n                return false;\n            }\n\n            this._relation.destroy();\n        }\n\n        this._relation = relation;\n        \n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public endRelation(relation: NodeRelationPath): void\n    {\n        if(this.addRelation(relation))\n        {\n            this.updateRelation();\n        }\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * Updates node output relation\n     */\n    public updateRelation(): void\n    {\n        if (!this._relation)\n        {\n            return;\n        }\n\n        this._relation.end = this.getCoordinates();\n        this._relation.input = this;\n        this._relation.invalidateVisuals();\n    }\n\n    //######################### protected methods - host listeners #########################\n\n    /**\n     * Mouse enter event, marks input as active\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseenter', ['$event'])\n    protected _onMouseEnter(event: MouseEvent): void\n    {\n        if (event.buttons === MouseButton.LEFT)\n        {\n            this._relationManager.setActiveInput(this);\n        }\n    }\n\n    /**\n     * Mouse leave event, clears marked active input\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseleave', ['$event'])\n    protected _onMouseLeave(event: MouseEvent): void\n    {\n        if (event.buttons === MouseButton.LEFT)\n        {\n            this._relationManager.setActiveInput(null);\n        }\n    }\n\n    /**\n     * Mouse down event, starts dragging\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: MouseEvent): void\n    {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._tempRelation = this._relation;\n        this._relation = null;\n        this._isDragging = true;\n    }\n\n    /**\n     * Mouse move event on whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            if (this._tempRelation)\n            {\n                this._tempRelation.end =\n                {\n                    x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition?.x) * 1/this.zoomLevel,\n                    y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition?.y) * 1/this.zoomLevel\n                };\n    \n                this._tempRelation.invalidateVisuals();\n            }\n        }\n    }\n\n    /**\n     * Mouse up event on whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            this._tempRelation?.invalidateVisuals(INVALIDATE_DROP);\n        }\n    }\n}","import {Component, ChangeDetectionStrategy, HostListener, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationNodeEndpointBase} from '../relationsNodeEndpointBase';\nimport {RelationsOutput} from '../../interfaces';\nimport {NodeRelationPath} from '../../misc/nodeRelationPath';\nimport {INVALIDATE_DROP} from '../../misc/constants';\n\n/**\n * Component used to display relation node output\n */\n@Component(\n{\n    selector: 'relation-node-output',\n    template: '',\n    styleUrls: ['relationsNodeOutput.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationNodeOutputSAComponent extends RelationNodeEndpointBase implements RelationsOutput, OnDestroy\n{\n    //######################### protected properties #########################\n\n    /**\n     * Relations\n     */\n    protected _relations: NodeRelationPath[] = [];\n\n    //######################### public properties - implementation of RelationsOutput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get relations(): NodeRelationPath[]\n    {\n        return this._relations;\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._relations)\n        {\n            const relations = [...this._relations];\n\n            for(const relation of relations)\n            {\n                relation.destroy();\n            }\n        }\n    }\n\n    //######################### public methods - implementation of RelationsOutput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public startRelation(): NodeRelationPath\n    {\n        const relation = this._canvas.createRelation();\n\n        relation.start = this.getCoordinates();\n        relation.output = this;\n\n        relation.destroying.subscribe(() =>\n        {\n            const index = this._relations.indexOf(relation);\n\n            if(index >= 0)\n            {\n                this._relations.splice(index, 1);\n            }\n        });\n\n        this._relations.push(relation);\n\n        return relation;\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * Updates node output relations\n     */\n    public updateRelation(): void\n    {\n        if (!this._relations)\n        {\n            return;\n        }\n\n        for (const relation of this._relations)\n        {\n            relation.start = this.getCoordinates();\n            relation.invalidateVisuals();\n        }\n    }\n\n    //######################### protected methods - host listeners #########################\n\n    /**\n     * Mouse down event, creates new relation\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: DragEvent): void\n    {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n        this._isDragging = true;\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._relation = this.startRelation();\n    }\n\n    /**\n     * Mouse move event - whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: DragEvent): void\n    {\n        if (this._isDragging)\n        {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            if (this._relation)\n            {\n                this._relation.end =\n                {\n                    x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition.x) * 1/this.zoomLevel,\n                    y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition.y) * 1/this.zoomLevel\n                };\n\n                this._relation.invalidateVisuals();\n            }\n        }\n    }\n\n    /**\n     * Mouse up event - whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: DragEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            this._relation?.invalidateVisuals(INVALIDATE_DROP);\n        }\n    }\n}","import {Type} from '@angular/core';\n\nimport {RelationsComponent} from '../../interfaces';\n\n/**\n * Defines identification of relations component type\n */\ninterface ɵRelationsComponentTypeId\n{\n    /**\n     * Indication that this component is relations component\n     */\n    __ɵɵRelationsComponent: boolean;\n}\n\n/**\n * Tests object whether it is RelationsComponent type\n * @param obj - Object to be tested\n */\nexport function isRelationsComponentType(obj: unknown): obj is Type<RelationsComponent>\n{\n    const trgt = obj as ɵRelationsComponentTypeId;\n\n    return !!trgt.__ɵɵRelationsComponent;\n}\n\n/**\n * Marks component as pure relations component, cant be used on component that is also layout component!\n */\nexport function PureRelationsComponent(): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const trgt = target as unknown as ɵRelationsComponentTypeId;\n\n        trgt.__ɵɵRelationsComponent = true;\n\n        return target;\n    };\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in basic-components\n */\n@Injectable()\nexport class BasicComponentsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with basic-components\n        if(source.package != 'basic-components' && source.package != '@anglr/dynamic/basic-components')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            const dynamicItemModule = await import(`@anglr/dynamic/basic-components/${source.name}/type`);\n\n            return dynamicItemModule;\n        }\n        catch(e)\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n        }\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, resolvePromiseOr} from '@jscrpt/common';\n\nimport {DynamicModuleProvider, DynamicItemLoaderValidatorFn} from './dynamicItemLoader.interface';\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleDataExtractor} from '../dynamicModuleDataExtractor/dynamicModuleDataExtractor.service';\n\n/**\n * Service used for loading dynamic items\n */\nexport class DynamicItemLoader<TDynamicItemDef = any>\n{\n    //######################### protected cache #########################\n\n    /**\n     * Cached dynamic items definition\n     */\n    protected _cachedDynamicItems: Dictionary<TDynamicItemDef|null> = {};\n\n    //######################### constructors #########################\n    constructor(protected _providers: DynamicModuleProvider[],\n                protected _extractors: DynamicModuleDataExtractor<TDynamicItemDef>[],\n                protected _validatorFn: DynamicItemLoaderValidatorFn<TDynamicItemDef>,\n                protected _logger?: Logger,)\n    {\n        //providers is not an array\n        if(!Array.isArray(this._providers))\n        {\n            this._logger?.error('DynamicItemLoader: missing providers!');\n\n            this._providers = [];\n        }\n\n        //extractors is not an array\n        if(!Array.isArray(this._extractors))\n        {\n            this._logger?.error('DynamicItemLoader: missing extractors!');\n\n            this._extractors = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Loads dynamic item, or null if not found\n     * @param source - Definition of source for dynamic item\n     */\n    public async loadItem(source: DynamicItemSource): Promise<TDynamicItemDef|null>\n    {\n        let dynamicModule: DynamicModule|null = null;\n        const cacheId = `${source.package}-${source.name}`;\n\n        //try to get from cache\n        if(cacheId in this._cachedDynamicItems)\n        {\n            this._logger?.verbose('DynamicItemLoader: Loading from cache {@source}', {name: source.name, package: source.package});\n\n            return this._cachedDynamicItems[cacheId];\n        }\n\n        //loops all providers, return result from first that returns non null value\n        for(const provider of this._providers)\n        {\n            const asyncDynamicModule = provider.tryToGet(source);\n\n            if(asyncDynamicModule)\n            {\n                dynamicModule = await resolvePromiseOr(asyncDynamicModule);\n            }\n            else\n            {\n                dynamicModule = null;\n            }\n\n            if(dynamicModule)\n            {\n                break;\n            }\n        }\n\n        //no module found\n        if(!dynamicModule)\n        {\n            this._logger?.debug('DynamicItemLoader: Failed to get dynamic module {@source}', {name: source.name, package: source.package});\n\n            return null;\n        }\n\n        //loops all extractors, return result from first that returns non null value\n        for(const extractor of this._extractors)\n        {\n            const dynamicItem = await extractor.tryToExtract(dynamicModule);\n\n            if(dynamicItem)\n            {\n                this._cachedDynamicItems[cacheId] = this._validatorFn(dynamicItem) ? dynamicItem : null; \n\n                if(!this._cachedDynamicItems[cacheId])\n                {\n                    this._logger?.warn('DynamicItemLoader: Found dynamic item {@source} is not of requested type', {name: source.name, package: source.package});        \n                }\n\n                return this._cachedDynamicItems[cacheId];\n\n            }\n        }\n\n        this._logger?.debug('DynamicItemLoader: Failed to extract dynamic item {@source}', {name: source.name, package: source.package});\n\n        this._cachedDynamicItems[cacheId] = null;\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, extend, resolvePromiseOr, isEmptyObject} from '@jscrpt/common';\n\nimport {DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from './dynamicModuleDataExtractor.interface';\n\n/**\n * Extractor used for extracting dynamic data from dynamic module\n */\nexport class DynamicModuleDataExtractor<TData extends Dictionary<any> = any>\n{\n    //######################### constructor #########################\n\n    /**\n     * Creates new instance of DynamicModuleDataExtractor\n     * @param _extractorFunctions - Array of extractor functions used to create result\n     * @param _logger - Instance of logger used for logging, optional\n     */\n    constructor(protected _extractorFunctions: DynamicModuleDataExtractorFn[],\n                protected _logger?: Logger,)\n    {\n        //extractor functions is not an array\n        if(!Array.isArray(this._extractorFunctions))\n        {\n            this._logger?.error('DynamicModuleDataExtractor: missing extractor functions!');\n\n            this._extractorFunctions = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Tries to extract dynamic data from dynamic module\n     * @param module - Module containing dynamic data\n     */\n    public async tryToExtract(module: DynamicModule): Promise<TData|null>\n    {\n        const result: TData = {} as any;\n\n        for(const fn of this._extractorFunctions)\n        {\n            extend(true, result, await resolvePromiseOr(fn(module, this._logger)));\n        }\n\n        if(isEmptyObject(result))\n        {\n            return null;\n        }\n\n        return result;\n    }\n}","import {PromiseOr} from '../types/async';\n\n/**\n * Resolves `PromiseOr` value\n * @param value - Value to be solved\n */\nexport async function resolvePromiseOr<TResult>(value: PromiseOr<TResult>): Promise<TResult>\n{\n    if(value instanceof Promise)\n    {\n        return await value;\n    }\n\n    return value;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","RelationsSampleClickNodeSAComponent","RelationsNodeBase","metadataSet","t","selectors","standalone","features","decls","vars","consts","template","i0","ctx","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","styles","changeDetection","RelationsSampleClickRelationsEditorMetadata","constructor","metaInfo","name","description","group","nodeDefinition","freeze","this","_changeDetector","_element","_initialized","_isDragging","_lastMouseDownPosition","x","y","_lastMouseDownNodePosition","_nodePosition","_allOutputs","_inputs","_outputs","zoomLevel","_updatePosition","metadata","allOutputs","inputs","outputs","ngOnChanges","changes","nameof","nodeMetadata","coordinates","invalidateVisuals","detectChanges","_initEndpoints","_onMouseDown","event","clientX","clientY","stopImmediatePropagation","_onMouseMove","preventDefault","_updateRelations","_onMouseUp","updateInputs","_inputsChildren","forEach","input","updateOutputs","_outputsChildren","toArray","output","subscribe","updateRelation","nativeElement","style","left","top","viewQuery","RelationNodeEndpointBase","_relationManager","_canvas","parentCoordiantes","parentId","parent","ngOnInit","getCoordinates","offsetLeft","offsetWidth","offsetTop","offsetHeight","addRelation","relation","_relation","start","destroy","endRelation","end","_onMouseEnter","buttons","MouseButton","setActiveInput","_onMouseLeave","_tempRelation","INVALIDATE_DROP","hostBindings","CommonModule","_relations","relations","ngOnDestroy","startRelation","createRelation","destroying","index","indexOf","splice","push","isRelationsComponentType","obj","__ɵɵRelationsComponent","PureRelationsComponent","target","BasicComponentsDynamicModuleItemsProvider","_logger","tryToGet","source","package","debug","LOGGER","factory","DynamicItemLoader","_providers","_extractors","_validatorFn","_cachedDynamicItems","Array","isArray","error","loadItem","dynamicModule","cacheId","verbose","provider","asyncDynamicModule","resolvePromiseOr","extractor","dynamicItem","tryToExtract","warn","DynamicModuleDataExtractor","_extractorFunctions","result","fn","extend","isEmptyObject","value"],"sourceRoot":""}