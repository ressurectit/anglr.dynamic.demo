{"version":3,"file":"1618.chunk.2e0a2f20552c64225fe0.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/editor/editor.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.routes.ts","webpack://ng-universal-demo/./app/services/staticComponentsRegister/staticComponentsRegister.service.ts","webpack://ng-universal-demo/./app/pages/+relationsWithEditor/relationsWithEditor.module.ts","webpack://ng-universal-demo/../layout/src/types/textStyling.types.ts","webpack://ng-universal-demo/./app/services/demoData/demoData.service.ts","webpack://ng-universal-demo/../relations-editor/src/pipes/toRelationsDragData/toRelationsDragData.pipe.ts","webpack://ng-universal-demo/../relations-editor/src/components/nodesPalette/nodesPalette.component.html","webpack://ng-universal-demo/../relations-editor/src/components/nodesPalette/nodesPalette.component.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsEditor/relationsEditor.component.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsEditor/relationsEditor.component.html","webpack://ng-universal-demo/../relations-editor/src/modules/dynamicRelationsEditor.module.ts","webpack://ng-universal-demo/../relations/src/decorators/pureRelationsComponent/pureRelationsComponent.decorator.ts","webpack://ng-universal-demo/../relations/src/misc/providers.ts","webpack://ng-universal-demo/../relations/src/misc/utils.ts","webpack://ng-universal-demo/../relations/src/modules/dynamicRelations.module.ts","webpack://ng-universal-demo/../src/services/basicComponentsDynamicModuleItemsProvider/basicComponentsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../src/services/dynamicItemLoader/dynamicItemLoader.service.ts","webpack://ng-universal-demo/../src/services/dynamicModuleDataExtractor/dynamicModuleDataExtractor.service.ts","webpack://ng-universal-demo/../../../../router/src/decorators/componentRoute.decorator.ts","webpack://ng-universal-demo/../../../../src/modules/goBack/directives/goBack/goBack.directive.ts","webpack://ng-universal-demo/../../../../src/modules/goBack/modules/goBack.module.ts","webpack://ng-universal-demo/../../../../src/cdk/drag-drop/drag-drop-module.ts","webpack://ng-universal-demo/../../../../packages/common/src/pipes/keyvalue_pipe.ts","webpack://ng-universal-demo/../../../src/utils/async.ts"],"sourcesContent":["var map = {\n\t\"./button/type\": [\n\t\t38206,\n\t\t8206\n\t],\n\t\"./gridPanel/type\": [\n\t\t49,\n\t\t49\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t9918,\n\t\t9918\n\t],\n\t\"./sampleChange/type\": [\n\t\t89354,\n\t\t9354\n\t],\n\t\"./sampleSource/type\": [\n\t\t51133,\n\t\t1133\n\t],\n\t\"./stackPanel/type\": [\n\t\t14433,\n\t\t4433\n\t],\n\t\"./textBlock/type\": [\n\t\t2252,\n\t\t2252\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 84635;\nmodule.exports = webpackAsyncContext;","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {DemoData} from '../../../services/demoData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'editor-view',\n    templateUrl: 'editor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'editor'})\nexport class EditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected metadata: RelationsNodeMetadata[] = DemoData.relationsStaticWithEditorDemo;\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    protected save(): void\n    {\n        DemoData.relationsStaticWithEditorDemo = this._manager.getMetadata();\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-left-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"save()\">\n        <span>save</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"metadata\"></relations-editor>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsManager} from '@anglr/dynamic/relations';\n\nimport {DemoData} from '../../../services/demoData';\n\n/**\n * Page for displaying relations\n */\n@Component(\n{\n    selector: 'relations-view',\n    templateUrl: 'relations.component.html',\n    // styleUrls: ['relations.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\nexport class RelationsComponent\n{\n    //######################### constructor #########################\n    constructor(private _relationsManager: RelationsManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._relationsManager.setRelations(DemoData.relationsStaticWithEditorDemo);\n    }\n}","<div class=\"margin-bottom-big\">\n    <a routerLink=\"/relationsWithEditor/editor\">editor</a>\n</div>\n\n<div>\n    <div class=\"bold\">relations sample click</div>\n    <relations-sample-click></relations-sample-click>\n</div>\n\n<div>\n    <div class=\"bold\">relations result</div>\n    <relations-result></relations-result>\n</div>","import {EditorComponent} from './editor/editor.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    RelationsComponent,\n    EditorComponent,\n];","import {Injectable, Type} from '@angular/core';\nimport {StaticComponentsRegister as Register} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\n\n/**\n * Static components register for demo app\n */\n@Injectable()\nexport class StaticComponentsRegister extends Register\n{\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected getDefinedTypes(): Dictionary<Type<any>>\n    {\n        const result: Dictionary<Type<any>> = {};\n\n        result[RelationsResultSAComponent.relationsId] = RelationsResultSAComponent;\n        result[RelationsSampleClickSAComponent.relationsId] = RelationsSampleClickSAComponent;\n\n        return result;\n    }\n}","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {GoBackModule} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsModule} from '@anglr/dynamic/relations';\nimport {DynamicRelationsEditorModule} from '@anglr/dynamic/relations-editor';\n\nimport {components} from './relationsWithEditor.routes';\nimport {RelationsResultSAComponent, RelationsSampleClickSAComponent} from '../../components';\nimport {StaticComponentsRegister} from '../../services/staticComponentsRegister';\n\n/**\n * Module for relations with editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        RouterModule,\n        GoBackModule,\n        DynamicRelationsModule.withProviders(),\n        DynamicRelationsEditorModule.withStaticComponents(StaticComponentsRegister),\n        RelationsSampleClickSAComponent,\n        RelationsResultSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithEditorModule\n{\n}","/**\n * Available types of font weight\n */\nexport enum TextFontWeight\n{\n    /**\n     * Font weight light\n     */\n    Light = 200,\n\n    /**\n     * Font weight normal\n     */\n    Normal = 400,\n\n    /**\n     * Font weight semi-bold\n     */\n    SemiBold = 600,\n\n    /**\n     * Font weight bold\n     */\n    Bold = 700,\n}\n\n/**\n * Available types of font size units\n */\nexport enum StyleSizeUnit\n{\n    /**\n     * Style size unit is in pixels\n     */\n    px,\n\n    /**\n     * Style size unit is in points\n     */\n    pt,\n    \n    /**\n     * Style size unit is in em\n     */\n    em,\n}","import {ComponentStylingOptions, LayoutComponentMetadata, TextFontWeight} from '@anglr/dynamic/layout';\nimport {ButtonComponentOptions, GridPanelCellComponentOptions, GridPanelComponentOptions, StackPanelComponentOptions, StackPanelFlexExtensionOptions, TextBlockComponentOptions} from '@anglr/dynamic/basic-components';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\n/**\n * Class storing demo data\n */\nexport class DemoData\n{\n    public static demoLayout: LayoutComponentMetadata =\n    {\n        id: 'gridPanelTest',\n        package: 'basic-components',\n        name: 'gridPanel',\n        options: <GridPanelComponentOptions&ComponentStylingOptions>\n        {\n            columns:\n            [\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '2fr'\n                },\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '100px'\n                },\n            ],\n            rows:\n            [\n                {\n                    height: '300px'\n                },\n            ],\n            cells:\n            [\n                {\n                    id: 'celltest',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 2,\n                        gridColumnEnd: 3,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelTest',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions&ComponentStylingOptions>\n                            {\n                                padding:\n                                {\n                                    top: '20px'\n                                },\n                                children:\n                                [\n                                    {\n                                        id: 'textTest',\n                                        package: 'basic-components',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions&StackPanelFlexExtensionOptions>\n                                        {\n                                            text: 'toto je text',\n                                            margin:\n                                            {\n                                                top: '10px',\n                                                bottom: '6px',\n                                                left: '12px',\n                                                right: '14pt'\n                                            },\n                                            padding:\n                                            {\n                                                top: '8px',\n                                                bottom: '8px',\n                                                left: '12px',\n                                                right: '12px'\n                                            },\n                                            textStyling:\n                                            {\n                                                fontSize: '20px'\n                                            },\n                                            flex: '1'\n                                        }\n                                    },\n                                    {\n                                        id: 'text2Test',\n                                        package: 'basic-components',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions>\n                                        {\n                                            text: 'druhý riadok je toto',\n                                            textStyling:\n                                            {\n                                                fontWeight: TextFontWeight.Bold\n                                            }\n                                        }\n                                    },\n                                    {\n                                        id: 'button-test',\n                                        package: 'basic-components',\n                                        name: 'button',\n                                        options: <ButtonComponentOptions>\n                                        {\n                                            text: 'test btn',\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'anotherCell',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 3,\n                        gridColumnEnd: 4,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            package: 'basic-components',\n                            id: 'textJeTo',\n                            name: 'textBlock',\n                            options: <TextBlockComponentOptions>\n                            {\n                                text: 'nový text',\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'gridCellxxx',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 4,\n                        gridColumnEnd: 5,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelxxx',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions>\n                            {\n                                horizontal: true,\n                                children: []\n                            }\n                        }\n                    }\n                },\n            ]\n        }\n    };\n\n    public static relationsDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes2',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes2',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 40\n                },\n                options: null\n            }\n        },\n    ];\n\n    public static relationsStaticDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-sample-click',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-sample-click',\n            package: 'static-components',\n            name: 'relations-sample-click',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 80\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-result',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-result',\n            package: 'static-components',\n            name: 'relations-result',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 630,\n                    y: 60\n                },\n                options: null\n            }\n        }\n    ];\n\n    public static relationsStaticWithEditorDemo: RelationsNodeMetadata[] =\n    [\n        {\n            id: 'sample-source',\n            package: 'basic-components',\n            name: 'sampleSource',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-sample-click',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 30,\n                    y: 60\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-sample-click',\n            package: 'static-components',\n            name: 'relations-sample-click',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'sample-changes',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 230,\n                    y: 80\n                },\n                options: null\n            }\n        },\n        {\n            id: 'sample-changes',\n            package: 'basic-components',\n            name: 'sampleChange',\n            relationsOptions: null,\n            outputs:\n            [\n                {\n                    outputName: 'vystup',\n                    inputs:\n                    [\n                        {\n                            id: 'relations-result',\n                            inputName: 'vstup'\n                        }\n                    ]\n                }\n            ],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 430,\n                    y: 100\n                },\n                options: null\n            }\n        },\n        {\n            id: 'relations-result',\n            package: 'static-components',\n            name: 'relations-result',\n            relationsOptions: null,\n            outputs: [],\n            nodeMetadata:\n            {\n                coordinates: \n                {\n                    x: 630,\n                    y: 60\n                },\n                options: null\n            }\n        }\n    ];\n}","import {Pipe, PipeTransform} from '@angular/core';\nimport {extend} from '@jscrpt/common';\n\nimport type {NodesPaletteItem} from '../../components';\nimport {RelationsNodeDragData} from '../../interfaces';\n\n/**\n * Transforms NodesPaletteItem item to RelationsNodeDragData\n */\n@Pipe({name: 'toRelationsDragData', standalone: true})\nexport class ToRelationsDragDataSAPipe implements PipeTransform\n{\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Transforms NodesPaletteItem item to RelationsNodeDragData\n     * @param value - Palette item to be transformed\n     * @param id - Unique id to be used for new node\n     */\n    public transform(value: NodesPaletteItem, id: string): RelationsNodeDragData\n    {\n        const newId = `${value.itemSource.name}-${id}`;\n\n        return {\n            metadata:\n            {\n                id: newId,\n                displayName: newId,\n                package: value.itemSource.package,\n                name: value.itemSource.name,\n                relationsOptions: extend(true, {}, value.metadata.metaInfo?.defaultOptions),\n                outputs: [],\n                nodeMetadata:\n                {\n                    coordinates:\n                    {\n                        x: 0,\n                        y: 0\n                    },\n                    options: null,\n                }\n            }\n        };\n    }\n}","<div class=\"flex-column\">\n    <ng-container *ngFor=\"let groupKeyValue of _groupedItems | keyvalue\">\n        <div class=\"text-spread text-small-caps margin-left-extra-small margin-horizontal-small bold\">{{groupKeyValue.key}}&nbsp;</div>\n\n        <div *ngFor=\"let item of groupKeyValue.value\"\n             cdkDropList\n             cdkDropListSortingDisabled\n             [cdkDropListConnectedTo]=\"canvasDropList\"\n             class=\"palette-droplist\">\n            <div class=\"editor-component mat-elevation-z2\"\n                 cdkDrag\n                 [cdkDragData]=\"item | toRelationsDragData: _newCompnentId\"\n                 (cdkDragDropped)=\"_generateNewId()\">\n                 <!-- (cdkDragEnded)=\"_onDragEnded(groupKeyValue.key)\"\n                 (cdkDragStarted)=\"_onDragStarted($event, groupKeyValue.key, item)\"> -->\n                <!-- <layout-editor-drag-placeholder class=\"mat-elevation-z6\" *cdkDragPlaceholder></layout-editor-drag-placeholder>\n                <layout-editor-drag-preview class=\"mat-elevation-z4\" *cdkDragPreview [editorMetadata]=\"item.metadata\" [layoutMetadata]=\"(item | toLayoutDragData: _newCompnentId).metadata\"></layout-editor-drag-preview> -->\n                <div class=\"editor-component-name\">{{item.metadata.singleton ? item.itemSource.name : item.metadata.metaInfo?.name ?? item.itemSource.name}}</div>\n                <div class=\"editor-component-description\" *ngIf=\"item.metadata.metaInfo?.description\">{{item.metadata.metaInfo?.description}}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, Inject, Optional, OnDestroy, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CdkDropList, DragDropModule} from '@angular/cdk/drag-drop';\nimport {DynamicItemLoader, DynamicItemSource} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {Dictionary, generateId} from '@jscrpt/common';\nimport {Subscription} from 'rxjs';\n\nimport {NodesPaletteItem} from './nodesPalette.interface';\nimport {RELATIONS_MODULE_TYPES_LOADER, RELATIONS_NODES_LOADER} from '../../misc/tokens';\nimport {RelationsModuleTypes, RelationsNodeDef} from '../../misc/types';\nimport {RelationsNodeManager} from '../../services';\nimport {ToRelationsDragDataSAPipe} from '../../pipes';\n\n//TODO: add new provider for refresh required of palette items\n\n/**\n * Component displaying available nodes palette\n */\n@Component(\n{\n    selector: 'nodes-palette',\n    templateUrl: 'nodesPalette.component.html',\n    styleUrls: ['nodesPalette.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        DragDropModule,\n        // LayoutEditorDragPreviewSAComponent,\n        // LayoutEditorDragPlaceholderSAComponent,\n        ToRelationsDragDataSAPipe,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NodesPaletteSAComponent implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Array of all available items in palette\n     */\n    protected _allItems: NodesPaletteItem[] = [];\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Available items grouped by group name\n     */\n    protected _groupedItems: Dictionary<(NodesPaletteItem & {temp?: boolean})[]> = {};\n\n    /**\n     * Generated component id, that is used for new component\n     */\n    protected _newCompnentId: string = generateId(16);\n\n    /**\n     * Indication whether drag element is over palette\n     */\n    protected _isDragOverPalette: boolean = false;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Instance of canvas drop list\n     */\n    @Input()\n    public canvasDropList!: CdkDropList;\n\n    //######################### constructor #########################\n    constructor(@Inject(RELATIONS_MODULE_TYPES_LOADER) protected _moduleTypesLoader: DynamicItemLoader<RelationsModuleTypes>,\n                @Inject(RELATIONS_NODES_LOADER) protected _nodesLoader: DynamicItemLoader<RelationsNodeDef>,\n                protected _changeDetector: ChangeDetectorRef,\n                protected _metadataManager: RelationsNodeManager,\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        // this._initSubscriptions.add(this._metadataManager.layoutChange.subscribe(() => this._getDesignerDropLists()));\n\n        // this._getDesignerDropLists();\n\n        //TODO make it dynamic\n        for (const packageName of ['basic-components', 'material-components', 'static-components', 'layout-components'])\n        {\n            const types = (await this._moduleTypesLoader.loadItem({package: packageName, name: 'types'}))?.data ?? [];\n\n            for(const type of types)\n            {\n                const itemSource: DynamicItemSource = {package: packageName, name: type};\n                const metadata = await this._nodesLoader.loadItem(itemSource);\n    \n                if(!metadata)\n                {\n                    this._logger?.warn('NodesPaletteSAComponent: Failed to obtain layout editor metadata {@source}', itemSource);\n                }\n                else\n                {\n                    this._allItems.push(\n                    {\n                        itemSource,\n                        metadata\n                    });\n                }\n            }\n        }        \n\n        this._groupedItems[''] = [];\n\n        //group items\n        for(const item of this._allItems)\n        {\n            const group = item.metadata.metaInfo?.group ?? '';\n            this._groupedItems[group] ??= [];\n            this._groupedItems[group].push(item);\n        }\n\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Generates new component id\n     */\n    protected _generateNewId(): void\n    {\n        this._newCompnentId = generateId(16);\n    }\n\n    // /**\n    //  * Removes temporary palette item when drag ends\n    //  * @param key Items group key\n    //  */\n    // protected _onDragEnded(key: string): void\n    // {\n    //     if (!isPresent(key))\n    //     {\n    //         return;\n    //     }\n\n    //     this._groupedItems[key] = [...this._groupedItems[key].filter(datum => !datum.temp)];\n    // }\n\n    // /**\n    //  * Generates temporary palette item when drag starts\n    //  * @param event Drag start event\n    //  * @param key Items group key\n    //  * @param item Palette item\n    //  */\n    // protected _onDragStarted(event: CdkDragStart<LayoutComponentDragData>, key: string, item: NodesPaletteItem): void\n    // {\n    //     const currentIdx = event.source.dropContainer.getSortedItems().findIndex((datum: CdkDrag<LayoutComponentDragData>) => datum.data?.metadata?.id === event.source.data?.metadata?.id);\n\n    //     if (isPresent(currentIdx))\n    //     {\n    //         this._groupedItems[key]?.splice(currentIdx + 1, 0, {\n    //             ...item,\n    //             temp: true\n    //         });\n    //     }\n    // }\n}","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport {CdkDragDrop, DragDropModule} from '@angular/cdk/drag-drop';\nimport {HostDisplayFlexStyle} from '@anglr/common';\n\nimport {NodesPaletteSAComponent} from '../nodesPalette/nodesPalette.component';\nimport {RelationsCanvasSAComponent} from '../relationsCanvas/relationsCanvas.component';\nimport {RelationsNodeDragData, RelationsNodeMetadata} from '../../interfaces';\n\n/**\n * Component that represents relations editor with palette and canvas\n */\n@Component(\n{\n    selector: 'relations-editor',\n    templateUrl: 'relationsEditor.component.html',\n    // styleUrls: ['relationsEditor.component.css'],\n    styles: [HostDisplayFlexStyle],\n    standalone: true,\n    imports:\n    [\n        NodesPaletteSAComponent,\n        RelationsCanvasSAComponent,\n        DragDropModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationsEditorSAComponent\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Metadata used for rendering relations in canvas\n     */\n    @Input()\n    public metadata: RelationsNodeMetadata[] = [];\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new node into canvas and metadata\n     * @param event - Drop event that occured\n     */\n    protected addNode(event: CdkDragDrop<RelationsNodeDragData, RelationsNodeDragData, RelationsNodeDragData>): void\n    {\n        //TODO: apply transform of canvas\n\n        const canvasRect = event.container.element.nativeElement.getBoundingClientRect();\n\n        if(event.item.data.metadata.nodeMetadata?.coordinates)\n        {\n            event.item.data.metadata.nodeMetadata.coordinates.x = event.dropPoint.x - canvasRect.x;\n            event.item.data.metadata.nodeMetadata.coordinates.y = event.dropPoint.y - canvasRect.y;\n        }\n\n        this.metadata =\n        [\n            ...this.metadata,\n            event.item.data.metadata,\n        ];\n    }\n}","<div class=\"flex-row flex-1\">\n    <nodes-palette [canvasDropList]=\"dropList\" style=\"width: 250px;\"></nodes-palette>\n    <relations-canvas #dropList=\"cdkDropList\" [nodeDefinitions]=\"metadata\" class=\"flex-1\" cdkDropList (cdkDropListDropped)=\"addNode($event)\"></relations-canvas>\n</div>","import {ModuleWithProviders, NgModule, Type} from '@angular/core';\n\nimport {RelationsEditorSAComponent} from '../components';\nimport {provideRelationsEditor, provideRelationsEditorWithStatic} from '../misc/utils';\nimport {StaticComponentsRegister} from '../services';\n\n/**\n * Module contains components, directives, pipes for dynamic relations editor rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        RelationsEditorSAComponent,\n    ],\n    exports:\n    [\n        RelationsEditorSAComponent,\n    ],\n})\nexport class DynamicRelationsEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsEditorModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicRelationsEditorModule,\n            providers:\n            [\n                provideRelationsEditor(),\n            ]\n        };\n    }\n\n    /**\n     * Creates DynamicRelationsEditorModule extended with providers for static components\n     * @param staticRegister - Type that represents implementation of static components register\n     */\n    public static withStaticComponents(staticRegister: Type<StaticComponentsRegister>): ModuleWithProviders<DynamicRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicRelationsEditorModule,\n            providers:\n            [\n                provideRelationsEditorWithStatic(staticRegister),\n            ]\n        };\n    }\n}","import {Type} from '@angular/core';\n\nimport {RelationsComponent} from '../../interfaces';\n\n/**\n * Defines identification of relations component type\n */\ninterface ɵRelationsComponentTypeId\n{\n    /**\n     * Indication that this component is relations component\n     */\n    __ɵɵRelationsComponent: boolean;\n}\n\n/**\n * Tests object whether it is RelationsComponent type\n * @param obj - Object to be tested\n */\nexport function isRelationsComponentType(obj: unknown): obj is Type<RelationsComponent>\n{\n    const trgt = obj as ɵRelationsComponentTypeId;\n\n    return !!trgt.__ɵɵRelationsComponent;\n}\n\n/**\n * Marks component as pure relations component, cant be used on component that is also layout component!\n */\nexport function PureRelationsComponent(): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const trgt = target as unknown as ɵRelationsComponentTypeId;\n\n        trgt.__ɵɵRelationsComponent = true;\n\n        return target;\n    };\n}","import {ClassProvider, FactoryProvider, inject, Optional} from '@angular/core';\nimport {BasicComponentsDynamicModuleItemsProvider, DynamicItemLoader, DynamicModuleDataExtractor} from '@anglr/dynamic';\nimport {LOGGER, Logger} from '@anglr/common';\n\nimport {RELATIONS_COMPONENTS_LOADER, RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS, RELATIONS_COMPONENTS_MODULE_PROVIDERS} from './tokens';\nimport {relationsExportExtractor} from './extractors';\nimport {isRelationsComponentDef} from './utils';\n\n/**\n * Provider for basic components package relations components provider\n */\nexport const BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: BasicComponentsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for default relations components extractor\n */\nexport const DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR: FactoryProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS,\n    useFactory: (logger?: Logger) =>\n    {\n        return new DynamicModuleDataExtractor([\n                                                  relationsExportExtractor,\n                                              ],\n                                              logger);\n    },\n    deps: [[new Optional(), LOGGER]],\n    multi: true\n};\n\n/**\n * Provider for relations components loader\n */\nexport const RELATIONS_COMPONENTS_LOADER_PROVIDER: FactoryProvider =\n{\n    provide: RELATIONS_COMPONENTS_LOADER,\n    useFactory: () => new DynamicItemLoader(inject(RELATIONS_COMPONENTS_MODULE_PROVIDERS),\n                                            inject(RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS),\n                                            isRelationsComponentDef,\n                                            inject(LOGGER, {optional: true}) ?? undefined)\n};","import {Provider} from '@angular/core';\nimport {DynamicItemLoaderValidatorFn} from '@anglr/dynamic';\nimport {isBlank, isType} from '@jscrpt/common';\n\nimport {RelationsComponentDef} from './types';\nimport {BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER, DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR, RELATIONS_COMPONENTS_LOADER_PROVIDER} from './providers';\nimport {RelationsComponentManager, RelationsManager, RelationsProcessor} from '../services';\n\n/**\n * Checks whether data is relations component def\n * @param data - Data to be checked\n */\nexport const isRelationsComponentDef: DynamicItemLoaderValidatorFn<RelationsComponentDef> = function(data): data is RelationsComponentDef\n{\n    //type is required and must be type\n    if(isBlank(data?.data) || !isType(data.data))\n    {\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Default providers for relations subpackage\n */\nexport function provideRelations(): Provider[]\n{\n    return [\n        BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER,\n        DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR,\n        RELATIONS_COMPONENTS_LOADER_PROVIDER,\n        RelationsComponentManager,\n        RelationsManager,\n        RelationsProcessor,\n    ];\n}","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {provideRelations} from '../misc/utils';\n\n/**\n * Module contains components, directives, pipes for dynamic relations rendering\n */\n@NgModule(\n{\n})\nexport class DynamicRelationsModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsModule extended with providers\n     */\n    public static withProviders(): ModuleWithProviders<DynamicRelationsModule>\n    {\n        return {\n            ngModule: DynamicRelationsModule,\n            providers:\n            [\n                provideRelations(),\n            ]\n        };\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\n\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleProvider} from '../dynamicItemLoader/dynamicItemLoader.interface';\n\n/**\n * Dynamic module items provider for built-in basic-components\n */\n@Injectable()\nexport class BasicComponentsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        //only works with basic-components\n        if(source.package != 'basic-components' && source.package != '@anglr/dynamic/basic-components')\n        {\n            return null;\n        }\n\n        try\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n            const dynamicItemModule = await import(`@anglr/dynamic/basic-components/${source.name}/type`);\n\n            return dynamicItemModule;\n        }\n        catch(e)\n        {\n            this._logger?.debug('BasicComponentsDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n        }\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, resolvePromiseOr} from '@jscrpt/common';\n\nimport {DynamicModuleProvider, DynamicItemLoaderValidatorFn} from './dynamicItemLoader.interface';\nimport {DynamicModule, DynamicItemSource} from '../../interfaces';\nimport {DynamicModuleDataExtractor} from '../dynamicModuleDataExtractor/dynamicModuleDataExtractor.service';\n\n/**\n * Service used for loading dynamic items\n */\nexport class DynamicItemLoader<TDynamicItemDef = any>\n{\n    //######################### protected cache #########################\n\n    /**\n     * Cached dynamic items definition\n     */\n    protected _cachedDynamicItems: Dictionary<TDynamicItemDef|null> = {};\n\n    //######################### constructors #########################\n    constructor(protected _providers: DynamicModuleProvider[],\n                protected _extractors: DynamicModuleDataExtractor<TDynamicItemDef>[],\n                protected _validatorFn: DynamicItemLoaderValidatorFn<TDynamicItemDef>,\n                protected _logger?: Logger,)\n    {\n        //providers is not an array\n        if(!Array.isArray(this._providers))\n        {\n            this._logger?.error('DynamicItemLoader: missing providers!');\n\n            this._providers = [];\n        }\n\n        //extractors is not an array\n        if(!Array.isArray(this._extractors))\n        {\n            this._logger?.error('DynamicItemLoader: missing extractors!');\n\n            this._extractors = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Loads dynamic item, or null if not found\n     * @param source - Definition of source for dynamic item\n     */\n    public async loadItem(source: DynamicItemSource): Promise<TDynamicItemDef|null>\n    {\n        let dynamicModule: DynamicModule|null = null;\n        const cacheId = `${source.package}-${source.name}`;\n\n        //try to get from cache\n        if(cacheId in this._cachedDynamicItems)\n        {\n            this._logger?.verbose('DynamicItemLoader: Loading from cache {@source}', {name: source.name, package: source.package});\n\n            return this._cachedDynamicItems[cacheId];\n        }\n\n        //loops all providers, return result from first that returns non null value\n        for(const provider of this._providers)\n        {\n            const asyncDynamicModule = provider.tryToGet(source);\n\n            if(asyncDynamicModule)\n            {\n                dynamicModule = await resolvePromiseOr(asyncDynamicModule);\n            }\n            else\n            {\n                dynamicModule = null;\n            }\n\n            if(dynamicModule)\n            {\n                break;\n            }\n        }\n\n        //no module found\n        if(!dynamicModule)\n        {\n            this._logger?.debug('DynamicItemLoader: Failed to get dynamic module {@source}', {name: source.name, package: source.package});\n\n            return null;\n        }\n\n        //loops all extractors, return result from first that returns non null value\n        for(const extractor of this._extractors)\n        {\n            const dynamicItem = await extractor.tryToExtract(dynamicModule);\n\n            if(dynamicItem)\n            {\n                this._cachedDynamicItems[cacheId] = this._validatorFn(dynamicItem) ? dynamicItem : null; \n\n                if(!this._cachedDynamicItems[cacheId])\n                {\n                    this._logger?.warn('DynamicItemLoader: Found dynamic item {@source} is not of requested type', {name: source.name, package: source.package});        \n                }\n\n                return this._cachedDynamicItems[cacheId];\n\n            }\n        }\n\n        this._logger?.debug('DynamicItemLoader: Failed to extract dynamic item {@source}', {name: source.name, package: source.package});\n\n        this._cachedDynamicItems[cacheId] = null;\n\n        return null;\n    }\n}","import {Logger} from '@anglr/common';\nimport {Dictionary, extend, resolvePromiseOr, isEmptyObject} from '@jscrpt/common';\n\nimport {DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from './dynamicModuleDataExtractor.interface';\n\n/**\n * Extractor used for extracting dynamic data from dynamic module\n */\nexport class DynamicModuleDataExtractor<TData extends Dictionary<any> = any>\n{\n    //######################### constructor #########################\n\n    /**\n     * Creates new instance of DynamicModuleDataExtractor\n     * @param _extractorFunctions - Array of extractor functions used to create result\n     * @param _logger - Instance of logger used for logging, optional\n     */\n    constructor(protected _extractorFunctions: DynamicModuleDataExtractorFn[],\n                protected _logger?: Logger,)\n    {\n        //extractor functions is not an array\n        if(!Array.isArray(this._extractorFunctions))\n        {\n            this._logger?.error('DynamicModuleDataExtractor: missing extractor functions!');\n\n            this._extractorFunctions = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Tries to extract dynamic data from dynamic module\n     * @param module - Module containing dynamic data\n     */\n    public async tryToExtract(module: DynamicModule): Promise<TData|null>\n    {\n        const result: TData = {} as any;\n\n        for(const fn of this._extractorFunctions)\n        {\n            extend(true, result, await resolvePromiseOr(fn(module, this._logger)));\n        }\n\n        if(isEmptyObject(result))\n        {\n            return null;\n        }\n\n        return result;\n    }\n}","import {Route} from '@angular/router';\nimport {isBlank} from '@jscrpt/common';\n\n/**\n * Extended type with route definition\n */\nexport interface RouteDecoratedComponent\n{\n    /**\n     * Definition of routes that are assigned to this type\n     */\n    routeValues: Route[];\n}\n\n/**\n * Type that represents options that can be passed to control represented by model property\n */\nexport type ComponentRouteDefinition = Omit<Route, keyof Pick<Route, 'component'>>;\n\n/**\n * Defines route for component on which is this decorator applied\n * @param route - route Definition of route, does not require component to be set\n */\nexport function ComponentRoute(route: ComponentRouteDefinition): ClassDecorator\n{\n\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const rt = route as Route;\n\n        rt.component = <any>target;\n        \n        const routeDecoratedComponent: RouteDecoratedComponent = <any>target;\n\n        if(isBlank(routeDecoratedComponent.routeValues))\n        {\n            Object.defineProperty(target, \n                                  'routeValues', \n                                  {\n                                      enumerable: true,\n                                      configurable: false,\n                                      writable: false,\n                                      value: []\n                                  });\n        }\n\n        routeDecoratedComponent.routeValues.push(rt);\n        \n        return target;\n    };\n}","import {Directive, HostListener} from '@angular/core';\nimport {Location} from '@angular/common';\n\n/**\n * Directive that performs browser back button action on click\n */\n@Directive(\n{\n    selector: '[goBack]'\n})\nexport class GoBackDirective\n{\n    //######################### constructor #########################\n    constructor(private _location: Location)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Navigates back in browser\n     * @param event - Mouse event that occured\n     */\n    @HostListener('click', ['$event'])\n    public goBack(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._location.back();\n    }\n}","import {NgModule} from '@angular/core';\n\nimport {GoBackDirective} from '../directives';\n\n/**\n * Module for GoBack directive\n */\n@NgModule(\n{\n    declarations:\n    [\n        GoBackDirective\n    ],\n    exports:\n    [\n        GoBackDirective\n    ]\n})\nexport class GoBackModule\n{\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {CdkDropList} from './directives/drop-list';\nimport {CdkDropListGroup} from './directives/drop-list-group';\nimport {CdkDrag} from './directives/drag';\nimport {CdkDragHandle} from './directives/drag-handle';\nimport {CdkDragPreview} from './directives/drag-preview';\nimport {CdkDragPlaceholder} from './directives/drag-placeholder';\nimport {DragDrop} from './drag-drop';\n\n@NgModule({\n  declarations: [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  exports: [\n    CdkScrollableModule,\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  providers: [DragDrop],\n})\nexport class DragDropModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Pipe, PipeTransform} from '@angular/core';\n\nfunction makeKeyValuePair<K, V>(key: K, value: V): KeyValue<K, V> {\n  return {key: key, value: value};\n}\n\n/**\n * A key value pair.\n * Usually used to represent the key value pairs from a Map or Object.\n *\n * @publicApi\n */\nexport interface KeyValue<K, V> {\n  key: K;\n  value: V;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this\n * keyvalue pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\n@Pipe({\n  name: 'keyvalue',\n  pure: false,\n  standalone: true,\n})\nexport class KeyValuePipe implements PipeTransform {\n  constructor(private readonly differs: KeyValueDiffers) {}\n\n  private differ!: KeyValueDiffer<any, any>;\n  private keyValues: Array<KeyValue<any, any>> = [];\n  private compareFn: (a: KeyValue<any, any>, b: KeyValue<any, any>) => number = defaultComparator;\n\n  /*\n   * NOTE: when the `input` value is a simple Record<K, V> object, the keys are extracted with\n   * Object.keys(). This means that even if the `input` type is Record<number, V> the keys are\n   * compared/returned as `string`s.\n   */\n  transform<K, V>(\n      input: ReadonlyMap<K, V>,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>;\n  transform<K extends number, V>(\n      input: Record<K, V>, compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>;\n  transform<K extends string, V>(\n      input: Record<K, V>|ReadonlyMap<K, V>,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>;\n  transform(\n      input: null|undefined,\n      compareFn?: (a: KeyValue<unknown, unknown>, b: KeyValue<unknown, unknown>) => number): null;\n  transform<K, V>(\n      input: ReadonlyMap<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>|null;\n  transform<K extends number, V>(\n      input: Record<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<string, V>, b: KeyValue<string, V>) => number):\n      Array<KeyValue<string, V>>|null;\n  transform<K extends string, V>(\n      input: Record<K, V>|ReadonlyMap<K, V>|null|undefined,\n      compareFn?: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number): Array<KeyValue<K, V>>|null;\n  transform<K, V>(\n      input: undefined|null|{[key: string]: V, [key: number]: V}|ReadonlyMap<K, V>,\n      compareFn: (a: KeyValue<K, V>, b: KeyValue<K, V>) => number = defaultComparator):\n      Array<KeyValue<K, V>>|null {\n    if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n      return null;\n    }\n\n    if (!this.differ) {\n      // make a differ for whatever type we've been passed in\n      this.differ = this.differs.find(input).create();\n    }\n\n    const differChanges: KeyValueChanges<K, V>|null = this.differ.diff(input as any);\n    const compareFnChanged = compareFn !== this.compareFn;\n\n    if (differChanges) {\n      this.keyValues = [];\n      differChanges.forEachItem((r: KeyValueChangeRecord<K, V>) => {\n        this.keyValues.push(makeKeyValuePair(r.key, r.currentValue!));\n      });\n    }\n    if (differChanges || compareFnChanged) {\n      this.keyValues.sort(compareFn);\n      this.compareFn = compareFn;\n    }\n    return this.keyValues;\n  }\n}\n\nexport function defaultComparator<K, V>(\n    keyValueA: KeyValue<K, V>, keyValueB: KeyValue<K, V>): number {\n  const a = keyValueA.key;\n  const b = keyValueB.key;\n  // if same exit with 0;\n  if (a === b) return 0;\n  // make sure that undefined are at the end of the sort.\n  if (a === undefined) return 1;\n  if (b === undefined) return -1;\n  // make sure that nulls are at the end of the sort.\n  if (a === null) return 1;\n  if (b === null) return -1;\n  if (typeof a == 'string' && typeof b == 'string') {\n    return a < b ? -1 : 1;\n  }\n  if (typeof a == 'number' && typeof b == 'number') {\n    return a - b;\n  }\n  if (typeof a == 'boolean' && typeof b == 'boolean') {\n    return a < b ? -1 : 1;\n  }\n  // `a` and `b` are of different types. Compare their string values.\n  const aString = String(a);\n  const bString = String(b);\n  return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n","import {PromiseOr} from '../types/async';\n\n/**\n * Resolves `PromiseOr` value\n * @param value - Value to be solved\n */\nexport async function resolvePromiseOr<TResult>(value: PromiseOr<TResult>): Promise<TResult>\n{\n    if(value instanceof Promise)\n    {\n        return await value;\n    }\n\n    return value;\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","EditorComponent","constructor","_manager","metadata","DemoData","save","this","getMetadata","i0","selectors","decls","vars","consts","template","ctx","ComponentRoute","path","RelationsNodeManager","RelationsComponent","_relationsManager","ngOnInit","setRelations","RelationsManager","components","StaticComponentsRegister","Register","getDefinedTypes","result","RelationsResultSAComponent","RelationsSampleClickSAComponent","t","factory","RelationsWithEditorModule","RouterModule","GoBackModule","DynamicRelationsModule","DynamicRelationsEditorModule","ModuleRoutes","TextFontWeight","StyleSizeUnit","package","name","options","columns","width","rows","height","cells","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","component","padding","top","children","text","margin","bottom","left","right","textStyling","fontSize","flex","fontWeight","Bold","horizontal","relationsOptions","outputs","outputName","inputs","inputName","nodeMetadata","coordinates","x","y","ToRelationsDragDataSAPipe","transform","value","newId","itemSource","displayName","extend","metaInfo","defaultOptions","pure","standalone","NodesPaletteSAComponent","_moduleTypesLoader","_nodesLoader","_changeDetector","_metadataManager","_logger","_initSubscriptions","Subscription","_allItems","_groupedItems","_newCompnentId","generateId","_isDragOverPalette","packageName","types","loadItem","data","type","push","warn","item","group","_a","detectChanges","ngOnDestroy","unsubscribe","_generateNewId","RELATIONS_MODULE_TYPES_LOADER","RELATIONS_NODES_LOADER","LOGGER","canvasDropList","features","CommonModule","i2","DragDropModule","i3","styles","changeDetection","RelationsEditorSAComponent","addNode","event","canvasRect","container","element","nativeElement","getBoundingClientRect","dropPoint","RelationsCanvasSAComponent","i1","ngModule","providers","provideRelationsEditor","staticRegister","provideRelationsEditorWithStatic","isRelationsComponentType","obj","__ɵɵRelationsComponent","PureRelationsComponent","target","BASIC_COMPONENTS_RELATIONS_COMPONENTS_PROVIDER","provide","RELATIONS_COMPONENTS_MODULE_PROVIDERS","useClass","BasicComponentsDynamicModuleItemsProvider","multi","DEFAULT_RELATIONS_COMPONENTS_EXTRACTOR","RELATIONS_COMPONENTS_MODULE_DATA_EXTRACTORS","useFactory","logger","DynamicModuleDataExtractor","relationsExportExtractor","deps","Optional","RELATIONS_COMPONENTS_LOADER_PROVIDER","RELATIONS_COMPONENTS_LOADER","DynamicItemLoader","inject","isRelationsComponentDef","optional","undefined","isBlank","isType","RelationsComponentManager","RelationsProcessor","tryToGet","source","debug","_providers","_extractors","_validatorFn","_cachedDynamicItems","Array","isArray","error","dynamicModule","cacheId","verbose","provider","asyncDynamicModule","resolvePromiseOr","extractor","dynamicItem","tryToExtract","_extractorFunctions","fn","isEmptyObject","route","rt","routeDecoratedComponent","routeValues","defineProperty","enumerable","configurable","writable","GoBackDirective","_location","goBack","preventDefault","stopPropagation","back","DragDrop","CdkScrollableModule","KeyValuePipe","differs","keyValues","compareFn","defaultComparator","input","Map","differ","find","create","differChanges","diff","compareFnChanged","forEachItem","r","key","currentValue","sort","keyValueA","keyValueB","a","b","aString","String","bString"],"sourceRoot":""}