{"version":3,"file":"463.chunk.6c4f11b8706cef5447d5.js","mappings":"yLAKO,MAAMA,EAAmB,I,SAAIC,GAAc,MAAO,OAAOC,GAErDA,EAAOC,YAAYC,YAAc,K,eCCtC,MAAOC,EAeTC,YAAYC,GAHL,KAAAC,MAA+B,GAMlCC,EAAAA,GAAAA,KAAqBC,KAArBD,CAA2BF,EAC9B,ECfC,MAAOI,EAsDTL,cA/CO,KAAAM,SACP,CACIC,KAAM,QACNC,YAAa,0CACbC,MAAO,SACPC,gBACA,CACIC,mBACA,CACI,CACIC,UAAWb,EACXc,mBACA,EACIC,EAAAA,EAAAA,GAA0C,QAASpB,QAUhE,KAAAqB,cAAwF,CAACC,EAAUC,KAEtGA,EAAQC,QAAUF,CAAlB,EAMG,KAAAG,gBAA+EF,IAAYA,GAASC,QAKpG,KAAAE,eAAgGH,GAAWA,GAASC,QAAU,CAACD,GAASC,SAAW,GAKnJ,KAAAG,iBAAkE,CAACC,EAAGL,KAEzEA,EAAQC,QAAU,IAAlB,EAMAK,OAAOC,OAAOpB,KACjB,E,+YCvDC,MAAgBqB,EAwBlBzB,YAAsB0B,EACAC,GADA,KAAAD,gBAAAA,EACA,KAAAC,WAAAA,EAlBZ,KAAAC,cAAwB,EAc3B,KAAAjB,mBAA2F,IAMjG,CAOYkB,WAAQ,iCAEd,EAAKD,eAKR,EAAKA,cAAe,QAEd,EAAKE,cATM,KAUpB,CAOYC,aAAU,uCAEb,EAAKF,UAFQ,KAGtB,CAKMG,oBAEH5B,KAAKsB,gBAAgBO,eACxB,CAOSH,cAET,E,iCAvEiBL,GAAqBS,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAA,E,kBAArBT,EAAqBU,OAAAA,CAAAC,KAAAA,OAAAzB,mBAAAA,uB","sources":["webpack://ng-universal-demo/../src/modules/codeEditor/misc/types/languageModels/cssLanguageModel.ts","webpack://ng-universal-demo/../css-components/src/dynamicItems/styleBlock/metadata/styleBlock.model.ts","webpack://ng-universal-demo/../css-components/src/dynamicItems/styleBlock/metadata/styleBlock.layoutMetadata.ts","webpack://ng-universal-demo/../layout-editor/src/modules/propertiesControls/components/propertiesControlBase.ts"],"sourcesContent":["import {LanguageModel} from './languageModel';\n\n/**\n * Css language model for code editor\n */\nexport const CssLanguageModel = new LanguageModel('css', 'css', editor =>\n{\n    return editor.getModel()?.getValue() ?? '';\n});","import {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {mapValuesToThis} from '@jscrpt/common';\n\nimport {StyleBlockComponentOptions} from '../styleBlock.options';\n\n/**\n * Style block model for properties editor\n */\nexport class StyleBlockModel implements StyleBlockComponentOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public content: LayoutComponentMetadata|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public style: string|undefined|null = '';\n    \n    //######################### constructor #########################\n    constructor(value: StyleBlockComponentOptions|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","import {LayoutEditorMetadataDescriptor, LayoutEditorMetadataInfo} from '@anglr/dynamic/layout-editor';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {codePropertiesControlFor} from '@anglr/dynamic/layout-editor';\nimport {CssLanguageModel} from '@anglr/dynamic';\nimport {Action, Func} from '@jscrpt/common';\n\nimport {StyleBlockComponentOptions} from '../styleBlock.options';\nimport {StyleBlockModel} from './styleBlock.model';\n\n/**\n * Style block layout metadata\n */\nexport class StyleBlockLayoutEditorMetadata implements LayoutEditorMetadataDescriptor<StyleBlockComponentOptions>\n{\n    //######################### public properties - implementation of LayoutEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: LayoutEditorMetadataInfo<StyleBlockComponentOptions> =\n    {\n        name: 'Style',\n        description: 'Style block - allows styling of content',\n        group: 'Layout',\n        optionsMetadata:\n        {\n            propertiesMetadata: \n            [\n                {\n                    modelType: StyleBlockModel,\n                    propertiesControls: \n                    [\n                        codePropertiesControlFor<StyleBlockModel>('style', CssLanguageModel),\n                    ],\n                },\n            ]\n        },\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public addDescendant?: Action<[LayoutComponentMetadata, StyleBlockComponentOptions, number]> = (metadata, options) =>\n    {\n        options.content = metadata;\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public canDropMetadata?: Func<boolean, [StyleBlockComponentOptions|undefined|null]> = options => !options?.content;\n\n    /**\n     * @inheritdoc\n     */\n    public getDescendants?: Func<LayoutComponentMetadata[], [StyleBlockComponentOptions|undefined|null]> = options => options?.content ? [options?.content] : [];\n\n    /**\n     * @inheritdoc\n     */\n    public removeDescendant?: Action<[string, StyleBlockComponentOptions]> = (_, options) =>\n    {\n        options.content = null;\n    }\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {ChangeDetectorRef, Directive, Input} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {FormModelGroup} from '@anglr/common/forms';\nimport {Dictionary, PromiseOr} from '@jscrpt/common';\n\nimport {PropertiesControl} from '../../../interfaces';\nimport {LayoutEditorMetadataExtractor} from '../../../services';\nimport {LayoutEditorPropertyMetadata} from '../../../misc/types';\nimport {LayoutPropertyTypeData} from '../../../decorators';\n\n/**\n * Base class for properties control\n */\n@Directive()\nexport abstract class PropertiesControlBase<TOptions = any> implements PropertiesControl<TOptions>\n{\n    //######################### protected fields #########################\n\n    /**\n     * Indication whether was component initialized or not\n     */\n    protected _initialized: boolean = false;\n\n    //######################### public properties - implementation of PropertiesControl #########################\n\n    /**\n     * @inheritdoc\n     */\n    @Input()\n    public form: FormGroup<FormModelGroup<TOptions>>|undefined;\n\n    /**\n     * @inheritdoc\n     */\n    @Input()\n    public propertiesMetadata: Dictionary<LayoutEditorPropertyMetadata&LayoutPropertyTypeData>|null = null;\n\n    //######################### constructor #########################\n    constructor(protected _changeDetector: ChangeDetectorRef,\n                protected _extractor: LayoutEditorMetadataExtractor,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        if(this._initialized)\n        {\n            return;\n        }\n\n        this._initialized = true;\n\n        await this._initialize();\n    }\n\n    //######################### public methods - implementation of PropertiesControl #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async initialize(): Promise<void>\n    {\n        await this.ngOnInit();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Use this method for initialization of component\n     */\n    protected _initialize(): PromiseOr<void>\n    {\n    }\n}"],"names":["CssLanguageModel","LanguageModel","editor","getModel","getValue","StyleBlockModel","constructor","value","style","mapValuesToThis","this","StyleBlockLayoutEditorMetadata","metaInfo","name","description","group","optionsMetadata","propertiesMetadata","modelType","propertiesControls","codePropertiesControlFor","addDescendant","metadata","options","content","canDropMetadata","getDescendants","removeDescendant","_","Object","freeze","PropertiesControlBase","_changeDetector","_extractor","_initialized","ngOnInit","_initialize","initialize","invalidateVisuals","detectChanges","i0","inputs","form"],"sourceRoot":""}