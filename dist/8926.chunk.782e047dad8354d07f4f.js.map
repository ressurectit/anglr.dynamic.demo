{"version":3,"file":"8926.chunk.782e047dad8354d07f4f.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor/relationsEditor.component.html","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsEditor/relationsEditor.module.ts","webpack://ng-universal-demo/./app/services/demoRelationsPackageManager/demoRelationsPackageManager.service.ts","webpack://ng-universal-demo/../relations-editor/src/modules/dynamicRelationsEditor.module.ts","webpack://ng-universal-demo/../../../src/decorators/bindThis.decorator.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {MetadataStateManager, METADATA_STATE_MANAGER} from '@anglr/dynamic';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relationsEditor.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: ''})\n@ComponentRoute({path: ':id'})\nexport class RelationsEditorComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected stringMetadata: string = '';\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(protected _store: StoreDataService,\n                @Inject(METADATA_STATE_MANAGER) protected _metadataState: MetadataStateManager<RelationsNodeMetadata[]>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(metadata: RelationsNodeMetadata[]): RelationsNodeMetadata[]\n    {\n        return metadata;\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsDemo;\n    }\n\n    protected showMetadata(): void\n    {\n        const meta = this._metadataState.getMetadata();\n\n        this.stringMetadata = JSON.stringify(meta, null, 4);\n    }\n}\n","<div class=\"flex-row\">\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsEditor\" (metadataChange)=\"_metadata = ($any($event) ?? emptyMetadata)\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<div class=\"flex-1 flex-row\">\n    <relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>\n\n    <div style=\"width: 300px;\" class=\"flex-column\">\n        <div>Relations metadata</div>\n\n        <div>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"showMetadata()\">\n                <span>show metadata</span>\n            </button>\n        </div>\n\n        <div style=\"white-space: pre; overflow: scroll;\" class=\"thin-scrollbar flex-1\">{{stringMetadata}}</div>\n    </div>\n</div>","import {RelationsEditorComponent} from './relationsEditor/relationsEditor.component';\n\nexport const components =\n[\n    RelationsEditorComponent,\n];","import {ClassProvider, ExistingProvider, FactoryProvider, NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {DynamicRelationsEditorModule, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {provideTinyMceRelationsEditor} from '@anglr/dynamic/tinymce-components';\nimport {provideHandlebarsRelationsEditor} from '@anglr/dynamic/handlebars-components';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {MetadataStorage, PackageManager} from '@anglr/dynamic';\n\nimport {components} from './relationsEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\nimport {DemoRelationsPackageManager} from '../../services/demoRelationsPackageManager/demoRelationsPackageManager.service';\nimport {StoreDataService} from '../../services/storeData';\n\n/**\n * Module for relations editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        LoadSaveNewSAComponent,\n        DynamicRelationsEditorModule.withProviders(),\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: RELATIONS_METADATA_STORAGE,\n            useFactory: (store: StoreDataService<RelationsNodeMetadata[]>) => new MetadataStorage<RelationsNodeMetadata[]>(id => store.getData(id)),\n            deps: [StoreDataService]\n        },\n        <ExistingProvider>\n        {\n            provide: MetadataStorage,\n            useExisting: RELATIONS_METADATA_STORAGE,\n        },\n        createStoreDataServiceFactory('RELATIONS_DATA'),\n        provideTinyMceRelationsEditor(),\n        provideHandlebarsRelationsEditor(),\n        <ClassProvider>\n        {\n            provide: PackageManager,\n            useClass: DemoRelationsPackageManager,\n        },\n    ]\n})\n@ModuleRoutes(components)\nexport class RelationsEditorModule\n{\n}","import {Injectable} from '@angular/core';\nimport {PackageManager} from '@anglr/dynamic';\n\n/**\n * Relations package manager for demo app\n */\n@Injectable()\nexport class DemoRelationsPackageManager extends PackageManager\n{\n    //######################### constructor #########################\n    constructor()\n    {\n        super('RELATIONS_PACKAGES_STORE');\n    }\n}","import {ModuleWithProviders, NgModule, Type} from '@angular/core';\nimport {DefaultDynamicPackage} from '@anglr/dynamic';\n\nimport {RelationsEditorSAComponent} from '../components';\nimport {provideRelationsEditor, provideRelationsEditorWithStatic} from '../misc/utils';\nimport {StaticComponentsRegister} from '../services';\n\n/**\n * Module contains components, directives, pipes for dynamic relations editor rendering\n */\n@NgModule(\n{\n    imports:\n    [\n        RelationsEditorSAComponent,\n    ],\n    exports:\n    [\n        RelationsEditorSAComponent,\n    ],\n})\nexport class DynamicRelationsEditorModule\n{\n    //######################### public methods #########################\n\n    /**\n     * Creates DynamicRelationsEditorModule extended with providers\n     * @param packages - Array of default packages to be used, if omitted all built-in packages are used\n     */\n    public static withProviders(packages?: DefaultDynamicPackage[]): ModuleWithProviders<DynamicRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicRelationsEditorModule,\n            providers:\n            [\n                provideRelationsEditor(packages),\n            ]\n        };\n    }\n\n    /**\n     * Creates DynamicRelationsEditorModule extended with providers for static components\n     * @param staticRegister - Type that represents implementation of static components register\n     * @param packages - Array of default packages to be used, if omitted all built-in packages are used\n     */\n    public static withStaticComponents(staticRegister: Type<StaticComponentsRegister>, packages?: DefaultDynamicPackage[]): ModuleWithProviders<DynamicRelationsEditorModule>\n    {\n        return {\n            ngModule: DynamicRelationsEditorModule,\n            providers:\n            [\n                provideRelationsEditorWithStatic(staticRegister, packages),\n            ]\n        };\n    }\n}","import {Func} from '../types/functions';\r\nimport {isFunction} from '../utils/lang';\r\n\r\n/**\r\n * Binds function to this, object instance where is defined, it is importat to place it in correct order with other decorators, usually should be first\r\n */\r\nexport function BindThis(_target: Object, propertyKey: string|symbol, descriptor: PropertyDescriptor): TypedPropertyDescriptor<Func<any, any>>\r\n{\r\n    const originalValue: Func = descriptor.value ?? descriptor.get?.();\r\n\r\n    if(!isFunction(originalValue))\r\n    {\r\n        throw new Error(`Unable to apply @BindThis decorator to '${propertyKey.toString()}', it is not a method.`);\r\n    }\r\n\r\n    return {\r\n        configurable: true,\r\n        get(this: unknown): Func\r\n        {\r\n            const bound: Func = originalValue.bind(this);\r\n\r\n            Object.defineProperty(this,\r\n                                  propertyKey,\r\n                                  {\r\n                                      value: bound,\r\n                                      configurable: true,\r\n                                      writable: true\r\n                                  });\r\n\r\n            return bound;\r\n        }\r\n    };\r\n}"],"names":["RelationsEditorComponent","constructor","_store","_metadataState","_metadata","stringMetadata","emptyMetadata","_getMetadata","metadata","_loadDemo","this","DemoData","showMetadata","meta","getMetadata","JSON","stringify","i0","METADATA_STATE_MANAGER","selectors","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","StoreDataService","Object","components","RelationsEditorModule","provide","RELATIONS_METADATA_STORAGE","useFactory","store","MetadataStorage","id","getData","deps","useExisting","createStoreDataServiceFactory","provideTinyMceRelationsEditor","provideHandlebarsRelationsEditor","PackageManager","useClass","DemoRelationsPackageManager","imports","LoadSaveNewSAComponent","DynamicRelationsEditorModule","ModuleRoutes","super","factory","packages","ngModule","providers","provideRelationsEditor","staticRegister","provideRelationsEditorWithStatic","RelationsEditorSAComponent","_target","propertyKey","descriptor","originalValue","value","get","isFunction","Error","toString","configurable","bound","bind","defineProperty","writable"],"sourceRoot":""}