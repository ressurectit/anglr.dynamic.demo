{"version":3,"file":"5184.chunk.fefb9226add79a5e5162.js","mappings":"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","sources":["webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/layout/layout.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/layout/layout.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/preview/preview.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/preview/preview.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relations/relations.component.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relations/relations.component.html","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relationsWithLayoutEditor.routes.ts","webpack://ng-universal-demo/./app/pages/+relationsWithLayoutEditor/relationsWithLayoutEditor.module.ts"],"sourcesContent":["import {Component, ChangeDetectionStrategy, ExistingProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadataManager} from '@anglr/dynamic/layout-editor';\nimport {StackPanelComponentOptions} from '@anglr/dynamic/basic-components';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {BindThis, generateId} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoStorage} from '../../../services/metadataStorage';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'layout-editor-view',\n    templateUrl: 'layout.component.html',\n    providers:\n    [\n        DemoStorage,\n        <ExistingProvider>\n        {\n            provide: MetadataStorage,\n            useExisting: DemoStorage\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'layout'})\n@ComponentRoute({path: 'layout/:id'})\nexport class LayoutComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: LayoutComponentMetadata|null = null;\n\n    protected get emptyMetadata(): LayoutComponentMetadata\n    {\n        return {\n            id: `stackPanel-${generateId(10)}`,\n            displayName: 'root',\n            package: 'basic-components',\n            name: 'stackPanel',\n            options: <StackPanelComponentOptions>\n            {\n                children: [],\n            },\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: LayoutEditorMetadataManager,\n                protected _store: StoreDataService<LayoutRelationsMetadata>,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutRelationsMetadata\n    {\n        return {\n            layout: this._manager.getMetadata()\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.demoLayoutWithRelations;\n    }\n}\n","<div class=\"flex-row\">\r\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\r\n        <span>go back</span>\r\n    </button>\r\n\r\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsWithLayoutEditor/layout\" (metadataChange)=\"_metadata = ($any($event?.layout) ?? emptyMetadata)\"></load-save-new>\r\n    \r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\r\n        <span>demo</span>\r\n    </button>\r\n</div>\r\n\r\n<layout-editor class=\"flex-1\" [metadata]=\"_metadata\"></layout-editor>","<div class=\"flex-row\">\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsWithLayoutEditor/layout', _available.value]\">layout</a>\r\n    <a class=\"margin-horizontal-small\" [routerLink]=\"['/relationsWithLayoutEditor/relations', _available.value]\">relations</a>\r\n\r\n    <ng-select [formControl]=\"_available\" class=\"flex-1\">\r\n        <ng-option *ngFor=\"let val of _availableNames\" [value]=\"val\" [text]=\"val\"></ng-option>\r\n    </ng-select>\r\n</div>\r\n\r\n<div class=\"flex-row margin-top-big flex-1\">\r\n    <div class=\"flex-1 overflow-vertical-scroll\">\r\n        <ng-container [layoutComponentRenderer]=\"_metadata\"></ng-container>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {provideRelations, RelationsManager} from '@anglr/dynamic/relations';\n\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\n\n/**\n * Layout preview component\n */\n@Component(\n{\n    selector: 'layout-preview-view',\n    templateUrl: 'preview.component.html',\n    providers:\n    [\n        provideRelations(),\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'preview'})\n@ComponentRoute({path: 'preview/:id'})\nexport class PreviewComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _available: FormControl = new FormControl('');\n\n    protected _metadata: LayoutComponentMetadata = null;\n\n    protected _availableNames: string[] = [];\n\n    //######################### constructor #########################\n    constructor(private _store: StoreDataService<LayoutRelationsMetadata>,\n                private _router: Router,\n                private _relationsManager: RelationsManager,\n                private _route: ActivatedRoute,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._availableNames = this._store.getStored();\n\n        this._route.params.subscribe(({id}) =>\n        {\n            if(id)\n            {\n                this._available.setValue(id);\n                const meta = this._store.getData(id);\n                this._metadata = meta?.layout;\n\n                this._relationsManager.setRelations(meta.relations ?? []);\n            }\n            else\n            {\n                this._relationsManager.setRelations([]);\n            }\n\n            this._available.valueChanges.subscribe(val =>\n            {\n                this._router.navigate(['/relationsWithLayoutEditor/preview', val], {skipLocationChange: false, replaceUrl: true});\n            });\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n}\n","import {Component, ChangeDetectionStrategy, ExistingProvider} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {RelationsNodeManager, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\nimport {LayoutManager} from '@anglr/dynamic/layout-relations';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {BindThis} from '@jscrpt/common';\n\nimport {DemoData} from '../../../services/demoData';\nimport {StoreDataService} from '../../../services/storeData';\nimport {LayoutRelationsMetadata} from '../../../misc/interfaces';\nimport {DemoStorage} from '../../../services/metadataStorage';\n\n/**\n * Layout editor component\n */\n@Component(\n{\n    selector: 'relations-editor-view',\n    templateUrl: 'relations.component.html',\n    providers:\n    [\n        DemoStorage,\n        <ExistingProvider>\n        {\n            provide: MetadataStorage,\n            useExisting: DemoStorage\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'relations'})\n@ComponentRoute({path: 'relations/:id'})\nexport class RelationsComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected _metadata: RelationsNodeMetadata[] = [];\n\n    protected get emptyMetadata(): RelationsNodeMetadata[]\n    {\n        return [];\n    }\n\n    //######################### constructor #########################\n    constructor(private _manager: RelationsNodeManager,\n                protected _store: StoreDataService<LayoutRelationsMetadata>,\n                protected _layoutManager: LayoutManager,)\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    @BindThis\n    protected _getMetadata(): LayoutRelationsMetadata\n    {\n        return {\n            relations: this._manager.getMetadata()\n        };\n    }\n\n    protected _loadDemo(): void\n    {\n        this._metadata = DemoData.relationsWithLayoutDemo;\n    }\n\n    protected setMetadata(metadata: LayoutRelationsMetadata): void\n    {\n        this._metadata = metadata?.relations ?? this.emptyMetadata;\n        this._layoutManager.setLayout(metadata?.layout);\n    }\n}\n","<div class=\"flex-row\">\n    <button class=\"btn btn-primary margin-right-extra-small\" type=\"button\" goBack>\n        <span>go back</span>\n    </button>\n\n    <load-save-new [store]=\"_store\" [getMetadataCallback]=\"_getMetadata\" routePath=\"/relationsWithLayoutEditor/relations\" (metadataChange)=\"setMetadata($event)\"></load-save-new>\n\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"_loadDemo()\">\n        <span>demo</span>\n    </button>\n</div>\n\n<relations-editor class=\"flex-1\" [metadata]=\"_metadata\"></relations-editor>","import {LayoutComponent} from './layout/layout.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {RelationsComponent} from './relations/relations.component';\n\nexport const components =\n[\n    PreviewComponent,\n    LayoutComponent,\n    RelationsComponent,\n];","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {GoBackModule} from '@anglr/common';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {NgSelectModule} from '@anglr/select';\nimport {DynamicLayoutRelationsEditorModule} from '@anglr/dynamic/layout-relations';\n\nimport {components} from './relationsWithLayoutEditor.routes';\nimport {LoadSaveNewSAComponent} from '../../components';\nimport {createStoreDataServiceFactory} from '../../misc/factories';\n\n/**\n * Module for relations with layout editor samples\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        NgSelectModule,\n        GoBackModule,\n        DynamicLayoutRelationsEditorModule.withProviders(),\n        LoadSaveNewSAComponent,\n    ],\n    declarations:\n    [\n        ...components,\n    ],\n    providers:\n    [\n        createStoreDataServiceFactory('LAYOUT_RELATIONS_DATA'),\n    ],\n})\n@ModuleRoutes(components)\nexport class RelationsWithLayoutEditorModule\n{\n}"],"names":["LayoutComponent","constructor","_manager","_store","_metadata","emptyMetadata","id","generateId","displayName","package","name","options","children","_getMetadata","layout","this","getMetadata","_loadDemo","DemoData","i0","selectors","features","DemoStorage","provide","MetadataStorage","useExisting","decls","vars","consts","template","ctx","__decorate","BindThis","ComponentRoute","path","LayoutEditorMetadataManager","StoreDataService","val_r1","PreviewComponent","_router","_relationsManager","_route","_available","FormControl","_availableNames","ngOnInit","getStored","params","subscribe","setValue","meta","getData","setRelations","relations","valueChanges","val","navigate","skipLocationChange","replaceUrl","ngOnDestroy","provideRelations","Router","RelationsManager","ActivatedRoute","RelationsComponent","_layoutManager","setMetadata","metadata","setLayout","RelationsNodeManager","LayoutManager","components","RelationsWithLayoutEditorModule","createStoreDataServiceFactory","imports","CommonModule","ReactiveFormsModule","RouterModule","NgSelectModule","GoBackModule","DynamicLayoutRelationsEditorModule","LoadSaveNewSAComponent","ModuleRoutes"],"sourceRoot":""}