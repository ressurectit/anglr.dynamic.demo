{"version":3,"file":"8154.chunk.d17e4677a2862b2b520a.js","mappings":"gkBAUO,MAAMA,EAA+B,oBAAuF,mBAAY,WAAW,iCAAiDC,gCAAxE,IAAvF,qDAK/BC,EAAmC,oBAAiD,yBAAmB,iCAAoDC,8BAAvE,IAAjD,qD,+JCfhDC,EAAAA,GAAAA,GACIA,EAAAA,GAAAA,EAAAA,GACJA,EAAAA,M,mBADkBA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,0BAAAA,MAAAA,EAAAA,uBAAAA,MAAAA,EAAAA,sBAAAA,SAAAA,MAAAA,EAAAA,sBAAAA,QAAAA,sBAAAA,KAAAA,EAAAA,sBAAAA,QAAAA,sBAAAA,EAAAA,I,MC8DLC,EAAsB,cAASC,EAAAA,E,kCAO9B,KAAAC,uBAAyDC,EAAAA,EAAAA,IAAOC,EAAAA,EAA4B,CAACC,UAAU,IAOvG,KAAAC,oBAA+BC,KAAKL,sBAOvC,KAAAM,GAAa,EAWvB,CAJUC,MAAMD,GAETD,KAAKC,GAAKA,CACb,G,6DA/BQR,KAAsBU,GAAtBV,EAAsB,E,qBAAtBA,EAAsBW,UAAAA,CAAAA,CAAAA,gBAAAC,YAAAA,EAAAC,SAAAA,CAAAA,EAAAA,EApC/B,CAEI,CACIC,QAASC,EAAAA,EACTC,WAAY,KAEsBb,EAAAA,EAAAA,IAAOC,EAAAA,EAA4B,CAACC,UAAU,KAE9CY,wBAAwBC,IAAIH,EAAAA,EAA2B,KAAMI,EAAAA,EAAAA,SAAqBA,EAAAA,EAAAA,WAIxH,CACIL,QAASM,EAAAA,EACTJ,WAAY,KAEsBb,EAAAA,EAAAA,IAAOC,EAAAA,EAA4B,CAACC,UAAU,KAE9CY,wBAAwBC,IAAIE,EAAAA,EAAkB,KAAMD,EAAAA,EAAAA,SAAqBA,EAAAA,EAAAA,WAI/G,CACIL,QAASO,EAAAA,EACTL,WAAY,KAEsBb,EAAAA,EAAAA,IAAOC,EAAAA,EAA4B,CAACC,UAAU,KAE9CY,wBAAwBC,IAAIG,EAAAA,EAAoB,KAAMF,EAAAA,EAAAA,SAAqBA,EAAAA,EAAAA,aAGpHpB,EAAAA,EAAAA,EAAAA,GAAAuB,MAAAA,EAAAC,KAAAA,EAAAC,OAAAA,CAAAA,CAAAA,EAAAA,QAAAA,CAAAA,EAAAA,4BAAAC,SAAAA,SAAAA,EAAAA,GAAA,KD1DL1B,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,G,KAAeA,EAAAA,EAAAA,OAAAA,EAAAA,kB,gBCuBP2B,EAAAA,EAAYC,EAAAA,EACZC,EAAAA,GAAkCC,OAAAA,CAAAA,qCAAAC,gBAAAA,IAuC7B9B,GAAsB,UAFlC+B,EAAAA,EAAAA,GAAyBlC,IACzBmC,EAAAA,EAAAA,GAAqBrC,IACTK,E,+EC5Db,Q,SAAA,EAEaiC,EAAa,CAACC,EAAAA,E","sources":["webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/placeholder.metadata.ts","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/placeholder.component.html","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/placeholder.component.ts","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/placeholder/type.ts"],"sourcesContent":["import {Type} from '@angular/core';\nimport {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {LayoutComponent} from '@anglr/dynamic/layout';\nimport {LayoutEditorMetadataDescriptor} from '@anglr/dynamic/layout-editor';\n\nimport {PlaceholderComponentOptions} from './placeholder.options';\n\n/**\n * Placeholder layout metadata loader\n */\nexport const PlaceholderLayoutMetadataLoader: DynamicMetadataLoader<LayoutEditorMetadataDescriptor<PlaceholderComponentOptions>> = async () => new (await import('./metadata/placeholder.layoutMetadata')).PlaceholderLayoutEditorMetadata();\n\n/**\n * Placeholder layout designer type loader\n */\nexport const PlaceholderLayoutDesignerTypeLoader: DynamicMetadataLoader<Type<LayoutComponent>> = async () => (await import('./designer/placeholderDesigner.component')).PlaceholderDesignerSAComponent;\n","<ng-container *ngIf=\"inCustomComponent\">\n    <ng-container [layoutComponentRenderer]=\"parentCustomComponent?.options?.placeholderContainers?.[id]\"></ng-container>\n</ng-container>","import {Component, ChangeDetectionStrategy, inject, FactoryProvider, InjectFlags} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LayoutComponent, LayoutComponentBase, LayoutComponentRendererSADirective} from '@anglr/dynamic/layout';\nimport {LayoutEditorDesignerType, LayoutEditorMetadata} from '@anglr/dynamic/layout-editor';\nimport {RelationsComponentManager, RelationsManager, RelationsProcessor} from '@anglr/dynamic/relations';\nimport {HostDisplayBlockStyle} from '@anglr/common';\n\nimport {PlaceholderComponentOptions} from './placeholder.options';\nimport {PlaceholderLayoutDesignerTypeLoader, PlaceholderLayoutMetadataLoader} from './placeholder.metadata';\nimport {ComponentWithId} from '../../interfaces';\nimport {CustomComponentSAComponent} from '../customComponent/customComponent.component';\n\n/**\n * Component used for displaying placeholder\n */\n@Component(\n{\n    selector: 'placeholder',\n    templateUrl: 'placeholder.component.html',\n    styles: [HostDisplayBlockStyle],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        LayoutComponentRendererSADirective,\n    ],\n    providers:\n    [\n        <FactoryProvider>\n        {\n            provide: RelationsComponentManager,\n            useFactory: () =>\n            {\n                const owningCustomComponent = inject(CustomComponentSAComponent, {optional: true});\n\n                return owningCustomComponent?.customComponentInjector.get(RelationsComponentManager, null, InjectFlags.SkipSelf|InjectFlags.Optional);\n            },\n        },\n        <FactoryProvider>\n        {\n            provide: RelationsManager,\n            useFactory: () =>\n            {\n                const owningCustomComponent = inject(CustomComponentSAComponent, {optional: true});\n\n                return owningCustomComponent?.customComponentInjector.get(RelationsManager, null, InjectFlags.SkipSelf|InjectFlags.Optional);\n            },\n        },\n        <FactoryProvider>\n        {\n            provide: RelationsProcessor,\n            useFactory: () =>\n            {\n                const owningCustomComponent = inject(CustomComponentSAComponent, {optional: true});\n\n                return owningCustomComponent?.customComponentInjector.get(RelationsProcessor, null, InjectFlags.SkipSelf|InjectFlags.Optional);\n            },\n        },\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@LayoutEditorDesignerType(PlaceholderLayoutDesignerTypeLoader)\n@LayoutEditorMetadata(PlaceholderLayoutMetadataLoader)\nexport class PlaceholderSAComponent extends LayoutComponentBase<PlaceholderComponentOptions> implements LayoutComponent<PlaceholderComponentOptions>, ComponentWithId\n{\n    //######################### protected properties #########################\n\n    /**\n     * Instance of parent custom component\n     */\n    protected parentCustomComponent: CustomComponentSAComponent|null = inject(CustomComponentSAComponent, {optional: true});\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether is used in custom component\n     */\n    protected inCustomComponent: boolean = !!this.parentCustomComponent;\n\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public id: string = '';\n\n    //######################### public methods #########################\n\n    /**\n     * @inheritdoc\n     */\n    public setId(id: string): void\n    {\n        this.id = id;\n    }\n}","import {IdSetterExtension} from '../../misc/extensions';\nimport {PlaceholderSAComponent} from './placeholder.component';\n\nexport default PlaceholderSAComponent;\n\nexport const extensions = [IdSetterExtension];"],"names":["PlaceholderLayoutMetadataLoader","PlaceholderLayoutEditorMetadata","PlaceholderLayoutDesignerTypeLoader","PlaceholderDesignerSAComponent","i0","PlaceholderSAComponent","LayoutComponentBase","parentCustomComponent","inject","CustomComponentSAComponent","optional","inCustomComponent","this","id","setId","t","selectors","standalone","features","provide","RelationsComponentManager","useFactory","customComponentInjector","get","InjectFlags","RelationsManager","RelationsProcessor","decls","vars","consts","template","CommonModule","i1","LayoutComponentRendererSADirective","styles","changeDetection","LayoutEditorDesignerType","LayoutEditorMetadata","extensions","IdSetterExtension"],"sourceRoot":""}