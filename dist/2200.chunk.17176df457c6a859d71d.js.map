{"version":3,"file":"2200.chunk.17176df457c6a859d71d.js","mappings":"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","sources":["webpack://ng-universal-demo/../layout-relations/src/dynamicItems/customComponent/node/customComponentNode.component.html","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/customComponent/node/customComponentNode.component.ts","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/customComponent/metadata/customComponent.relationsMetadata.ts"],"sourcesContent":["<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"custom\"></relations-node-header>\n\n<div class=\"node-content\">\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <div class=\"input\" *ngFor=\"let inputMeta of inputsMeta?.relationsOptions?.inputs\">\n                <relation-node-input [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"inputMeta.name\" [parent]=\"this\"></relation-node-input>\n                <div>{{inputMeta.name}}</div>\n            </div>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\" *ngFor=\"let outputMeta of outputsMeta?.relationsOptions?.outputs\">\n                <div>{{outputMeta.name}}</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"outputMeta.name\" [parent]=\"this\"></relation-node-output>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MetadataStorage} from '@anglr/dynamic';\nimport {RELATIONS_METADATA_STORAGE} from '@anglr/dynamic/relations';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationsNodeHeaderSAComponent, RelationNodeOutputSAComponent, RelationsNodeMetadata} from '@anglr/dynamic/relations-editor';\n\nimport {CustomComponentRelationsOptions} from '../customComponent.options';\nimport {ComponentInputsRelationsOptions} from '../../componentInputs';\nimport {ComponentOutputsRelationsOptions} from '../../componentOutputs';\nimport {LayoutComponentsRegister} from '../../../services';\nimport {getInputs, getOutputs} from '../customComponent.utils';\n\n/**\n * Relations node component for custom component\n */\n@Component(\n{\n    selector: 'custom-component-node',\n    templateUrl: 'customComponentNode.component.html',\n    // styleUrls: ['customComponentNode.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomComponentNodeSAComponent extends RelationsNodeBase<CustomComponentRelationsOptions> implements RelationsNode<CustomComponentRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Storage for relations metadata\n     */\n    protected relationsMetadataStorage: MetadataStorage<RelationsNodeMetadata[]> = inject(RELATIONS_METADATA_STORAGE);\n\n    /**\n     * Layout components register instance\n     */\n    protected layoutComponentsRegister: LayoutComponentsRegister = inject(LayoutComponentsRegister);\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Metadata that contains information about available inputs\n     */\n    protected inputsMeta: RelationsNodeMetadata<ComponentInputsRelationsOptions>|undefined;\n\n    /**\n     * Metadata that contains information about available outputs\n     */\n    protected outputsMeta: RelationsNodeMetadata<ComponentOutputsRelationsOptions>|undefined;\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    public override async initialize(): Promise<void>\n    {\n        if(!this.metadata)\n        {\n            return;\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            name: ''\n        };\n\n        const componentName = await this.layoutComponentsRegister.getComponentName(this.metadata.name);\n\n        if(!componentName)\n        {\n            return;\n        }\n\n        this.metadata.relationsOptions.name = this.metadata.name;\n        const relations = await this.relationsMetadataStorage?.getMetadata(componentName) ?? [];\n        this.inputsMeta = getInputs(relations);\n        this.outputsMeta = getOutputs(relations);\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {CustomComponentNodeSAComponent} from '../node/customComponentNode.component';\n\n/**\n * Custom component relations metadata\n */\nexport class CustomComponentRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        group: 'Components',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = CustomComponentNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["i0","ctx_r0","inputMeta_r2","ctx_r1","outputMeta_r3","CustomComponentNodeSAComponent","RelationsNodeBase","constructor","relationsMetadataStorage","inject","RELATIONS_METADATA_STORAGE","layoutComponentsRegister","LayoutComponentsRegister","initialize","metadata","relationsOptions","_a","name","componentName","getComponentName","relations","getMetadata","inputsMeta","getInputs","outputsMeta","getOutputs","t","selectors","standalone","features","decls","vars","consts","template","ctx","CommonModule","i1","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","encapsulation","changeDetection","CustomComponentRelationsEditorMetadata","metaInfo","group","nodeDefinition","Object","freeze","this"],"sourceRoot":""}