{"version":3,"file":"8375.chunk.985143d30715ac676e52.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.model.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.component.html","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/misc/components/configureRestParameter/configureRestParameter.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/node/restNode.model.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/node/restNode.component.html","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/node/restNode.component.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/rest/metadata/rest.relationsMetadata.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeBase.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeEndpointBase.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeHeader/relationsNodeHeader.component.html","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeHeader/relationsNodeHeader.component.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeInput/relationsNodeInput.component.ts","webpack://ng-universal-demo/../relations-editor/src/components/relationsNodeOutput/relationsNodeOutput.component.ts","webpack://ng-universal-demo/../relations-editor/src/misc/tokens.ts","webpack://ng-universal-demo/../src/misc/extractors/defaultExport.extractor.ts","webpack://ng-universal-demo/../src/misc/utils.ts"],"sourcesContent":["import {mapValuesToThis} from '@jscrpt/common';\n\nimport {RestParam} from '../../interfaces';\nimport {ParamType} from '../../types';\n\n/**\n * Rest param model\n */\nexport class RestParamModel implements RestParam<string>\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public type: ParamType = 'PATH';\n\n    /**\n     * @inheritdoc\n     */\n    public configurable: boolean = false;\n\n    /**\n     * @inheritdoc\n     */\n    public value: string = '';\n\n    /**\n     * @inheritdoc\n     */\n    public name: string|undefined|null = null;\n    \n    //######################### constructor #########################\n    constructor(value: RestParam|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","<div [formGroup]=\"form\">\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">type</label>\n\n        <select class=\"form-control\" formControlName=\"type\">\n            <option value=\"BODY\" *ngIf=\"!data.hasBody\">BODY</option>\n            <option value=\"PATH\">PATH</option>\n            <option value=\"QUERY\">QUERY</option>\n        </select>\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">value</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"value\">\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">name</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">configurable</label>\n        <input type=\"checkbox\" class=\"form-control\" formControlName=\"configurable\">\n    </div>\n</div>\n\n<div class=\"flex-row flex-end\">\n    <button class=\"btn btn-info margin-right-extra-small\" [mat-dialog-close]=\"null\">\n        <span>cancel</span>\n    </button>\n\n    <button class=\"btn btn-primary\" [mat-dialog-close]=\"true\">\n        <span>ok</span>\n    </button>\n</div>","import {Component, ChangeDetectionStrategy, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {TITLED_DIALOG_DATA} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {extend} from '@jscrpt/common';\n\nimport {ConfigureRestParameterData} from './configureRestParameter.interface';\nimport {RestParam} from '../../interfaces';\nimport {RestParamModel} from './configureRestParameter.model';\n\n/**\n * Component used for displaying configuration of rest parameters\n */\n@Component(\n{\n    selector: 'configure-rest-parameter',\n    templateUrl: 'configureRestParameter.component.html',\n    // styleUrls: ['configureRestParameter.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n    ],\n    providers:\n    [\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigureRestParameterSAComponent\n{\n    //######################### protected properties - template bindings #########################\n\n    protected form: FormGroup<FormModelGroup<RestParam>>;\n\n    //######################### constructor #########################\n    constructor(@Inject(TITLED_DIALOG_DATA) protected data: ConfigureRestParameterData,\n                formModelBuilder: FormModelBuilder,)\n    {\n\n        this.form = formModelBuilder.build<RestParam>(new RestParamModel(data.parameter));\n        this.form.valueChanges.subscribe(value => extend(data.parameter, value));\n    }\n}","import {mapValuesToThis} from '@jscrpt/common';\n\nimport {RestParam} from '../misc/interfaces';\nimport {MethodType} from '../misc/types';\nimport {RestRelationsOptions} from '../rest.options';\n\n/**\n * Rest relations options model\n */\nexport class RestRelationsOptionsModel implements RestRelationsOptions\n{\n    //######################### public properties #########################\n\n    /**\n     * @inheritdoc\n     */\n    public url: string|undefined|null = '';\n\n    /**\n     * @inheritdoc\n     */\n    public method: MethodType|undefined|null = 'GET';\n\n    /**\n     * @inheritdoc\n     */\n    public runImmediately: boolean|undefined|null = true;\n\n    /**\n     * @inheritdoc\n     */\n    public params: RestParam[]|undefined|null;\n    \n    //######################### constructor #########################\n    constructor(value: RestRelationsOptions|undefined|null)\n    {\n        //TODO: remove ! when fixed in common\n        mapValuesToThis.bind(this)(value!);\n    }\n}","<relations-node-header>rest</relations-node-header>\n\n<div class=\"node-content\" [formGroup]=\"form\">\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">url</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"url\">\n    </div>\n    \n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">method</label>\n        \n        <select class=\"form-control\" formControlName=\"method\">\n            <option value=\"GET\">GET</option>\n            <option value=\"POST\">POST</option>\n            <option value=\"PUT\">PUT</option>\n            <option value=\"PATCH\">PATCH</option>\n            <option value=\"DELETE\">DELETE</option>\n        </select>\n    </div>\n\n    <div class=\"form-group margin-bottom-extra-small\">\n        <label class=\"control-label text-uppercase\">run immediately</label>\n        <input type=\"checkbox\" class=\"form-control\" formControlName=\"runImmediately\">\n    </div>\n\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n            <ng-container *ngFor=\"let param of params\">\n                <ng-container [ngSwitch]=\"param.type\">\n                    <div class=\"input\" *ngSwitchCase=\"'BODY'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"flex-row\">\n                            <div>BODY: {{param.name}}</div>\n\n                            <button class=\"btn-icon margin-horizontal-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'PATH'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"flex-row\">\n                            <div>PATH: {{param.name}}</div>\n\n                            <button class=\"btn-icon margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"input\" *ngSwitchCase=\"'QUERY'\">\n                        <relation-node-input *ngIf=\"param.configurable\" [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"param.name\" [parent]=\"this\"></relation-node-input>\n\n                        <div class=\"flex-row\">\n                            <div>QUERY: {{param.name}}</div>\n\n                            <button class=\"btn-icon margin-horizontal-extra-small\" (click)=\"configureRestParameter(param)\">\n                                <span class=\"fas fa-cog\"></span>\n                            </button>\n\n                            <button class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeParam(param)\">\n                                <span class=\"fas fa-times\"></span>\n                            </button>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <button class=\"btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); addParam()\">\n                <span class=\"fas fa-plus\"></span>\n            </button>\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\">\n                <div>success</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"success\" [parent]=\"this\"></relation-node-output>\n            </div>\n\n            <div class=\"output\">\n                <div>error</div>\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" name=\"error\" [parent]=\"this\"></relation-node-output>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {RelationsNode, RelationsNodeBase, RelationNodeInputSAComponent, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent, RELATIONS_NODE_DESTROY_SUBJECT_PROVIDER, RELATIONS_NODE_DESTROY_SUBJECT, RelationsNodeDestroySubject} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {FormModelBuilder, FormModelGroup} from '@anglr/common/forms';\nimport {extend} from '@jscrpt/common';\n\nimport {ConfigureRestParameterData, ConfigureRestParameterSAComponent} from '../misc/components';\nimport {RestRelationsOptions} from '../rest.options';\nimport {RestParam} from '../misc/interfaces';\nimport {RestRelationsOptionsModel} from './restNode.model';\n\n/**\n * Relations node component for rest\n */\n@Component(\n{\n    selector: 'rest-node',\n    templateUrl: 'restNode.component.html',\n    // styleUrls: ['negationNode.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeInputSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    providers:\n    [\n        RELATIONS_NODE_DESTROY_SUBJECT_PROVIDER,\n        FormModelBuilder,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RestNodeSAComponent extends RelationsNodeBase<RestRelationsOptions> implements RelationsNode<RestRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets rest parameters\n     */\n    protected get params(): RestParam[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            params: [],\n            url: null,\n            method: null,\n            runImmediately: true,\n        };\n\n        return (this.metadata.relationsOptions.params ??= []);\n    }\n\n    /**\n     * Instance of form that is being used\n     */\n    protected form: FormGroup<FormModelGroup<RestRelationsOptions>>;\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,\n                formModelBuilder: FormModelBuilder,\n                @Inject(RELATIONS_NODE_DESTROY_SUBJECT) destroySubject?: RelationsNodeDestroySubject,)\n    {\n        super(changeDetector, element, destroySubject);\n\n        this.form = formModelBuilder.build<RestRelationsOptions>(new RestRelationsOptionsModel(null));\n        this.form.valueChanges.subscribe(value =>\n        {\n            if(this.metadata?.relationsOptions)\n            {\n                extend(this.metadata.relationsOptions, value);\n            }\n        });\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new parameter\n     */\n    protected async addParam(): Promise<void>\n    {\n        const param: RestParam = \n        {\n            configurable: false,\n            name: null,\n            type: 'PATH',\n            value: null,\n        };\n\n        if(await this.configureRestParameter(param))\n        {\n            this.params.push(param);\n        }\n    }\n\n    /**\n     * Removes parameter\n     * @param param - Param to be removed\n     */\n    protected removeParam(param: RestParam): void\n    {\n        const index = this.params.indexOf(param);\n\n        if(index >= 0)\n        {\n            this.params.splice(index, 1);\n        }\n    }\n\n    /**\n     * Configures rest parameter\n     * @param param - Parameter to be configured\n     */\n    protected async configureRestParameter(param: RestParam): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(param));\n        \n        const result = await this.dialog.open<ConfigureRestParameterSAComponent, ConfigureRestParameterData, true|undefined|null>(ConfigureRestParameterSAComponent,\n        {\n            title: 'configure rest parameter',\n            width: '60vw',\n            data:\n            {\n                parameter: param,\n                hasBody: param.type === 'BODY' ? false : !!this.params.find(itm => itm.type === 'BODY')\n            }\n        }).afterClosed()\n            .toPromise();\n\n        if(!result)\n        {\n            extend(param, original);\n        }\n\n        return result ?? false;\n    }\n\n    //######################### protected methods - overrides #########################\n\n    /**\n     * @inheritdoc\n     */\n    protected override metadataSet(): void\n    {\n        if(!this.metadata?.relationsOptions)\n        {\n            return;\n        }\n\n        this.form.patchValue(this.metadata.relationsOptions);\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {RestNodeSAComponent} from '../node/restNode.component';\n\n/**\n * Rest relations metadata\n */\nexport class RestRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Rest',\n        description: 'Restfull requests',\n        group: 'Http',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = RestNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}","import {HostListener, ViewChildren, QueryList, ChangeDetectorRef, ElementRef, SimpleChanges, Directive, Inject, Optional} from '@angular/core';\nimport {Dictionary, nameof} from '@jscrpt/common';\nimport {Observable, Subject} from 'rxjs';\n\nimport {Coordinates, RelationsInput, RelationsNode, RelationsNodeDestroySubject, RelationsNodeMetadata, RelationsOutput} from '../interfaces';\nimport {RelationNodeOutputSAComponent} from './relationsNodeOutput/relationsNodeOutput.component';\nimport {RelationNodeInputSAComponent} from './relationsNodeInput/relationsNodeInput.component';\nimport {RELATIONS_NODE_DESTROY_SUBJECT} from '../misc/tokens';\n\n/**\n * Base class for relations node components\n */\n@Directive()\nexport abstract class RelationsNodeBase<TOptions = any, TEditorOptions = any> implements RelationsNode<TOptions, TEditorOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Indication whether is node initialized\n     */\n    protected initialized: boolean = false;\n\n    /**\n     * Indication whether user is dragging\n     */\n    protected isDragging: boolean = false;\n\n    /**\n     * Last mouse down position\n     */\n    protected lastMouseDownPosition: Coordinates =\n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Node position on last mouse down event\n     */\n    protected lastMouseDownNodePosition: Coordinates =\n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Node position\n     */\n    protected nodePosition: Coordinates =\n    {\n        x: 0,\n        y: 0,\n    };\n\n    /**\n     * Array of all available outputs\n     */\n    protected ɵAllOutputs: readonly RelationsOutput[] = [];\n\n    /**\n     * Object storing inputs by their names\n     */\n    protected ɵInputs: Dictionary<RelationsInput> = {};\n \n    /**\n     * Object storing outputs by their names\n     */\n    protected ɵOutputs: Dictionary<RelationsOutput> = {};\n\n    /**\n     * Subject used for destroying node by user\n     */\n    protected destroySubject: Subject<void> = new Subject<void>();\n\n    //######################### protected properties - view children #########################\n\n    /**\n     * Relations node inputs\n     */\n    @ViewChildren(RelationNodeInputSAComponent)\n    protected inputsChildren!: QueryList<RelationsInput>;\n\n    /**\n     * Relations node outputs\n     */\n    @ViewChildren(RelationNodeOutputSAComponent)\n    protected outputsChildren!: QueryList<RelationsOutput>;\n\n    //######################### public properties - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n    public zoomLevel: number = 1;\n\n    /**\n     * @inheritdoc\n     */\n    public get id(): string\n    {\n        return this.metadata?.id ?? '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public metadata: RelationsNodeMetadata<TOptions, TEditorOptions>|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public get allOutputs(): readonly RelationsOutput[]\n    {\n        return this.ɵAllOutputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get inputs(): Dictionary<RelationsInput>\n    {\n        return this.ɵInputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get outputs(): Dictionary<RelationsOutput>\n    {\n        return this.ɵOutputs;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public get destroy(): Observable<void>\n    {\n        return this.destroySubject.asObservable();\n    }\n\n    //######################### constructor #########################\n    constructor(protected changeDetector: ChangeDetectorRef,\n                protected element: ElementRef<HTMLElement>,\n                @Inject(RELATIONS_NODE_DESTROY_SUBJECT) @Optional() destroySubject?: RelationsNodeDestroySubject,)\n    {\n        if(destroySubject)\n        {\n            destroySubject.destroy = this.destroySubject;\n        }\n\n        this.element.nativeElement.classList.add('relations-node');\n\n        this.updatePosition();\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n    \n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        //initial change of metadata\n        if(nameof<RelationsNodeBase>('metadata') in changes && this.metadata)\n        {\n            if(this.metadata.nodeMetadata?.coordinates)\n            {\n                this.nodePosition = this.metadata.nodeMetadata.coordinates;\n                this.updatePosition();\n            }\n\n            this.metadataSet();\n        }\n    }\n\n    //######################### public methods - implementation of RelationsNode #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n        this.changeDetector.detectChanges();\n\n        if(!this.initialized)\n        {\n            this.initialized = true;\n\n            this.initEndpoints();\n        }\n    }\n\n    //######################### protected methods methods - host listeners #########################\n\n    /**\n     * Mouse down event\n     * @param event\n     */\n    @HostListener('mousedown', ['$event'])\n    protected onMouseDown(event: MouseEvent): void\n    {\n        this.isDragging = true;\n        this.lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this.lastMouseDownNodePosition =\n        {\n            x: this.nodePosition.x,\n            y: this.nodePosition.y\n        };\n\n        event.stopImmediatePropagation();\n    }\n\n    /**\n     * Mouse move event\n     * @param event\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected onMouseMove(event: MouseEvent): void\n    {\n        if (this.isDragging)\n        {\n            this.nodePosition =\n            {\n                x: this.lastMouseDownNodePosition.x + (event.clientX - this.lastMouseDownPosition.x) * 1/this.zoomLevel,\n                y: this.lastMouseDownNodePosition.y + (event.clientY - this.lastMouseDownPosition.y) * 1/this.zoomLevel,\n            };\n\n            this.updatePosition();\n\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            this.updateRelations();\n        }\n    }\n\n    /**\n     * Mouse up event\n     * @param event\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected onMouseUp(event: MouseEvent): void\n    {\n        if (this.isDragging)\n        {\n            this.isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Initialize endpoints\n     */\n    protected initEndpoints(): void\n    {\n        const updateInputs = () =>\n        {\n            this.ɵInputs = {};\n\n            this.inputsChildren?.forEach(input =>\n            {\n                if(input.name)\n                {\n                    this.ɵInputs[input.name] = input;\n                }\n            });\n\n            Object.freeze(this.ɵInputs);\n        };\n\n        const updateOutputs = () =>\n        {\n            this.ɵAllOutputs = this.outputsChildren.toArray();\n            this.ɵOutputs = {};\n\n            this.outputsChildren?.forEach(output =>\n            {\n                if(output.name)\n                {\n                    this.ɵOutputs[output.name] = output;\n                }\n            });\n\n            Object.freeze(this.ɵOutputs);\n        };\n\n        this.inputsChildren?.changes.subscribe(() => updateInputs());\n        this.outputsChildren?.changes.subscribe(() => updateOutputs());\n\n        updateInputs();\n        updateOutputs();\n    }\n\n    /**\n     * Updates node relations\n     */\n    protected updateRelations(): void\n    {\n        this.inputsChildren.forEach(input =>\n        {\n            input.updateRelation();\n        });\n\n        this.outputsChildren.forEach(output =>\n        {\n            output.updateRelation();\n        });\n    }\n\n    /**\n     * Updates node position\n     */\n    protected updatePosition(): void\n    {\n        this.element.nativeElement.style.left = `${this.nodePosition.x}px`;\n        this.element.nativeElement.style.top = `${this.nodePosition.y}px`;\n\n        if(this.metadata?.nodeMetadata?.coordinates)\n        {\n            this.metadata.nodeMetadata.coordinates.x = this.nodePosition.x;\n            this.metadata.nodeMetadata.coordinates.y = this.nodePosition.y;\n        }\n    }\n\n    /**\n     * Allows code to be called after metadata were set\n     */\n    protected metadataSet(): void\n    {\n    }\n}","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\n\nimport {Coordinates, RelationsEndpoint, RelationsNode} from '../interfaces';\nimport {NodeRelationPath} from '../misc/nodeRelationPath';\nimport {RelationsNodeManager} from '../services';\nimport {RelationsCanvasSAComponent} from './relationsCanvas/relationsCanvas.component';\n\n/**\n * Base class for relations node endpoints (inputs/outputs)\n */\n@Directive()\nexport abstract class RelationNodeEndpointBase implements RelationsEndpoint, OnInit\n{\n    //######################### protected properties #########################\n\n    /**\n     * Node relation\n     */\n    protected _relation: NodeRelationPath|null|undefined;\n\n    /**\n     * Indication whether component is dragging\n     */\n    protected _isDragging: boolean = false;\n\n    /**\n     * Last mouse down position\n     */\n    protected _lastMouseDownPosition: Coordinates = \n    {\n        x: 0,\n        y: 0\n    };\n\n    //######################### public properties - implementation of RelationsEndpoint #########################\n\n    /**\n     * @inheritdoc\n     */\n    @Input()\n    public name: string|undefined|null;\n\n    /**\n     * @inheritdoc\n     */\n    public get parentId(): string\n    {\n        return this.parent?.id ?? '';\n    }\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Parent zoom level\n     */\n    @Input()\n    public zoomLevel: number = 1;\n\n    /**\n     * Parent node coordinates\n     */\n    @Input()\n    public parentCoordiantes: Coordinates = \n    {\n        x: 0,\n        y: 0\n    };\n\n    /**\n     * Instance of parent node\n     */\n    @Input()\n    public parent: RelationsNode|undefined|null;\n\n    //######################### constructor #########################\n    constructor(protected _element: ElementRef<HTMLElement>,\n                protected _relationManager: RelationsNodeManager,\n                protected _canvas: RelationsCanvasSAComponent,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        if(!this.parent)\n        {\n            throw new Error('Every input or output endpoint must have parent specified');\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * @inheritdoc\n     */\n    public getCoordinates(): Coordinates\n    {\n        return {\n            x: this.parentCoordiantes.x + this._element.nativeElement.offsetLeft + this._element.nativeElement.offsetWidth/2,\n            y: this.parentCoordiantes.y + this._element.nativeElement.offsetTop + this._element.nativeElement.offsetHeight/2\n        };\n    }\n\n    /**\n     * Updates relation coordinates\n     */\n    public abstract updateRelation(): void;\n}","<div class=\"header-content\"><ng-content></ng-content></div>\n<div *ngIf=\"destroySubject?.destroy\" class=\"destroy-icon\" (click)=\"destroySubject?.destroy?.next()\">x</div>","import {Component, ChangeDetectionStrategy, Inject, Optional} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationsNodeDestroySubject} from '../../interfaces';\nimport {RELATIONS_NODE_DESTROY_SUBJECT} from '../../misc/tokens';\n\n/**\n * Component used for displaying relations node header\n */\n@Component(\n{\n    selector: 'relations-node-header',\n    templateUrl: 'relationsNodeHeader.component.html',\n    // styleUrls: ['relationsNodeHeader.component.scss'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationsNodeHeaderSAComponent\n{\n    //######################### constructor #########################\n    constructor(@Inject(RELATIONS_NODE_DESTROY_SUBJECT) @Optional() protected destroySubject?: RelationsNodeDestroySubject,)\n    {\n    }\n}","import {Component, ChangeDetectionStrategy, HostListener, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationNodeEndpointBase} from '../relationsNodeEndpointBase';\nimport {RelationsInput} from '../../interfaces';\nimport {NodeRelationPath} from '../../misc/nodeRelationPath';\nimport {MouseButton} from '../../misc/enums';\nimport {INVALIDATE_DROP} from '../../misc/constants';\n\n/**\n * Component used to display relation node input\n */\n@Component(\n{\n    selector: 'relation-node-input',\n    template: '',\n    styleUrls: ['relationsNodeInput.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationNodeInputSAComponent extends RelationNodeEndpointBase implements RelationsInput, OnDestroy\n{\n    //######################### private properties #########################\n\n    /**\n     * Temporary relation path when updating existing relation\n     */\n    private _tempRelation: NodeRelationPath|null|undefined;\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._relation)\n        {\n            this._relation.destroy();\n        }\n    }\n\n    //######################### public methods - implementation of RelationsInput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public addRelation(relation: NodeRelationPath): boolean\n    {\n        if (this._relation)\n        {\n            //Same relation\n            if (this._relation.start?.x === relation.start?.x &&\n                this._relation.start?.y === relation.start?.y)\n            {\n                return false;\n            }\n\n            this._relation.destroy();\n        }\n\n        this._relation = relation;\n        \n        return true;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public endRelation(relation: NodeRelationPath): void\n    {\n        if(this.addRelation(relation))\n        {\n            this.updateRelation();\n        }\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * Updates node output relation\n     */\n    public updateRelation(): void\n    {\n        if (!this._relation)\n        {\n            return;\n        }\n\n        this._relation.end = this.getCoordinates();\n        this._relation.input = this;\n        this._relation.invalidateVisuals();\n    }\n\n    //######################### protected methods - host listeners #########################\n\n    /**\n     * Mouse enter event, marks input as active\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseenter', ['$event'])\n    protected _onMouseEnter(event: MouseEvent): void\n    {\n        if (event.buttons === MouseButton.LEFT)\n        {\n            this._relationManager.setActiveInput(this);\n        }\n    }\n\n    /**\n     * Mouse leave event, clears marked active input\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseleave', ['$event'])\n    protected _onMouseLeave(event: MouseEvent): void\n    {\n        if (event.buttons === MouseButton.LEFT)\n        {\n            this._relationManager.setActiveInput(null);\n        }\n    }\n\n    /**\n     * Mouse down event, starts dragging\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: MouseEvent): void\n    {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._tempRelation = this._relation;\n        this._relation = null;\n        this._isDragging = true;\n    }\n\n    /**\n     * Mouse move event on whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            if (this._tempRelation)\n            {\n                this._tempRelation.end =\n                {\n                    x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition?.x) * 1/this.zoomLevel,\n                    y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition?.y) * 1/this.zoomLevel\n                };\n    \n                this._tempRelation.invalidateVisuals();\n            }\n        }\n    }\n\n    /**\n     * Mouse up event on whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: MouseEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            this._tempRelation?.invalidateVisuals(INVALIDATE_DROP);\n        }\n    }\n}","import {Component, ChangeDetectionStrategy, HostListener, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {RelationNodeEndpointBase} from '../relationsNodeEndpointBase';\nimport {RelationsOutput} from '../../interfaces';\nimport {NodeRelationPath} from '../../misc/nodeRelationPath';\nimport {INVALIDATE_DROP} from '../../misc/constants';\n\n/**\n * Component used to display relation node output\n */\n@Component(\n{\n    selector: 'relation-node-output',\n    template: '',\n    styleUrls: ['relationsNodeOutput.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RelationNodeOutputSAComponent extends RelationNodeEndpointBase implements RelationsOutput, OnDestroy\n{\n    //######################### protected properties #########################\n\n    /**\n     * Relations\n     */\n    protected _relations: NodeRelationPath[] = [];\n\n    //######################### public properties - implementation of RelationsOutput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get relations(): NodeRelationPath[]\n    {\n        return this._relations;\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        if(this._relations)\n        {\n            const relations = [...this._relations];\n\n            for(const relation of relations)\n            {\n                relation.destroy();\n            }\n        }\n    }\n\n    //######################### public methods - implementation of RelationsOutput #########################\n\n    /**\n     * @inheritdoc\n     */\n    public startRelation(): NodeRelationPath\n    {\n        const relation = this._canvas.createRelation();\n\n        relation.start = this.getCoordinates();\n        relation.output = this;\n\n        relation.destroying.subscribe(() =>\n        {\n            const index = this._relations.indexOf(relation);\n\n            if(index >= 0)\n            {\n                this._relations.splice(index, 1);\n            }\n        });\n\n        this._relations.push(relation);\n\n        return relation;\n    }\n\n    //######################### public methods - overrides #########################\n\n    /**\n     * Updates node output relations\n     */\n    public updateRelation(): void\n    {\n        if (!this._relations)\n        {\n            return;\n        }\n\n        for (const relation of this._relations)\n        {\n            relation.start = this.getCoordinates();\n            relation.invalidateVisuals();\n        }\n    }\n\n    //######################### protected methods - host listeners #########################\n\n    /**\n     * Mouse down event, creates new relation\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mousedown', ['$event'])\n    protected _onMouseDown(event: DragEvent): void\n    {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n        this._isDragging = true;\n        this._lastMouseDownPosition =\n        {\n            x: event.clientX,\n            y: event.clientY\n        };\n\n        this._relation = this.startRelation();\n    }\n\n    /**\n     * Mouse move event - whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mousemove', ['$event'])\n    protected _onMouseMove(event: DragEvent): void\n    {\n        if (this._isDragging)\n        {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            if (this._relation)\n            {\n                this._relation.end =\n                {\n                    x: this.getCoordinates().x + (event.clientX - this._lastMouseDownPosition.x) * 1/this.zoomLevel,\n                    y: this.getCoordinates().y + (event.clientY - this._lastMouseDownPosition.y) * 1/this.zoomLevel\n                };\n\n                this._relation.invalidateVisuals();\n            }\n        }\n    }\n\n    /**\n     * Mouse up event - whole window\n     * @param event - Mouse event that occured\n     */\n    @HostListener('window:mouseup', ['$event'])\n    protected _onMouseUp(event: DragEvent): void\n    {\n        if (this._isDragging)\n        {\n            this._isDragging = false;\n            event.stopImmediatePropagation();\n            event.preventDefault();\n\n            this._relation?.invalidateVisuals(INVALIDATE_DROP);\n        }\n    }\n}","import {InjectionToken} from '@angular/core';\nimport {DynamicItemLoader, DynamicModuleDataExtractor, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Observable} from 'rxjs';\n\nimport {RelationsModuleTypes, RelationsNodeDef} from './types';\nimport {RelationsNodeDestroySubject} from '../interfaces';\n\n/**\n * Injection token for relations module types data extractors\n */\nexport const RELATIONS_MODULE_TYPES_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('RELATIONS_MODULE_TYPES_DATA_EXTRACTORS');\n\n/**\n * Injection token for relations module types providers\n */\nexport const RELATIONS_MODULE_TYPES_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('RELATIONS_MODULE_TYPES_PROVIDERS');\n\n/**\n * Injection token for relations module types loader\n */\nexport const RELATIONS_MODULE_TYPES_LOADER: InjectionToken<DynamicItemLoader<RelationsModuleTypes>> = new InjectionToken<DynamicItemLoader<RelationsModuleTypes>>('RELATIONS_MODULE_TYPES_LOADER');\n\n/**\n * Injection token for relations nodes data extractors\n */\nexport const RELATIONS_NODES_DATA_EXTRACTORS: InjectionToken<DynamicModuleDataExtractor[]> = new InjectionToken<DynamicModuleDataExtractor[]>('RELATIONS_NODES_DATA_EXTRACTORS');\n\n/**\n * Injection token for relations nodes providers\n */\nexport const RELATIONS_NODES_PROVIDERS: InjectionToken<DynamicModuleProvider[]> = new InjectionToken<DynamicModuleProvider[]>('RELATIONS_NODES_PROVIDERS');\n\n/**\n * Injection token for relations nodes loader\n */\nexport const RELATIONS_NODES_LOADER: InjectionToken<DynamicItemLoader<RelationsNodeDef>> = new InjectionToken<DynamicItemLoader<RelationsNodeDef>>('RELATIONS_NODES_LOADER');\n\n/**\n * Injection token for observables that allows refreshing of nodes palatte items\n */\nexport const REFRESH_PALETTE_OBSERVABLES: InjectionToken<Observable<void>[]> = new InjectionToken<Observable<void>[]>('REFRESH_PALETTE_OBSERVABLES');\n\n/**\n * Injection token allowing obtaining of relations node destroy subject\n */\nexport const RELATIONS_NODE_DESTROY_SUBJECT: InjectionToken<RelationsNodeDestroySubject> = new InjectionToken<RelationsNodeDestroySubject>('RELATIONS_NODE_DESTROY_SUBJECT');\n","import {isPresent} from '@jscrpt/common';\n\nimport {DynamicItemDefData, DynamicModule} from '../../interfaces';\nimport {DynamicModuleDataExtractorFn} from '../../services';\n\n/**\n * Module with default export\n */\ninterface ɵDynamicModuleWithDefault<TData = any> extends DynamicModule\n{\n    /**\n     * Default export value\n     */\n    default?: TData;\n}\n\n/**\n * Extracts dynamic data which is module exports as default export\n */\nexport const defaultExportExtractor: DynamicModuleDataExtractorFn<DynamicItemDefData> = (module, logger) =>\n{\n    const localModule = module as ɵDynamicModuleWithDefault;\n\n    logger?.debug('defaultExportExtractor: trying to extract default dynamic data');\n\n    if(isPresent(localModule.default))\n    {\n        return {\n            data: localModule.default\n        };\n    }\n\n    return null;\n};","import {SimpleChange, SimpleChanges} from '@angular/core';\n\n/**\n * Adds simple change into simple changes object\n * @param changes - Object with changes to be added to\n * @param key - Key under wich should be change stored\n * @param currentValue - Current value that is being changed\n * @param previousValue - Previous value that is being changed\n * @param firstChange - Indication whether is first change, defaults to false\n */\nexport function addSimpleChange<TObj, TValue = any>(changes: SimpleChanges, key: Extract<keyof TObj, string>, currentValue: TValue|undefined|null, previousValue: TValue|undefined|null, firstChange: boolean = false): void\n{\n    changes[key] = <SimpleChange>\n    {\n        currentValue,\n        previousValue,\n        firstChange,\n        isFirstChange: () => firstChange,\n    };\n}"],"names":["RestParamModel","constructor","value","type","configurable","name","mapValuesToThis","this","i0","ConfigureRestParameterSAComponent","data","formModelBuilder","form","build","parameter","valueChanges","subscribe","extend","TITLED_DIALOG_DATA","selectors","standalone","features","FormModelBuilder","decls","vars","consts","template","CommonModule","i2","ReactiveFormsModule","i3","MatDialogModule","i4","encapsulation","changeDetection","RestRelationsOptionsModel","url","method","runImmediately","ctx_r5","param_r1","$event","preventDefault","stopPropagation","ctx_r13","ctx_r21","RestNodeSAComponent","RelationsNodeBase","changeDetector","element","dialog","destroySubject","super","metadata","relationsOptions","params","_a","_b","addParam","param","configureRestParameter","push","removeParam","index","indexOf","splice","original","JSON","parse","stringify","result","open","title","width","hasBody","find","itm","afterClosed","toPromise","metadataSet","patchValue","RELATIONS_NODE_DESTROY_SUBJECT","RELATIONS_NODE_DESTROY_SUBJECT_PROVIDER","ctx","RelationsNodeHeaderSAComponent","RelationNodeInputSAComponent","RelationNodeOutputSAComponent","RestRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze","initialized","isDragging","lastMouseDownPosition","x","y","lastMouseDownNodePosition","nodePosition","Subject","zoomLevel","destroy","nativeElement","classList","add","updatePosition","id","allOutputs","ɵAllOutputs","inputs","ɵInputs","outputs","ɵOutputs","asObservable","ngOnChanges","changes","nameof","nodeMetadata","coordinates","invalidateVisuals","detectChanges","initEndpoints","onMouseDown","event","clientX","clientY","stopImmediatePropagation","onMouseMove","updateRelations","onMouseUp","updateInputs","inputsChildren","forEach","input","updateOutputs","outputsChildren","toArray","output","updateRelation","style","left","top","viewQuery","RelationNodeEndpointBase","_element","_relationManager","_canvas","_isDragging","_lastMouseDownPosition","parentCoordiantes","parentId","parent","ngOnInit","Error","getCoordinates","offsetLeft","offsetWidth","offsetTop","offsetHeight","ctx_r1","ngContentSelectors","i1","ngOnDestroy","_relation","addRelation","relation","start","endRelation","end","_onMouseEnter","buttons","MouseButton","setActiveInput","_onMouseLeave","_onMouseDown","_tempRelation","_onMouseMove","_onMouseUp","INVALIDATE_DROP","t","hostBindings","styles","_relations","relations","startRelation","createRelation","destroying","RELATIONS_MODULE_TYPES_DATA_EXTRACTORS","InjectionToken","RELATIONS_MODULE_TYPES_PROVIDERS","RELATIONS_MODULE_TYPES_LOADER","RELATIONS_NODES_DATA_EXTRACTORS","RELATIONS_NODES_PROVIDERS","RELATIONS_NODES_LOADER","REFRESH_PALETTE_OBSERVABLES","defaultExportExtractor","module","logger","localModule","debug","isPresent","default","addSimpleChange","key","currentValue","previousValue","firstChange","isFirstChange"],"sourceRoot":""}