{"version":3,"file":"7990.chunk.281fa423423970416455.js","mappings":"2VAMO,MAAMA,EAAmC,e,EAAA,G,EAA6D,mBAAY,WAAW,8FAAqDC,oCAA5E,E,+KAA7D,qDCQhD,IAAaC,EAAb,MAAAC,cAqDW,KAAAC,OAAiB,EA4B3B,CA9DcC,uBAEP,OAAOC,KAAKC,iBACf,CACUF,qBAAiBG,GAExBF,KAAKC,kBAAoBC,EAEtBF,KAAKC,mBAAmBE,WAEvBH,KAAKG,SAAWH,KAAKC,mBAAmBE,SACxCH,KAAKI,iBAAmBC,IAAAA,QAAmBL,KAAKG,UAAY,IAC5DH,KAAKF,OAASE,KAAKI,iBAAiBJ,KAAKM,OAAS,GAEzD,CA2BMC,YAAYC,IAEZC,EAAAA,EAAAA,GAA8B,cAAeD,IAE5CR,KAAKI,iBAAmBC,IAAAA,QAAmBL,KAAKG,UAAY,IAE5DH,KAAKF,OAASE,KAAKI,iBAAiBJ,KAAKM,QAG1CG,EAAAA,EAAAA,GAA8B,UAAWD,IAExCR,KAAKF,OAASE,KAAKI,mBAAmBJ,KAAKM,OAAS,GAE3D,CAKMI,oBAEN,IA3BDC,EAAAA,EAAAA,IAAAA,EADCC,EAAAA,EAAAA,MACD,4DArDShB,GAAqB,UAFjCiB,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwBpB,IACZE,GCZb,S,kBCiBM,SAAUmB,EAAyBC,GAIrC,QAFaA,EAECC,sBACjB,CAKK,SAAUJ,IAEZ,OAAO,SAAuCK,GAM1C,OAJaA,EAERD,wBAAyB,EAEvBC,CACV,CACJ,C","sources":["webpack://ng-universal-demo/../handlebars-components/src/dynamicItems/dataTemplate/dataTemplate.metadata.ts","webpack://ng-universal-demo/../handlebars-components/src/dynamicItems/dataTemplate/dataTemplate.relations.ts","webpack://ng-universal-demo/../handlebars-components/src/dynamicItems/dataTemplate/type.ts","webpack://ng-universal-demo/../relations/src/decorators/pureRelationsComponent/pureRelationsComponent.decorator.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Data template relations metadata loader\n */\nexport const DataTemplateRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/dataTemplate.relationsMetadata')).DataTemplateRelationsEditorMetadata();\n","import {SimpleChanges} from '@angular/core';\nimport {DynamicOutput, PureRelationsComponent, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {nameof} from '@jscrpt/common';\nimport Handlebars from 'handlebars';\n\nimport {DataTemplateRelationsMetadataLoader} from './dataTemplate.metadata';\nimport {DataTemplateRelationsOptions} from './dataTemplate.options';\n\n/**\n * Data template relations component\n */\n@PureRelationsComponent()\n@RelationsEditorMetadata(DataTemplateRelationsMetadataLoader)\nexport class DataTemplateRelations implements RelationsComponent<DataTemplateRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Options used in this relations component\n     */\n    protected ɵRelationsOptions: DataTemplateRelationsOptions|undefined|null;\n\n    /**\n     * Instance of compiled template\n     */\n    protected compiledTemplate: HandlebarsTemplateDelegate|undefined|null;\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get relationsOptions(): DataTemplateRelationsOptions|undefined|null\n    {\n        return this.ɵRelationsOptions;\n    }\n    public set relationsOptions(value: DataTemplateRelationsOptions|undefined|null)\n    {\n        this.ɵRelationsOptions = value;\n\n        if(this.ɵRelationsOptions?.template)\n        {\n            this.template = this.ɵRelationsOptions?.template;\n            this.compiledTemplate = Handlebars.compile(this.template ?? '');\n            this.output = this.compiledTemplate(this.data) ?? '';\n        }\n    }\n\n    //######################### public properties - inputs #########################\n    \n    /**\n     * Data for template rendering\n     */\n    public data: any;\n\n    /**\n     * Template to be used for rendering of data\n     */\n    public template: string|undefined|null;\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * Output of template compilation\n     */\n    @DynamicOutput()\n    public output: string = '';\n\n    //######################### public methods - implementation of RelationsComponent #########################\n    \n    /**\n     * @inheritdoc\n     */\n    public ngOnChanges(changes: SimpleChanges): void\n    {\n        if(nameof<DataTemplateRelations>('template') in changes)\n        {\n            this.compiledTemplate = Handlebars.compile(this.template ?? '');\n\n            this.output = this.compiledTemplate(this.data);\n        }\n\n        if(nameof<DataTemplateRelations>('data') in changes)\n        {\n            this.output = this.compiledTemplate?.(this.data) ?? '';\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n}","import {DataTemplateRelations} from './dataTemplate.relations';\n\nexport default DataTemplateRelations;","import {Type} from '@angular/core';\n\nimport {RelationsComponent} from '../../interfaces';\n\n/**\n * Defines identification of relations component type\n */\ninterface ɵRelationsComponentTypeId\n{\n    /**\n     * Indication that this component is relations component\n     */\n    __ɵɵRelationsComponent: boolean;\n}\n\n/**\n * Tests object whether it is RelationsComponent type\n * @param obj - Object to be tested\n */\nexport function isRelationsComponentType(obj: unknown): obj is Type<RelationsComponent>\n{\n    const trgt = obj as ɵRelationsComponentTypeId;\n\n    return !!trgt.__ɵɵRelationsComponent;\n}\n\n/**\n * Marks component as pure relations component, cant be used on component that is also layout component!\n */\nexport function PureRelationsComponent(): ClassDecorator\n{\n    return function <TFunction extends Function> (target: TFunction): TFunction\n    {\n        const trgt = target as unknown as ɵRelationsComponentTypeId;\n\n        trgt.__ɵɵRelationsComponent = true;\n\n        return target;\n    };\n}"],"names":["DataTemplateRelationsMetadataLoader","DataTemplateRelationsEditorMetadata","DataTemplateRelations","constructor","output","relationsOptions","this","ɵRelationsOptions","value","template","compiledTemplate","Handlebars","data","ngOnChanges","changes","nameof","invalidateVisuals","__decorate","DynamicOutput","PureRelationsComponent","RelationsEditorMetadata","isRelationsComponentType","obj","__ɵɵRelationsComponent","target"],"sourceRoot":""}