{"version":3,"file":"5256.chunk.460d90a178bc7ef6d628.js","mappings":"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","sources":["webpack://ng-universal-demo/../form/src/misc/enums.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleItemsProvider/formDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleTypesProvider/formDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../form/src/services/formDynamicModuleRelationsProvider/formDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../form/src/misc/providers.ts","webpack://ng-universal-demo/../form/src/misc/utils.ts","webpack://ng-universal-demo/../form/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../../../../src/cdk/clipboard/pending-copy.ts","webpack://ng-universal-demo/../../../../src/cdk/clipboard/clipboard.ts","webpack://ng-universal-demo/../../../../material/src/directives/debugDataCopyClick/debugDataCopyClick.directive.ts","webpack://ng-universal-demo/../node_modules/@anglr/common/src/modules/debugData/components/debugData/debugData.component.html","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.ts","webpack://ng-universal-demo/../../../../src/modules/debugData/components/debugData/debugData.component.html"],"sourcesContent":["export enum FormComponentControlType\n{\n    FormControl = 'FormControl',\n    FormArray = 'FormArray',\n    FormGroup = 'FormGroup',\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for form module items\n */\n@Injectable()\nexport class FormDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'form-components':\n            {\n                try\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: trying to get item {@item}', {name: source.name, package: source.package});\n\n                    const dynamicItemModule = await import(`@anglr/dynamic/form/dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('FormDynamicModuleItemsProvider: item {@item} was not found, reason: ' + e, {name: source.name, package: source.package});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for form types\n */\n@Injectable()\nexport class FormDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: trying to get types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('@anglr/dynamic/form/types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleTypesProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module relations provider for form module types\n */\n@Injectable()\nexport class FormDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: trying to get relations types for module {@module}', {moduleName: source.package});\n\n            switch(source.package)\n            {\n                case 'form-components':\n                    return await import('@anglr/dynamic/form/relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('FormDynamicModuleRelationsProvider: module {@module} was not found, reason: ' + e, {moduleName: source.package});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {FormDynamicModuleItemsProvider, FormDynamicModuleRelationsProvider, FormDynamicModuleTypesProvider} from '../services';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '../../../relations/src';\n\n\n/**\n * Provider for form components providers\n */\nexport const FORM_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic layout module types provider\n */\nexport const FORM_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for form dynamic relations types provider\n */\nexport const FORM_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: FormDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations nodes provider\n */\nexport const FORM_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for form package relations components provider\n */\nexport const FORM_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: FormDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {FORM_COMPONENTS_PROVIDER, FORM_MODULE_TYPES_PROVIDER, FORM_RELATIONS_COMPONENTS_PROVIDER, FORM_RELATIONS_MODULE_TYPES_PROVIDER, FORM_RELATIONS_NODES_PROVIDER} from './providers';\nimport {FormComponentControlType} from './enums';\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormLayout(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout form subpackage\n */\nexport function provideFormRelations(): Provider[]\n{\n    return [\n        FORM_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Default providers for form subpackage layout\n */\nexport function provideFormLayoutEditor(): Provider[]\n{\n    return [\n        FORM_COMPONENTS_PROVIDER,\n        FORM_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n/**\n * Default providers for form subpackage relations\n */\nexport function provideFormRelationsEditor(): Provider[]\n{\n    return [\n        FORM_RELATIONS_MODULE_TYPES_PROVIDER,\n        FORM_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('form-components'),\n    ];\n}\n\n \n/**\n * Providers for layout relations editor form subpackage\n */\nexport function provideFormLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideFormRelationsEditor(),\n        ...provideFormLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations form subpackage\n */\nexport function provideFormLayoutRelations(): Provider[]\n{\n    return [\n        ...provideFormLayout(),\n        ...provideFormRelations(),\n    ];\n}\n\nexport function getFormControl<TValue = string>(controlName: string|null|undefined, parentControl: AbstractControl|undefined, defaultControlType: FormComponentControlType = FormComponentControlType.FormControl, defaultValue: TValue): AbstractControl\n{\n    if (!parentControl ||\n        !controlName)\n    {\n        return getControlForType(defaultControlType, defaultValue);\n    }\n\n    const control = parentControl.get(controlName);\n\n\n\n    return control ?? getControlForType(defaultControlType, defaultValue);\n}\n\nexport function getControlForType<TValue = string>(type: FormComponentControlType, defaultValue: TValue): FormControl|FormArray|FormGroup\n{\n    //TODO fix default value for form array\n    switch (type)\n    {\n        case FormComponentControlType.FormArray:\n            return new FormArray<any>([]);\n        case FormComponentControlType.FormGroup:\n            return new FormGroup(defaultValue ?? {});\n        default:\n            return new FormControl(defaultValue);\n    }\n}","var map = {\n\t\"./checkbox/type\": [\n\t\t34757,\n\t\t4757\n\t],\n\t\"./datepicker/type\": [\n\t\t96425,\n\t\t6425\n\t],\n\t\"./formGroup/type\": [\n\t\t70613,\n\t\t613\n\t],\n\t\"./numberField/type\": [\n\t\t90560,\n\t\t560\n\t],\n\t\"./period/type\": [\n\t\t13487,\n\t\t3487\n\t],\n\t\"./radio/type\": [\n\t\t41197,\n\t\t1197\n\t],\n\t\"./select/type\": [\n\t\t98746,\n\t\t8746\n\t],\n\t\"./textField/type\": [\n\t\t80477,\n\t\t477\n\t],\n\t\"./textarea/type\": [\n\t\t25552,\n\t\t5552\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 54384;\nmodule.exports = webpackAsyncContext;","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nexport class PendingCopy {\n  private _textarea: HTMLTextAreaElement | undefined;\n\n  constructor(text: string, private readonly _document: Document) {\n    const textarea = (this._textarea = this._document.createElement('textarea'));\n    const styles = textarea.style;\n\n    // Hide the element for display and accessibility. Set a fixed position so the page layout\n    // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n    // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n    styles.position = 'fixed';\n    styles.top = styles.opacity = '0';\n    styles.left = '-999em';\n    textarea.setAttribute('aria-hidden', 'true');\n    textarea.value = text;\n    // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n    textarea.readOnly = true;\n    this._document.body.appendChild(textarea);\n  }\n\n  /** Finishes copying the text. */\n  copy(): boolean {\n    const textarea = this._textarea;\n    let successful = false;\n\n    try {\n      // Older browsers could throw if copy is not supported.\n      if (textarea) {\n        const currentFocus = this._document.activeElement as HTMLOrSVGElement | null;\n\n        textarea.select();\n        textarea.setSelectionRange(0, textarea.value.length);\n        successful = this._document.execCommand('copy');\n\n        if (currentFocus) {\n          currentFocus.focus();\n        }\n      }\n    } catch {\n      // Discard error.\n      // Initial setting of {@code successful} will represent failure here.\n    }\n\n    return successful;\n  }\n\n  /** Cleans up DOM changes used to perform the copy operation. */\n  destroy() {\n    const textarea = this._textarea;\n\n    if (textarea) {\n      textarea.remove();\n      this._textarea = undefined;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {PendingCopy} from './pending-copy';\n\n/**\n * A service for copying text to the clipboard.\n */\n@Injectable({providedIn: 'root'})\nexport class Clipboard {\n  private readonly _document: Document;\n\n  constructor(@Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /**\n   * Copies the provided text into the user's clipboard.\n   *\n   * @param text The string to copy.\n   * @returns Whether the operation was successful.\n   */\n  copy(text: string): boolean {\n    const pendingCopy = this.beginCopy(text);\n    const successful = pendingCopy.copy();\n    pendingCopy.destroy();\n\n    return successful;\n  }\n\n  /**\n   * Prepares a string to be copied later. This is useful for large strings\n   * which take too long to successfully render and be copied in the same tick.\n   *\n   * The caller must call `destroy` on the returned `PendingCopy`.\n   *\n   * @param text The string to copy.\n   * @returns the pending copy operation.\n   */\n  beginCopy(text: string): PendingCopy {\n    return new PendingCopy(text, this._document);\n  }\n}\n","import {Directive, HostBinding, HostListener, Input} from '@angular/core';\nimport {Clipboard} from '@angular/cdk/clipboard';\n\n/**\n * Directive that allows to copy data to clipboard on click on debug-data\n */\n@Directive(\n{\n    selector: 'debug-data[copyClick]'\n})\nexport class DebugDataCopyClickDirective\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data to be copied as serialized json\n     */\n    @Input('copyClick')\n    public data: any;\n\n    //######################### public properties - host #########################\n\n    /**\n     * Adds css class clickable to this element\n     * \n     * @internal\n     */\n    @HostBinding('class.clickable')\n    public clickable: boolean = true;\n\n    //######################### constructor #########################\n    constructor(protected _clipboard: Clipboard)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Copies data to clipboard on click\n     * \n     * @internal\n     */\n    @HostListener('click')\n    public copyData(): void\n    {\n        this._clipboard.copy(JSON.stringify(this.data, null, 4));\n    }\n}",null,"import {Component, ChangeDetectionStrategy, OnDestroy, OnInit, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {DebugDataEnabledService} from '../../services/debugDataEnabled/debugDataEnabled.service';\n\n/**\n * Name of css class for enabled debug data\n */\nconst ENABLED = 'enabled';\n\n/**\n * Component used for displaying debug data\n */\n@Component(\n{\n    selector: 'debug-data',\n    templateUrl: 'debugData.component.html',\n    styleUrls: ['debugData.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DebugDataComponent implements OnDestroy, OnInit\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscription for changes of debug data enabled\n     */\n    protected _debugDataEnabledChangeSubscription: Subscription;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is debug data enabled\n     *\n     * @internal\n     */\n    public enabled: boolean = false;\n\n    //######################### constructor #########################\n    constructor(protected _debugDataEnabledSvc: DebugDataEnabledService,\n                protected _changeDetector: ChangeDetectorRef,\n                protected _element: ElementRef<HTMLElement>)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n\n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this.enabled = this._debugDataEnabledSvc.enabled;\n        this._setEnabledCssClass();\n\n        this._debugDataEnabledChangeSubscription = this._debugDataEnabledSvc.enabledChange.subscribe(() =>\n        {\n            this.enabled = this._debugDataEnabledSvc.enabled;\n            this._setEnabledCssClass();\n\n            this._changeDetector.detectChanges();\n        });\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n\n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._debugDataEnabledChangeSubscription?.unsubscribe();\n        this._debugDataEnabledChangeSubscription = null;\n    }\n\n    //######################### private methods #########################\n\n    /**\n     * Sets enabled css class according enabled state\n     */\n    private _setEnabledCssClass(): void\n    {\n        if(this.enabled)\n        {\n            this._element.nativeElement.classList.add(ENABLED);\n        }\n        else\n        {\n            this._element.nativeElement.classList.remove(ENABLED);\n        }\n    }\n}","<ng-template [ngIf]=\"enabled\">\r\n    <ng-content></ng-content>\r\n</ng-template>"],"names":["FormComponentControlType","FormDynamicModuleItemsProvider","constructor","_logger","tryToGet","source","package","debug","name","e","i0","LOGGER","factory","FormDynamicModuleTypesProvider","moduleName","FormDynamicModuleRelationsProvider","FORM_COMPONENTS_PROVIDER","provide","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","FORM_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","FORM_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideFormLayout","provideFormLayoutEditor","provideStaticPackageSource","provideFormLayoutRelationsEditor","getFormControl","controlName","parentControl","defaultControlType","defaultValue","get","getControlForType","type","FormArray","FormGroup","FormControl","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","keys","Object","module","exports","PendingCopy","text","_document","textarea","this","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","readOnly","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","destroy","remove","undefined","Clipboard","document","pendingCopy","beginCopy","DOCUMENT","DebugDataCopyClickDirective","_clipboard","clickable","copyData","JSON","stringify","data","i1","ENABLED","DebugDataComponent","_debugDataEnabledSvc","_changeDetector","_element","enabled","ngOnInit","_setEnabledCssClass","_debugDataEnabledChangeSubscription","enabledChange","subscribe","detectChanges","ngOnDestroy","unsubscribe","nativeElement","classList","add","i2"],"sourceRoot":""}