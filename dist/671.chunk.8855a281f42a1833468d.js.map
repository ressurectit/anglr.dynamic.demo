{"version":3,"file":"671.chunk.8855a281f42a1833468d.js","mappings":"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","sources":["webpack://ng-universal-demo/../layout-relations/src/dynamicItems/componentInputs/node/componentInputsNode.component.html","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/componentInputs/node/componentInputsNode.component.ts","webpack://ng-universal-demo/../layout-relations/src/dynamicItems/componentInputs/metadata/componentInputs.relationsMetadata.ts"],"sourcesContent":["<relations-node-header [parent]=\"this\" [destroySubject]=\"destroySubject\" name=\"component inputs\"></relations-node-header>\n\n<div class=\"node-content\">\n    <div class=\"inputs-outputs\">\n        <div class=\"inputs\">\n        </div>\n\n        <div class=\"outputs\">\n            <div class=\"output\" *ngFor=\"let endpoint of endpoints\">\n                <div class=\"dynamic-flex-row\">\n                    <div>{{endpoint.name}}</div>\n\n                    <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-horizontal-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); configureEndpoint(endpoint)\">\n                        <span class=\"fas fa-cog\"></span>\n                    </button>\n\n                    <button type=\"button\" class=\"dynamic-btn-icon\" (click)=\"$event.preventDefault(); $event.stopPropagation(); removeEndpoint(endpoint)\">\n                        <span class=\"fas fa-times\"></span>\n                    </button>\n                </div>\n\n                <relation-node-output [parentCoordiantes]=\"nodePosition\" [zoomLevel]=\"zoomLevel\" [name]=\"endpoint.name\" [parent]=\"this\"></relation-node-output>\n            </div>\n\n            <div class=\"dynamic-flex-row dynamic-flex-end\">\n                <button type=\"button\" class=\"dynamic-btn-icon dynamic-margin-right-extra-small\" (click)=\"$event.preventDefault(); $event.stopPropagation(); addEndpoint()\">\n                    <span class=\"fas fa-plus\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RelationsNode, RelationsNodeBase, RelationNodeOutputSAComponent, RelationsNodeHeaderSAComponent} from '@anglr/dynamic/relations-editor';\nimport {TitledDialogService} from '@anglr/common/material';\nimport {extend} from '@jscrpt/common';\nimport {lastValueFrom} from 'rxjs';\n\nimport {ComponentInputsRelationsOptions} from '../componentInputs.options';\nimport {ConfigureNodeEndpointData, ConfigureNodeEndpointSAComponent} from '../../../components';\n\n/**\n * Relations node component for component inputs\n */\n@Component(\n{\n    selector: 'component-inputs-node',\n    templateUrl: 'componentInputsNode.component.html',\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        RelationsNodeHeaderSAComponent,\n        RelationNodeOutputSAComponent,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentInputsNodeSAComponent extends RelationsNodeBase<ComponentInputsRelationsOptions> implements RelationsNode<ComponentInputsRelationsOptions>\n{\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Gets component inputs\n     */\n    protected get endpoints(): ConfigureNodeEndpointData[]\n    {\n        if(!this.metadata)\n        {\n            return [];\n        }\n\n        this.metadata.relationsOptions ??= \n        {\n            inputs: []\n        };\n\n        return (this.metadata.relationsOptions.inputs ??= []);\n    }\n\n    //######################### constructor #########################\n    constructor(changeDetector: ChangeDetectorRef,\n                element: ElementRef<HTMLElement>,\n                protected dialog: TitledDialogService,)\n    {\n        super(changeDetector, element);\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Adds new input endpoint\n     */\n    protected async addEndpoint(): Promise<void>\n    {\n        const param: ConfigureNodeEndpointData = \n        {\n            name: '',\n            defaultValue: null,\n            skipInit: false,\n            allowSkipInit: true,\n        };\n\n        if(await this.configureEndpoint(param))\n        {\n            this.endpoints.push(param);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Removes endpoint\n     * @param endpoint - Endpoint to be removed\n     */\n    protected removeEndpoint(endpoint: ConfigureNodeEndpointData): void\n    {\n        const index = this.endpoints.indexOf(endpoint);\n\n        if(index >= 0)\n        {\n            this.endpoints.splice(index, 1);\n            this.history.getNewState();\n        }\n    }\n\n    /**\n     * Configures endpoint\n     * @param endpoint - Endpoint to be configured\n     */\n    protected async configureEndpoint(endpoint: ConfigureNodeEndpointData): Promise<boolean>\n    {\n        const original = JSON.parse(JSON.stringify(endpoint));\n        \n        const result = await lastValueFrom(this.dialog.open<ConfigureNodeEndpointSAComponent, ConfigureNodeEndpointData, true|undefined|null>(ConfigureNodeEndpointSAComponent,\n        {\n            title: 'configure component input',\n            width: '60vw',\n            data: endpoint\n        }).afterClosed());\n\n        if(!result)\n        {\n            extend(endpoint, original);\n        }\n        else\n        {\n            this.history.getNewState();\n        }\n\n        return result ?? false;\n    }\n}","import {Type} from '@angular/core';\nimport {RelationsEditorMetadataDescriptor, RelationsEditorMetadataInfo, RelationsNode} from '@anglr/dynamic/relations-editor';\n\nimport {ComponentInputsNodeSAComponent} from '../node/componentInputsNode.component';\n\n/**\n * Component inputs relations metadata\n */\nexport class ComponentInputsRelationsEditorMetadata implements RelationsEditorMetadataDescriptor\n{\n    //######################### public properties - implementation of RelationsEditorMetadataDescriptor #########################\n\n    /**\n     * @inheritdoc\n     */\n    public metaInfo?: RelationsEditorMetadataInfo =\n    {\n        name: 'Component inputs',\n        description: 'Definition of relations component inputs',\n        group: 'Component',\n    };\n\n    /**\n     * @inheritdoc\n     */\n    public nodeDefinition: Type<RelationsNode> = ComponentInputsNodeSAComponent;\n\n    //######################### constructor #########################\n    constructor()\n    {\n        Object.freeze(this);\n    }\n}"],"names":["i0","$event","preventDefault","stopPropagation","ComponentInputsNodeSAComponent","RelationsNodeBase","endpoints","this","metadata","relationsOptions","inputs","constructor","changeDetector","element","dialog","super","addEndpoint","param","name","defaultValue","skipInit","allowSkipInit","configureEndpoint","push","history","getNewState","removeEndpoint","endpoint","index","indexOf","splice","original","JSON","parse","stringify","result","lastValueFrom","open","ConfigureNodeEndpointSAComponent","title","width","data","afterClosed","extend","selectors","standalone","features","decls","vars","consts","template","ctx","CommonModule","RelationsNodeHeaderSAComponent","RelationNodeOutputSAComponent","encapsulation","changeDetection","ComponentInputsRelationsEditorMetadata","metaInfo","description","group","nodeDefinition","Object","freeze"],"sourceRoot":""}