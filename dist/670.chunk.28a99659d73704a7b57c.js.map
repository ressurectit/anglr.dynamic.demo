{"version":3,"file":"670.chunk.28a99659d73704a7b57c.js","mappings":"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","sources":["webpack://ng-universal-demo/../layout-editor/src/directives/componentTreeNodeTemplate/componentTreeNodeTemplate.directive.ts","webpack://ng-universal-demo/../layout-editor/src/components/componentsTree/componentsTree.component.html","webpack://ng-universal-demo/../layout-editor/src/components/componentsTree/componentsTree.component.ts","webpack://ng-universal-demo/../layout-editor/src/pipes/toLayoutDragData/toLayoutDragData.pipe.ts","webpack://ng-universal-demo/../src/services/dynamicModuleTypesLoader/dynamicModuleTypesLoader.service.ts","webpack://ng-universal-demo/../layout-editor/src/components/componentsPalette/componentsPalette.component.html","webpack://ng-universal-demo/../layout-editor/src/components/componentsPalette/componentsPalette.component.ts","webpack://ng-universal-demo/../layout-editor/src/components/propertiesEditor/propertiesEditor.component.html","webpack://ng-universal-demo/../layout-editor/src/components/propertiesEditor/propertiesEditor.component.ts","webpack://ng-universal-demo/../layout/src/types/textStyling.types.ts","webpack://ng-universal-demo/./app/pages/+default/home/home.component.ts","webpack://ng-universal-demo/./app/pages/+default/home/home.component.html","webpack://ng-universal-demo/./app/pages/+default/default.routes.ts","webpack://ng-universal-demo/./app/pages/+default/default.module.ts"],"sourcesContent":["import {Directive, TemplateRef} from '@angular/core';\n\nimport {ComponentTreeNodeTemplateContext} from './componentTreeNodeTemplate.context';\n\n/**\n * Directive that serves as template for component tree node\n */\n@Directive(\n{\n    selector: '[treeNodeTemplate]',\n    exportAs: 'treeNodeTemplate',\n    standalone: true,\n})\nexport class ComponentTreeNodeTemplateSADirective\n{\n    //######################### constructor #########################\n    constructor(public template: TemplateRef<ComponentTreeNodeTemplateContext>)\n    {\n    }\n\n    //######################### ng language server #########################\n    \n    /**\n     * Allows typechecking for template\n     */\n    static ngTemplateContextGuard(_dir: ComponentTreeNodeTemplateSADirective, _ctx: unknown): _ctx is ComponentTreeNodeTemplateContext\n    {\n        return true;\n    }\n}","<ng-template #components=\"treeNodeTemplate\"\n             treeNodeTemplate\n             let-item\n             let-margin=\"margin\">\n    <div [style.marginLeft.px]=\"margin\"\n         [class.selected]=\"item.component.options?.typeMetadata?.id === _manager.selectedComponent\"\n         [class.highlighted]=\"item.component.options?.typeMetadata?.id === _manager.highlightedComponent\"\n         (mouseover)=\"highlight($event, item.component.options?.typeMetadata?.id)\"\n         (click)=\"_manager.selectComponent(item.component.options?.typeMetadata?.id)\">{{item.component.options?.typeMetadata?.id}}</div>\n\n    <ng-container *ngFor=\"let child of item.children\">\n        <ng-container *ngTemplateOutlet=\"components.template; context: {$implicit: child, margin: margin + 10}\"></ng-container>\n    </ng-container>\n</ng-template>\n\n<ng-container *ngIf=\"root\">\n    <ng-container *ngTemplateOutlet=\"components.template; context: {$implicit: root, margin: 0}\"></ng-container>\n</ng-container>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy, HostListener} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Subscription} from 'rxjs';\n\nimport {LayoutEditorMetadataManager, LayoutEditorMetadataManagerComponent} from '../../services';\nimport {ComponentTreeNodeTemplateSADirective} from '../../directives';\n\n/**\n * Component displaying components tree\n */\n@Component(\n{\n    selector: 'components-tree',\n    templateUrl: 'componentsTree.component.html',\n    styleUrls: ['componentsTree.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ComponentTreeNodeTemplateSADirective,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentsTreeSAComponent implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Instance of root component in tree\n     */\n    protected root: LayoutEditorMetadataManagerComponent|undefined|null;\n\n    //######################### constructor #########################\n    constructor(protected _manager: LayoutEditorMetadataManager,\n                protected _changeDetector: ChangeDetectorRef,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._initSubscriptions.add(this._manager.layoutChange.subscribe(() =>\n        {\n            this.root = this._manager.root;\n\n            this._changeDetector.detectChanges();\n        }));\n        \n        this._initSubscriptions.add(this._manager.selectedChange.subscribe(() => this._changeDetector.detectChanges()));\n        this._initSubscriptions.add(this._manager.highlightedChange.subscribe(() => this._changeDetector.detectChanges()));\n        this._initSubscriptions.add(this._manager.idChange.subscribe(() => this._changeDetector.detectChanges()));\n\n        this.root = this._manager.root;\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Highlights component\n     * @param event - Mouse event that occured\n     * @param id - Id of component that is highlighted\n     */\n    protected highlight(event: MouseEvent, id?: string): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._manager.highlightComponent(id);\n    }\n\n    //######################### protected methods - host #########################\n\n    /**\n     * Cancels highlight of component\n     * @param event - Mouse event that occured\n     */\n    @HostListener('mouseleave', ['$event'])\n    protected _cancelHighlight(event: MouseEvent): void\n    {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._manager.cancelHighlightedComponent();\n    }\n}","import {Pipe, PipeTransform} from '@angular/core';\n\nimport {ComponentsPaletteItem} from '../../components';\nimport {LayoutComponentDragData} from '../../interfaces';\n\n/**\n * Transforms ComponentsPaletteItem item to LayoutComponentDragData\n */\n@Pipe({name: 'toLayoutDragData', standalone: true})\nexport class ToLayoutDragDataSAPipe implements PipeTransform\n{\n    //######################### public methods - implementation of PipeTransform #########################\n\n    /**\n     * Transforms ComponentsPaletteItem item to LayoutComponentDragData\n     * @param value - Palette item to be transformed\n     * @param id - Unique id to be used for new component\n     */\n    public transform(value: ComponentsPaletteItem, id: string): LayoutComponentDragData\n    {\n        return {\n            metadata:\n            {\n                id: `${value.itemSource.name}-${id}`,\n                package: value.itemSource.package,\n                name: value.itemSource.name,\n                options: {},\n            },\n            parentId: null\n        };\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {Dictionary, resolvePromiseOr} from '@jscrpt/common';\n\nimport {DYNAMIC_MODULE_DATA_EXTRACTORS, DYNAMIC_MODULE_TYPES_PROVIDER} from '../../misc/tokens';\nimport {DynamicModule, DynamicModuleDataExtractor} from '../../interfaces';\nimport {DynamicModuleTypesProvider} from './dynamicModuleTypesLoader.interface';\n\n/**\n * Service used for loading dynamic module types\n */\n@Injectable({providedIn: 'root'})\nexport class DynamicModuleTypesLoader\n{\n    //######################### protected cache #########################\n\n    /**\n     * Cached dynamic module types\n     */\n    protected _cachedDynamicModuleTypes: Dictionary<string[]> = {};\n\n    //######################### constructors #########################\n    constructor(@Inject(DYNAMIC_MODULE_TYPES_PROVIDER) protected _providers: DynamicModuleTypesProvider[],\n                @Inject(DYNAMIC_MODULE_DATA_EXTRACTORS) protected _extractors: DynamicModuleDataExtractor<string[]>[],\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n        //providers is not an array\n        if(!Array.isArray(this._providers))\n        {\n            this._logger?.error('DynamicModuleTypesLoader: missing providers!');\n\n            this._providers = [];\n        }\n\n        //extractors is not an array\n        if(!Array.isArray(this._extractors))\n        {\n            this._logger?.error('DynamicModuleTypesLoader: missing extractors!');\n\n            this._extractors = [];\n        }\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Loads dynamic module types, or null if not found\n     * @param moduleName - Name of module containing dynamic types\n     */\n    public async loadTypes(moduleName: string): Promise<string[]|null>\n    {\n        let dynamicModule: DynamicModule|null = null;\n\n        //try to get from cache\n        if(this._cachedDynamicModuleTypes[moduleName])\n        {\n            this._logger?.verbose('DynamicModuleTypesLoader: Loading from cache {@source}', {moduleName});\n\n            return this._cachedDynamicModuleTypes[moduleName];\n        }\n\n        //loops all providers, return result from first that returns non null value\n        for(const provider of this._providers)\n        {\n            const asyncDynamicModule = provider.tryToGet(moduleName);\n\n            if(asyncDynamicModule)\n            {\n                dynamicModule = await resolvePromiseOr(asyncDynamicModule);\n            }\n            else\n            {\n                dynamicModule = null;\n            }\n\n            if(dynamicModule)\n            {\n                break;\n            }\n        }\n\n        //no module found\n        if(!dynamicModule)\n        {\n            this._logger?.debug('DynamicModuleTypesLoader: Failed to get dynamic module {@source}', {moduleName});\n\n            return null;\n        }\n\n        //loops all extractors, return result from first that returns non null value\n        for(const extractor of this._extractors)\n        {\n            const dynamicModuleTypes = extractor.tryToExtract(dynamicModule);\n\n            if(dynamicModuleTypes)\n            {\n                this._cachedDynamicModuleTypes[moduleName] = dynamicModuleTypes;\n\n                return dynamicModuleTypes;\n            }\n        }\n\n        this._logger?.debug('DynamicModuleTypesLoader: Failed to extract dynamic module types {@source}', {moduleName});\n\n        return null;\n    }\n}","<div class=\"flex-column\">\n    <ng-container *ngFor=\"let groupKeyValue of _groupedItems | keyvalue\">\n        <div class=\"text-spread text-small-caps margin-left-extra-small margin-horizontal-small bold\">{{groupKeyValue.key}}&nbsp;</div>\n\n        <div *ngFor=\"let item of groupKeyValue.value\"\n             cdkDropList\n             cdkDropListSortingDisabled\n             [cdkDropListConnectedTo]=\"_designerDropLists\">\n            <div class=\"editor-component mat-elevation-z2\"\n                 cdkDrag\n                 [cdkDragData]=\"item | toLayoutDragData: _newCompnentId\"\n                 (cdkDragDropped)=\"_generateNewId()\">\n                <layout-editor-drag-placeholder class=\"mat-elevation-z6\" *cdkDragPlaceholder></layout-editor-drag-placeholder>\n                <layout-editor-drag-preview class=\"mat-elevation-z4\" *cdkDragPreview [editorMetadata]=\"item.metadata\" [layoutMetadata]=\"(item | toLayoutDragData: _newCompnentId).metadata\"></layout-editor-drag-preview>\n                <div class=\"editor-component-name\">{{item.metadata.metaInfo?.name ?? item.itemSource.name}}</div>\n                <div class=\"editor-component-description\" *ngIf=\"item.metadata.metaInfo?.description\">{{item.metadata.metaInfo?.description}}</div>\n            </div>\n        </div>\n    </ng-container>\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, Inject, Optional, OnDestroy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CdkDropList, DragDropModule} from '@angular/cdk/drag-drop';\nimport {DynamicItemSource, DynamicModuleTypesLoader} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {Dictionary, generateId} from '@jscrpt/common';\nimport {Subscription} from 'rxjs';\n\nimport {LayoutEditorMetadataExtractor, LayoutEditorMetadataManager} from '../../services';\nimport {ComponentsPaletteItem} from './componentsPalette.interface';\nimport {ToLayoutDragDataSAPipe} from '../../pipes';\nimport {LayoutEditorDragPlaceholderSAComponent} from '../layoutEditorDragPlaceholder/layoutEditorDragPlaceholder.component';\nimport {LayoutEditorDragPreviewSAComponent} from '../layoutEditorDragPreview/layoutEditorDragPreview.component';\n\n/**\n * Component displaying available components palette\n */\n@Component(\n{\n    selector: 'components-palette',\n    templateUrl: 'componentsPalette.component.html',\n    styleUrls: ['componentsPalette.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        DragDropModule,\n        LayoutEditorDragPreviewSAComponent,\n        LayoutEditorDragPlaceholderSAComponent,\n        ToLayoutDragDataSAPipe,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentsPaletteSAComponent implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    /**\n     * Array of all available items in palette\n     */\n    protected _allItems: ComponentsPaletteItem[] = [];\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Available items grouped by group name\n     */\n    protected _groupedItems: Dictionary<ComponentsPaletteItem[]> = {};\n\n    /**\n     * Array of available cdk drop lists\n     */\n    protected _designerDropLists: CdkDropList<any>[] = [];\n\n    /**\n     * Generated component id, that is used for new component\n     */\n    protected _newCompnentId: string = generateId(16);\n\n    //######################### constructor #########################\n    constructor(protected _moduleTypesLoader: DynamicModuleTypesLoader,\n                protected _changeDetector: ChangeDetectorRef,\n                protected _metadataExtractor: LayoutEditorMetadataExtractor,\n                protected _metadataManager: LayoutEditorMetadataManager,\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public async ngOnInit(): Promise<void>\n    {\n        this._initSubscriptions.add(this._metadataManager.layoutChange.subscribe(() => this._getDesignerDropLists()));\n\n        this._getDesignerDropLists();\n\n        const types = (await this._moduleTypesLoader.loadTypes('basic-components')) ?? [];\n\n        for(const type of types)\n        {\n            const itemSource: DynamicItemSource = {package: 'basic-components', name: type};\n            const metadata = await this._metadataExtractor.extractMetadata(itemSource);\n\n            if(!metadata)\n            {\n                this._logger?.warn('ComponentsPaletteSAComponent: Failed to obtain layout editor metadata {@source}', itemSource);\n            }\n            else\n            {\n                this._allItems.push(\n                {\n                    itemSource,\n                    metadata\n                });\n            }\n        }\n\n        this._groupedItems[''] = [];\n\n        //group items\n        for(const item of this._allItems)\n        {\n            const group = item.metadata.metaInfo?.group ?? '';\n            this._groupedItems[group] ??= [];\n            this._groupedItems[group].push(item);\n        }\n\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Generates new component id\n     */\n    protected _generateNewId(): void\n    {\n        this._newCompnentId = generateId(16);\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Gets and sets designer drop lists\n     */\n    protected _getDesignerDropLists(): void\n    {\n        this._designerDropLists = this._metadataManager.flatTree.map(itm => itm.component.designerDropList).reverse();\n    }\n}","<div *ngIf=\"_visible\" class=\"properties-main\">\n    <div class=\"header\">Properties <span class=\"bold\">{{_metadata?.metaInfo?.name ?? _component?.options?.typeMetadata?.name}}</span></div>\n\n    <div class=\"form-group\">\n        <label class=\"control-label\">Id</label>\n        <input class=\"form-control\" type=\"text\" [formControl]=\"_id\">\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"_component?.options?.typeMetadata?.name == 'textBlock'\">\n        <label class=\"control-label\">Text</label>\n        <input class=\"form-control\" type=\"text\" [formControl]=\"_text\">\n    </div>\n</div>","import {Component, ChangeDetectionStrategy, OnInit, OnDestroy, ChangeDetectorRef, Inject, Optional} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {isPresent} from '@jscrpt/common';\nimport {Subscription} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\nimport {LayoutEditorMetadataExtractor, LayoutEditorMetadataManager} from '../../services';\nimport {LayoutDesignerSAComponent} from '../layoutDesigner/layoutDesigner.component';\nimport {LayoutEditorMetadataDescriptor} from '../../interfaces';\n\n/**\n * Component that represents editor for components options/properties\n */\n@Component(\n{\n    selector: 'properties-editor',\n    templateUrl: 'propertiesEditor.component.html',\n    styleUrls: ['propertiesEditor.component.css'],\n    standalone: true,\n    imports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PropertiesEditorSAComponent implements OnInit, OnDestroy\n{\n    //######################### protected fields #########################\n\n    /**\n     * Subscriptions created during initialization\n     */\n    protected _initSubscriptions: Subscription = new Subscription();\n\n    //######################### protected properties - template bindings #########################\n\n    /**\n     * Indication whether are properties visible\n     */\n    protected _visible: boolean = false;\n\n    /**\n     * Instance of selected designer component\n     */\n    protected _component: LayoutDesignerSAComponent|null = null;\n\n    /**\n     * Instance of metadata for selected designed component\n     */\n    protected _metadata: LayoutEditorMetadataDescriptor|null = null;\n\n    /**\n     * Control for id of component\n     */\n    protected _id: FormControl<string|null> = new FormControl<string|null>(null);\n\n    //TODO: remove this only for testing\n    protected _text: FormControl<string|null> = new FormControl<string|null>(null);\n\n    //######################### constructor #########################\n    constructor(protected _manager: LayoutEditorMetadataManager,\n                protected _metadataExtractor: LayoutEditorMetadataExtractor,\n                protected _changeDetector: ChangeDetectorRef,\n                @Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n        this._initSubscriptions.add(this._manager.selectedChange.subscribe(() => this._initProperties()));\n\n        this._id\n            .valueChanges\n            .pipe(debounceTime(160))\n            .subscribe(id =>\n            {\n                if(this._component?.options?.typeMetadata && isPresent(id))\n                {\n                    const oldId = this._component.options.typeMetadata.id;\n                    this._component.options.typeMetadata.id = id;\n\n                    this._manager.updatedLayoutDesignerComponentId(oldId, id);\n                }\n            });\n\n        this._text\n            .valueChanges\n            .pipe(debounceTime(160))\n            .subscribe(text =>\n            {\n                if(this._component?.options?.typeMetadata && isPresent(text))\n                {\n                    const options = this._component.options.typeMetadata.options as any;\n                    options.text = text;\n\n                    // eslint-disable-next-line no-self-assign\n                    this._component.options = this._component.options;\n                }\n            });\n\n        this._initProperties();\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n        this._initSubscriptions.unsubscribe();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Initialize properties for selected component\n     */\n    protected async _initProperties(): Promise<void>\n    {\n        if(isPresent(this._manager.selectedComponent))\n        {\n            this._visible = true;\n            const component = this._manager.getComponent(this._manager.selectedComponent);\n\n            if(component)\n            {\n                this._visible = true;\n                this._component = component;\n\n                await this._getMetadata();\n            }\n            else\n            {\n                this._hide();\n            }\n        }\n        else\n        {\n            this._hide();\n        }\n    }\n\n    /**\n     * Gets metadta for selected component\n     */\n    protected async _getMetadata(): Promise<void>\n    {\n        if(this._component?.options?.typeMetadata)\n        {\n            this._id.setValue(this._component.options.typeMetadata.id, {emitEvent: false});\n            this._text.setValue((this._component.options.typeMetadata.options as any).text, {emitEvent: false});\n\n            this._metadata = await this._metadataExtractor.extractMetadata(this._component.options?.typeMetadata);\n\n            if(!this._metadata)\n            {\n                this._logger?.error('PropertiesEditorSAComponent: unable to get metadata {@source}', {package: this._component.options?.typeMetadata.package, name: this._component.options?.typeMetadata.name});\n\n                this._hide();\n            }\n        }\n        else\n        {\n            this._hide();\n        }\n\n        this._changeDetector.detectChanges();\n    }\n\n    /**\n     * Hides properties\n     */\n    protected _hide(): void\n    {\n        this._visible = false;\n        this._component = null;\n        this._metadata = null;\n    }\n}","/**\n * Available types of font weight\n */\nexport enum TextFontWeight\n{\n    /**\n     * Font weight light\n     */\n    Light = 200,\n\n    /**\n     * Font weight normal\n     */\n    Normal = 400,\n\n    /**\n     * Font weight semi-bold\n     */\n    SemiBold = 600,\n\n    /**\n     * Font weight bold\n     */\n    Bold = 700,\n}\n\n/**\n * Available types of font size units\n */\nexport enum StyleSizeUnit\n{\n    /**\n     * Style size unit is in pixels\n     */\n    px,\n\n    /**\n     * Style size unit is in points\n     */\n    pt,\n    \n    /**\n     * Style size unit is in em\n     */\n    em,\n}","import {Component, ChangeDetectionStrategy, ValueProvider, OnInit, OnDestroy} from '@angular/core';\nimport {ComponentRoute, ComponentRedirectRoute} from '@anglr/common/router';\nimport {ComponentStylingOptions, LayoutComponentRendererDirectiveOptions, MissingTypeBehavior, TextFontWeight, LayoutComponentMetadata} from '@anglr/dynamic/layout';\nimport {TextBlockComponentOptions, StackPanelComponentOptions, GridPanelComponentOptions, GridPanelCellComponentOptions} from '@anglr/dynamic/basic-components';\nimport {LayoutEditorMetadataManager, LAYOUT_DESIGNER_COMPONENT_TRANSFORM} from '@anglr/dynamic/layout-editor';\n\n/**\n * Home component\n */\n@Component(\n{\n    selector: 'home-view',\n    templateUrl: 'home.component.html',\n    providers:\n    [\n        <ValueProvider>\n        {\n            provide: LayoutComponentRendererDirectiveOptions,\n            useValue: new LayoutComponentRendererDirectiveOptions(MissingTypeBehavior.ShowNotFound)\n        },\n        LAYOUT_DESIGNER_COMPONENT_TRANSFORM,\n        LayoutEditorMetadataManager,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRedirectRoute('', 'home')\n@ComponentRoute({path: 'home'})\nexport class HomeComponent implements OnInit, OnDestroy\n{\n    //######################### protected properties - template bindings #########################\n\n    protected metadata: LayoutComponentMetadata =\n    {\n        id: 'gridPanelTest',\n        package: 'basic-components',\n        name: 'gridPanel',\n        options: <GridPanelComponentOptions&ComponentStylingOptions>\n        {\n            columns:\n            [\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '2fr'\n                },\n                {\n                    width: '1fr'\n                },\n                {\n                    width: '100px'\n                },\n            ],\n            rows:\n            [\n                {\n                    height: '300px'\n                },\n            ],\n            cells:\n            [\n                {\n                    id: 'celltest',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 2,\n                        gridColumnEnd: 3,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelTest',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions&ComponentStylingOptions>\n                            {\n                                padding:\n                                {\n                                    top: '20px'\n                                },\n                                children:\n                                [\n                                    {\n                                        package: 'basic-components',\n                                        id: 'textTest',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions>\n                                        {\n                                            text: 'toto je text',\n                                            margin:\n                                            {\n                                                top: '10px'\n                                            },\n                                            textStyling:\n                                            {\n                                                fontSize: '20px'\n                                            }\n                                        }\n                                    },\n                                    {\n                                        package: 'basic-components',\n                                        id: 'text2Test',\n                                        name: 'textBlock',\n                                        options: <TextBlockComponentOptions&ComponentStylingOptions>\n                                        {\n                                            text: 'druhý riadok je toto',\n                                            textStyling:\n                                            {\n                                                fontWeight: TextFontWeight.Bold\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'anotherCell',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 3,\n                        gridColumnEnd: 4,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            package: 'basic-components',\n                            id: 'textJeTo',\n                            name: 'textBlock',\n                            options: <TextBlockComponentOptions>\n                            {\n                                text: 'nový text',\n                            }\n                        }\n                    }\n                },\n                {\n                    id: 'stackxxx',\n                    package: 'basic-components',\n                    name: 'gridPanelCell',\n                    options: <GridPanelCellComponentOptions>\n                    {\n                        gridColumnStart: 4,\n                        gridColumnEnd: 5,\n                        gridRowStart: 1,\n                        gridRowEnd: 2,\n                        component:\n                        {\n                            id: 'stackPanelxxx',\n                            package: 'basic-components',\n                            name: 'stackPanel',\n                            options: <StackPanelComponentOptions>\n                            {\n                                children: []\n                            }\n                        }\n                    }\n                },\n            ]\n        }\n    };\n\n    //######################### constructor #########################\n    constructor(private _manager: LayoutEditorMetadataManager,)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit(): void\n    {\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy(): void\n    {\n    }\n\n    //######################### protected methods - template bindings #########################\n\n    /**\n     * Gets metadata for current metadata manager\n     */\n    protected getMetadata(): void\n    {\n        console.log(this._manager.getMetadata());\n        console.log(this._manager.root);\n        console.log(this._manager.flatTree);\n        console.log(this._manager.flatTree.map(itm => itm.component.options.typeMetadata.id));\n        console.log(this._manager.flatTree.map(itm => itm.component.designerDropList).reverse());\n    }\n}\n","<div class=\"flex-row margin-top-big\">\r\n    <mat-tab-group>\r\n        <mat-tab label=\"Hierarchy\">\r\n            <components-tree></components-tree>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Palette\">\r\n            <components-palette></components-palette>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n      \r\n    <div class=\"flex-1\">\r\n        <ng-container [layoutComponentRenderer]=\"metadata\"></ng-container>\r\n    </div>\r\n\r\n    <properties-editor></properties-editor>\r\n</div>\r\n\r\n<button (click)=\"getMetadata()\">get metadata</button>","import {HomeComponent} from './home/home.component';\n\nexport const components =\n[\n    HomeComponent,\n];","import {NgModule} from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ModuleRoutes} from '@anglr/common/router';\nimport {LayoutComponentRendererSADirective, ComponentStylingSADirective} from '@anglr/dynamic/layout';\nimport {ComponentsPaletteSAComponent, ComponentsTreeSAComponent, PropertiesEditorSAComponent} from '@anglr/dynamic/layout-editor';\n\nimport {components} from './default.routes';\nimport {DebuggingFeatureModule, DisplayingFeatureModule, FormsFeatureModule} from '../../modules';\n\n/**\n * Module for Default application pages\n */\n@NgModule(\n{\n    imports:\n    [\n        DisplayingFeatureModule,\n        FormsFeatureModule,\n        DebuggingFeatureModule,\n        LayoutComponentRendererSADirective,\n        ComponentsTreeSAComponent,\n        ComponentsPaletteSAComponent,\n        PropertiesEditorSAComponent,\n        ComponentStylingSADirective,\n        MatTabsModule,\n    ],\n    declarations:\n    [\n        ...components\n    ]\n})\n@ModuleRoutes(components)\nexport class DefaultModule\n{\n}"],"names":["ComponentTreeNodeTemplateSADirective","constructor","template","_dir","_ctx","i0","selectors","exportAs","standalone","ComponentsTreeSAComponent","_manager","_changeDetector","_initSubscriptions","Subscription","ngOnInit","this","add","layoutChange","subscribe","root","detectChanges","selectedChange","highlightedChange","idChange","ngOnDestroy","unsubscribe","highlight","event","id","preventDefault","stopPropagation","highlightComponent","_cancelHighlight","cancelHighlightedComponent","hostBindings","ctx","CommonModule","i2","styles","changeDetection","ToLayoutDragDataSAPipe","transform","value","metadata","itemSource","name","package","options","parentId","pure","DynamicModuleTypesLoader","_providers","_extractors","_logger","_cachedDynamicModuleTypes","Array","isArray","error","loadTypes","moduleName","dynamicModule","verbose","provider","asyncDynamicModule","tryToGet","resolvePromiseOr","debug","extractor","dynamicModuleTypes","tryToExtract","DYNAMIC_MODULE_TYPES_PROVIDER","DYNAMIC_MODULE_DATA_EXTRACTORS","LOGGER","factory","providedIn","ComponentsPaletteSAComponent","_moduleTypesLoader","_metadataExtractor","_metadataManager","_allItems","_groupedItems","_designerDropLists","_newCompnentId","generateId","_getDesignerDropLists","types","type","extractMetadata","push","warn","item","group","metaInfo","_a","_generateNewId","flatTree","map","itm","component","designerDropList","reverse","features","decls","vars","consts","i3","DragDropModule","i4","LayoutEditorDragPreviewSAComponent","LayoutEditorDragPlaceholderSAComponent","PropertiesEditorSAComponent","_visible","_component","_metadata","_id","FormControl","_text","_initProperties","valueChanges","pipe","debounceTime","typeMetadata","isPresent","oldId","updatedLayoutDesignerComponentId","text","selectedComponent","getComponent","_getMetadata","_hide","setValue","emitEvent","ReactiveFormsModule","TextFontWeight","StyleSizeUnit","HomeComponent","columns","width","rows","height","cells","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","padding","top","children","margin","textStyling","fontSize","fontWeight","Bold","getMetadata","console","log","provide","LayoutComponentRendererDirectiveOptions","useValue","MissingTypeBehavior","LAYOUT_DESIGNER_COMPONENT_TRANSFORM","LayoutEditorMetadataManager","ComponentRedirectRoute","ComponentRoute","path","components","DefaultModule","DisplayingFeatureModule","FormsFeatureModule","DebuggingFeatureModule","MatTabsModule","ModuleRoutes"],"sourceRoot":""}