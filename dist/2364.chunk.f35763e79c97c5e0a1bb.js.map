{"version":3,"file":"2364.chunk.f35763e79c97c5e0a1bb.js","mappings":"wUAMO,MAAMA,EAA4B,e,EAAAC,G,EAA6D,mBAAY,WAAW,uFAA8CC,6BAA8B,E,+KAAA,kBAAhK,OAAAD,EAAAE,MAAA,KAAAC,UAAA,KCOlC,IAAMC,EAAN,MAcH,oBAAWC,GAEP,OAAOC,KAAKC,iBAChB,CACA,oBAAWF,CAAiBG,GAExBF,KAAKC,kBAAoBC,EAEzBF,KAAKG,YACT,CAWAC,WAAAA,CAAsBC,GAAA,KAAAA,SAAAA,CAEtB,CAOOC,iBAAAA,GAEP,CAOUH,UAAAA,GAGN,GAAGH,KAAKD,kBAEDC,KAAKD,iBAAiBQ,YAAYC,OAEjC,IAAI,MAAMC,KAAQT,KAAKD,iBAAiBQ,WAEjCE,GAECC,OAAOC,eAAeX,KACAS,EACA,CACIG,IAAKV,IAEDF,KAAKa,eAALb,KAAKa,aAAiB,CAAC,GACtBb,KAAKa,aAA4BJ,GAAQP,EAC1CF,KAAKa,aAAe,IAAIb,KAAKa,aAAa,GAO5F,IA9COC,EAAAA,EAAAA,IAAA,EADNC,EAAAA,EAAAA,MAAe,kEA9BPjB,GAAcgB,EAAAA,EAAAA,IAAA,EAF1BE,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,GAAwBxB,IAA6B,6BAmClByB,EAAAA,KAlCvBpB,GCXb,S","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/merge/merge.metadata.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/merge/merge.relations.ts","webpack://ng-universal-demo/../basic-components/src/dynamicItems/merge/type.ts"],"sourcesContent":["import {DynamicMetadataLoader} from '@anglr/dynamic';\nimport {RelationsEditorMetadataDescriptor} from '@anglr/dynamic/relations-editor';\n\n/**\n * Merge relations metadata loader\n */\nexport const MergeRelationsMetadataLoader: DynamicMetadataLoader<RelationsEditorMetadataDescriptor> = async () => new (await import('./metadata/merge.relationsMetadata')).MergeRelationsEditorMetadata();\n","import {Injector} from '@angular/core';\nimport {DynamicOutput, PureRelationsComponent, RelationsComponent} from '@anglr/dynamic/relations';\nimport {RelationsEditorMetadata} from '@anglr/dynamic/relations-editor';\nimport {Dictionary} from '@jscrpt/common';\n\nimport {MergeRelationsMetadataLoader} from './merge.metadata';\nimport {MergeRelationsOptions} from './merge.options';\n\n/**\n * Merge relations component\n */\n@PureRelationsComponent()\n@RelationsEditorMetadata(MergeRelationsMetadataLoader)\nexport class MergeRelations<TObj = unknown> implements RelationsComponent<MergeRelationsOptions>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Options used in this relations component\n     */\n    protected ɵRelationsOptions: MergeRelationsOptions|undefined|null;\n\n    //######################### public properties - implementation of RelationsComponent #########################\n\n    /**\n     * @inheritdoc\n     */\n    public get relationsOptions(): MergeRelationsOptions|undefined|null\n    {\n        return this.ɵRelationsOptions;\n    }\n    public set relationsOptions(value: MergeRelationsOptions|undefined|null)\n    {\n        this.ɵRelationsOptions = value;\n\n        this.initialize();\n    }\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Merged result object\n     */\n    @DynamicOutput()\n    public mergedObject: TObj|undefined|null;\n\n    //######################### constructor #########################\n    constructor(protected injector: Injector,)\n    {\n    }\n\n    //######################### public properties - dynamic outputs #########################\n\n    /**\n     * @inheritdoc\n     */\n    public invalidateVisuals(): void\n    {\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Initialize rest relations\n     */\n    protected initialize(): void\n    {\n        //TODO optimize property setter. Currently triggers multiple times when properties are set in sync.\n        if(this.relationsOptions)\n        {\n            if(this.relationsOptions.properties?.length)\n            {\n                for(const name of this.relationsOptions.properties)\n                {\n                    if(name)\n                    {\n                        Object.defineProperty(this,\n                                              name,\n                                              {\n                                                  set: value =>\n                                                  {\n                                                      this.mergedObject ??= {} as TObj;\n                                                      (this.mergedObject as Dictionary)[name] = value;\n                                                      this.mergedObject = {...this.mergedObject};\n                                                  }\n                                              });\n                    }\n                }\n            }\n        }\n    }\n}","import {MergeRelations} from './merge.relations';\n\nexport default MergeRelations;"],"names":["MergeRelationsMetadataLoader","_ref","MergeRelationsEditorMetadata","apply","arguments","MergeRelations","relationsOptions","this","ɵRelationsOptions","value","initialize","constructor","injector","invalidateVisuals","properties","length","name","Object","defineProperty","set","mergedObject","__decorate","DynamicOutput","PureRelationsComponent","RelationsEditorMetadata","Injector"],"sourceRoot":""}