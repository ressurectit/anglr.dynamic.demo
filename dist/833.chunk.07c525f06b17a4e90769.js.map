{"version":3,"file":"833.chunk.07c525f06b17a4e90769.js","mappings":"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","sources":["webpack://ng-universal-demo/../basic-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../basic-components/src/services/basicDynamicModuleItemsProvider/basicDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../basic-components/src/services/basicDynamicModuleTypesProvider/basicDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../basic-components/src/services/basicDynamicModuleRelationsProvider/basicDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../basic-components/src/misc/providers.ts","webpack://ng-universal-demo/../basic-components/src/misc/utils.ts","webpack://ng-universal-demo/./app/misc/factories.ts","webpack://ng-universal-demo/./app/services/storeData/storeData.service.ts","webpack://ng-universal-demo/../handlebars-components/src/services/handlebarsDynamicModuleItemsProvider/handlebarsDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../handlebars-components/src/services/handlebarsDynamicModuleTypesProvider/handlebarsDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../handlebars-components/src/services/handlebarsDynamicModuleRelationsProvider/handlebarsDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../handlebars-components/src/misc/providers.ts","webpack://ng-universal-demo/../handlebars-components/src/misc/utils.ts","webpack://ng-universal-demo/../src/services/metadataStorage/metadataStorage.service.ts","webpack://ng-universal-demo/../tinymce-components/src/services/tinyMceDynamicModuleItemsProvider/tinyMceDynamicModuleItemsProvider.service.ts","webpack://ng-universal-demo/../tinymce-components/src/services/tinyMceDynamicModuleTypesProvider/tinyMceDynamicModuleTypesProvider.service.ts","webpack://ng-universal-demo/../tinymce-components/src/services/tinyMceDynamicModuleRelationsProvider/tinyMceDynamicModuleRelationsProvider.service.ts","webpack://ng-universal-demo/../tinymce-components/src/misc/providers.ts","webpack://ng-universal-demo/../tinymce-components/src/misc/utils.ts","webpack://ng-universal-demo/../handlebars-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object","webpack://ng-universal-demo/../tinymce-components/src/dynamicItems/ lazy ^\\.\\/.*\\/type$ namespace object"],"sourcesContent":["var map = {\n\t\"./block/type\": [\n\t\t49831,\n\t\t9831\n\t],\n\t\"./button/type\": [\n\t\t4999,\n\t\t4999\n\t],\n\t\"./debounceValue/type\": [\n\t\t34403,\n\t\t4403\n\t],\n\t\"./deconstruct/type\": [\n\t\t49543,\n\t\t8765,\n\t\t9543\n\t],\n\t\"./empty/type\": [\n\t\t82173,\n\t\t2173\n\t],\n\t\"./firstNonNull/type\": [\n\t\t24747,\n\t\t4747\n\t],\n\t\"./gridPanel/type\": [\n\t\t28229,\n\t\t8229\n\t],\n\t\"./gridPanelCell/type\": [\n\t\t24229,\n\t\t4229\n\t],\n\t\"./htmlBlock/type\": [\n\t\t57195,\n\t\t7195\n\t],\n\t\"./ifBlock/type\": [\n\t\t23234,\n\t\t3234\n\t],\n\t\"./listBlock/type\": [\n\t\t51863,\n\t\t1863\n\t],\n\t\"./logicalAnd/type\": [\n\t\t99926,\n\t\t9926\n\t],\n\t\"./logicalOr/type\": [\n\t\t21676,\n\t\t1676\n\t],\n\t\"./match/type\": [\n\t\t20386,\n\t\t386\n\t],\n\t\"./merge/type\": [\n\t\t22364,\n\t\t2364\n\t],\n\t\"./negation/type\": [\n\t\t82937,\n\t\t2937\n\t],\n\t\"./notFound/type\": [\n\t\t31864,\n\t\t1864\n\t],\n\t\"./stackPanel/type\": [\n\t\t54335,\n\t\t4335\n\t],\n\t\"./state/type\": [\n\t\t13935,\n\t\t8765,\n\t\t3935\n\t],\n\t\"./syncValues/type\": [\n\t\t74489,\n\t\t4489\n\t],\n\t\"./templateBlock/type\": [\n\t\t14243,\n\t\t4243\n\t],\n\t\"./textBlock/type\": [\n\t\t88127,\n\t\t8127\n\t],\n\t\"./toggleButton/type\": [\n\t\t77964,\n\t\t7964\n\t],\n\t\"./transformData/type\": [\n\t\t21258,\n\t\t8765,\n\t\t1258\n\t],\n\t\"./trigger/type\": [\n\t\t67225,\n\t\t7225\n\t],\n\t\"./value/type\": [\n\t\t4906,\n\t\t4906\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 78391;\nmodule.exports = webpackAsyncContext;","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for basic module items\n */\n@Injectable()\nexport class BasicDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'basic-components':\n            {\n                try\n                {\n                    this._logger?.debug('BasicDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('BasicDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item:{name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for basic types\n */\n@Injectable()\nexport class BasicDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('BasicDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'basic-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('BasicDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for basic types\n */\n@Injectable()\nexport class BasicDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('BasicDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'basic-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('BasicDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {BasicDynamicModuleItemsProvider, BasicDynamicModuleRelationsProvider, BasicDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for basic package layout components provider\n */\nexport const BASIC_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: BasicDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for basic dynamic layout module types provider\n */\nexport const BASIC_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: BasicDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for basic dynamic relations types provider\n */\nexport const BASIC_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: BasicDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for basic package relations nodes provider\n */\nexport const BASIC_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: BasicDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for basic package relations components provider\n */\nexport const BASIC_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: BasicDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {BASIC_LAYOUT_COMPONENTS_PROVIDER, BASIC_LAYOUT_MODULE_TYPES_PROVIDER, BASIC_RELATIONS_COMPONENTS_PROVIDER, BASIC_RELATIONS_MODULE_TYPES_PROVIDER, BASIC_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout basic subpackage\n */\nexport function provideBasicLayout(): Provider[]\n{\n    return [\n        BASIC_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations basic subpackage\n */\nexport function provideBasicRelations(): Provider[]\n{\n    return [\n        BASIC_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor basic subpackage\n */\nexport function provideBasicLayoutEditor(): Provider[]\n{\n    return [\n        BASIC_LAYOUT_COMPONENTS_PROVIDER,\n        BASIC_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('basic-components'),\n    ];\n}\n\n/**\n * Providers for relations editor basic subpackage\n */\nexport function provideBasicRelationsEditor(): Provider[]\n{\n    return [\n        BASIC_RELATIONS_MODULE_TYPES_PROVIDER,\n        BASIC_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('basic-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor basic subpackage\n */\nexport function provideBasicLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideBasicRelationsEditor(),\n        ...provideBasicLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations basic subpackage\n */\nexport function provideBasicLayoutRelations(): Provider[]\n{\n    return [\n        ...provideBasicLayout(),\n        ...provideBasicRelations(),\n    ];\n}","import {FactoryProvider} from '@angular/core';\nimport {PermanentStorage, PERMANENT_STORAGE} from '@anglr/common';\n\nimport {StoreDataService} from '../services/storeData';\n\n/**\n * Creates factory provider for store data service\n * @param storeName - Name of storage that should be used\n */\nexport function createStoreDataServiceFactory(storeName: string): FactoryProvider\n{\n    return {\n        provide: StoreDataService,\n        useFactory: (storage: PermanentStorage) => new StoreDataService(storage, storeName),\n        deps: [PERMANENT_STORAGE]\n    };\n}","import {PermanentStorage} from '@anglr/common';\nimport {Dictionary} from '@jscrpt/common';\n\n/**\n * Service used for obtaining and storing data\n */\nexport class StoreDataService<TData = any>\n{\n    //######################### constructor #########################\n    constructor(private _storage: PermanentStorage,\n                private _storeKey: string,)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Stores data into store\n     * @param name - Name of stored data\n     * @param data - Data to be stored\n     */\n    public setData(name: string, data: TData): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        store[name] = data;\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data\n     * @param name - Name of data to be retrieved\n     */\n    public getData(name: string): TData|null\n    {\n        return (this._storage.get(this._storeKey)?.[name]) ?? null;\n    }\n\n    /**\n     * Removes data from store\n     * @param name - Name of data to be removed\n     */\n    public removeData(name: string): void\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        delete store[name];\n\n        this._storage.set(this._storeKey, store);\n    }\n\n    /**\n     * Gets stored data names\n     */\n    public getStored(): string[]\n    {\n        const store: Dictionary<TData> = this._storage.get(this._storeKey) ?? {};\n\n        return Object.keys(store);\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for handlebars module items\n */\n@Injectable()\nexport class HandlebarsDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'handlebars-components':\n            {\n                try\n                {\n                    this._logger?.debug('HandlebarsDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('HandlebarsDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for handlebars types\n */\n@Injectable()\nexport class HandlebarsDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('HandlebarsDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'handlebars-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('HandlebarsDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for handlebars types\n */\n@Injectable()\nexport class HandlebarsDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('HandlebarsDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'handlebars-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('HandlebarsDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\n\nimport {HandlebarsDynamicModuleItemsProvider, HandlebarsDynamicModuleRelationsProvider, HandlebarsDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for handlebars package layout components provider\n */\nexport const HANDLEBARS_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: HandlebarsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for handlebars dynamic layout module types provider\n */\nexport const HANDLEBARS_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: HandlebarsDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for handlebars dynamic relations types provider\n */\nexport const HANDLEBARS_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: HandlebarsDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for handlebars package relations nodes provider\n */\nexport const HANDLEBARS_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: HandlebarsDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for handlebars package relations components provider\n */\nexport const HANDLEBARS_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: HandlebarsDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {HANDLEBARS_LAYOUT_COMPONENTS_PROVIDER, HANDLEBARS_LAYOUT_MODULE_TYPES_PROVIDER, HANDLEBARS_RELATIONS_COMPONENTS_PROVIDER, HANDLEBARS_RELATIONS_MODULE_TYPES_PROVIDER, HANDLEBARS_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout handlebars subpackage\n */\nexport function provideHandlebarsLayout(): Provider[]\n{\n    return [\n        HANDLEBARS_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations handlebars subpackage\n */\nexport function provideHandlebarsRelations(): Provider[]\n{\n    return [\n        HANDLEBARS_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor handlebars subpackage\n */\nexport function provideHandlebarsLayoutEditor(): Provider[]\n{\n    return [\n        HANDLEBARS_LAYOUT_COMPONENTS_PROVIDER,\n        HANDLEBARS_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('handlebars-components'),\n    ];\n}\n\n/**\n * Providers for relations editor handlebars subpackage\n */\nexport function provideHandlebarsRelationsEditor(): Provider[]\n{\n    return [\n        HANDLEBARS_RELATIONS_MODULE_TYPES_PROVIDER,\n        HANDLEBARS_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('handlebars-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor handlebars subpackage\n */\nexport function provideHandlebarsLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideHandlebarsRelationsEditor(),\n        ...provideHandlebarsLayout(),\n    ];\n}\n\n/**\n * Providers for layout relations handlebars subpackage\n */\nexport function provideHandlebarsLayoutRelations(): Provider[]\n{\n    return [\n        ...provideHandlebarsLayout(),\n        ...provideHandlebarsRelations(),\n    ];\n}","import {Func, PromiseOr} from '@jscrpt/common';\n\n/**\n * Class that represents abstract metadata storage\n */\nexport class MetadataStorage<TMetadata = any>\n{\n    //######################### constructor #########################\n    constructor(protected getMetadataFn: Func<PromiseOr<TMetadata|null>, [string]>,)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Gets metadata from storage\n     * @param id - Id of metadata to be obtained\n     */\n    public getMetadata(id: string): PromiseOr<TMetadata|null>\n    {\n        return this.getMetadataFn(id);\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\nimport {Logger, LOGGER} from '@anglr/common';\n\n/**\n * Dynamic module items provider for tiny MCE module items\n */\n@Injectable()\nexport class TinyMceDynamicModuleItemsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        switch(source.package)\n        {\n            case 'tinymce-components':\n            {\n                try\n                {\n                    this._logger?.debug('TinyMceDynamicModuleItemsProvider: trying to get item {{@item}}', {item: {name: source.name, package: source.package}});\n\n                    const dynamicItemModule = await import(`../../dynamicItems/${source.name}/type`);\n\n                    return dynamicItemModule;\n                }\n                catch(e)\n                {\n                    this._logger?.debug('TinyMceDynamicModuleItemsProvider: item {{@item}} was not found, reason: ' + e, {item: {name: source.name, package: source.package}});\n                }\n\n                break;\n            }\n            default:\n            {\n                return null;\n            }\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module types provider, for tiny MCE types\n */\n@Injectable()\nexport class TinyMceDynamicModuleTypesProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('TinyMceDynamicModuleTypesProvider: trying to get types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'tinymce-components':\n                    return await import('../../types');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('TinyMceDynamicModuleTypesProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {Inject, Injectable, Optional} from '@angular/core';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {DynamicItemSource, DynamicModule, DynamicModuleProvider} from '@anglr/dynamic';\n\n/**\n * Dynamic module relations types provider, for tiny MCE types\n */\n@Injectable()\nexport class TinyMceDynamicModuleRelationsProvider implements DynamicModuleProvider\n{\n    //######################### constructor #########################\n    constructor(@Inject(LOGGER) @Optional() protected _logger?: Logger,)\n    {\n    }\n\n    //######################### public methods - implementation of DynamicItemLoaderProvider #########################\n\n    /**\n     * @inheritdoc\n     */\n    public async tryToGet(source: DynamicItemSource): Promise<DynamicModule|null>\n    {\n        try\n        {\n            this._logger?.debug('TinyMceDynamicModuleRelationsProvider: trying to get relations types for module {{@module}}', {module: {moduleName: source.package}});\n\n            switch(source.package)\n            {\n                case 'tinymce-components':\n                    return await import('../../relations');\n                default:\n                    return null;\n            }\n        }\n        catch(e)\n        {\n            this._logger?.debug('TinyMceDynamicModuleRelationsProvider: module {{@module}} was not found, reason: ' + e, {module: {moduleName: source.package}});\n        }\n\n        return null;\n    }\n}","import {ClassProvider} from '@angular/core';\nimport {LAYOUT_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/layout';\nimport {LAYOUT_MODULE_TYPES_PROVIDERS} from '@anglr/dynamic/layout-editor';\nimport {RELATIONS_COMPONENTS_MODULE_PROVIDERS} from '@anglr/dynamic/relations';\nimport {RELATIONS_MODULE_TYPES_PROVIDERS, RELATIONS_NODES_PROVIDERS} from '@anglr/dynamic/relations-editor';\n\nimport {TinyMceDynamicModuleItemsProvider, TinyMceDynamicModuleRelationsProvider, TinyMceDynamicModuleTypesProvider} from '../services';\n\n/**\n * Provider for tiny MCE package layout components provider\n */\nexport const TINY_MCE_LAYOUT_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_COMPONENTS_MODULE_PROVIDERS,\n    useClass: TinyMceDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for tiny MCE dynamic layout module types provider\n */\nexport const TINY_MCE_LAYOUT_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: LAYOUT_MODULE_TYPES_PROVIDERS,\n    useClass: TinyMceDynamicModuleTypesProvider,\n    multi: true\n};\n\n/**\n * Provider for tiny MCE dynamic relations types provider\n */\nexport const TINY_MCE_RELATIONS_MODULE_TYPES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_MODULE_TYPES_PROVIDERS,\n    useClass: TinyMceDynamicModuleRelationsProvider,\n    multi: true\n};\n\n/**\n * Provider for tiny MCE package relations nodes provider\n */\nexport const TINY_MCE_RELATIONS_NODES_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_NODES_PROVIDERS,\n    useClass: TinyMceDynamicModuleItemsProvider,\n    multi: true\n};\n\n/**\n * Provider for tiny MCE package relations components provider\n */\nexport const TINY_MCE_RELATIONS_COMPONENTS_PROVIDER: ClassProvider =\n{\n    provide: RELATIONS_COMPONENTS_MODULE_PROVIDERS,\n    useClass: TinyMceDynamicModuleItemsProvider,\n    multi: true\n};","import {Provider} from '@angular/core';\nimport {provideStaticPackageSource} from '@anglr/dynamic';\n\nimport {TINY_MCE_LAYOUT_COMPONENTS_PROVIDER, TINY_MCE_LAYOUT_MODULE_TYPES_PROVIDER, TINY_MCE_RELATIONS_COMPONENTS_PROVIDER, TINY_MCE_RELATIONS_MODULE_TYPES_PROVIDER, TINY_MCE_RELATIONS_NODES_PROVIDER} from './providers';\n\n/**\n * Providers for layout tiny MCE subpackage\n */\nexport function provideTinyMceLayout(): Provider[]\n{\n    return [\n        TINY_MCE_LAYOUT_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for relations tiny MCE subpackage\n */\nexport function provideTinyMceRelations(): Provider[]\n{\n    return [\n        TINY_MCE_RELATIONS_COMPONENTS_PROVIDER,\n    ];\n}\n\n/**\n * Providers for layout editor tiny MCE subpackage\n */\nexport function provideTinyMceLayoutEditor(): Provider[]\n{\n    return [\n        TINY_MCE_LAYOUT_COMPONENTS_PROVIDER,\n        TINY_MCE_LAYOUT_MODULE_TYPES_PROVIDER,\n        provideStaticPackageSource('tinymce-components'),\n    ];\n}\n\n/**\n * Providers for relations editor tiny MCE subpackage\n */\nexport function provideTinyMceRelationsEditor(): Provider[]\n{\n    return [\n        TINY_MCE_RELATIONS_MODULE_TYPES_PROVIDER,\n        TINY_MCE_RELATIONS_NODES_PROVIDER,\n        provideStaticPackageSource('tinymce-components'),\n    ];\n}\n\n/**\n * Providers for layout relations editor tiny MCE subpackage\n */\nexport function provideTinyMceLayoutRelationsEditor(): Provider[]\n{\n    return [\n        ...provideTinyMceRelationsEditor(),\n        ...provideTinyMceLayout(),\n    ];\n}\n\n\n/**\n * Providers for layout relations tiny MCE subpackage\n */\nexport function provideTinyMceLayoutRelations(): Provider[]\n{\n    return [\n        ...provideTinyMceLayout(),\n        ...provideTinyMceRelations(),\n    ];\n}","var map = {\n\t\"./dataBlock/type\": [\n\t\t56558,\n\t\t8033,\n\t\t6558\n\t],\n\t\"./dataTemplate/type\": [\n\t\t57990,\n\t\t8033,\n\t\t7990\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 349;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./richTextBlock/type\": [\n\t\t31439,\n\t\t1439\n\t],\n\t\"./richTextSource/type\": [\n\t\t1240,\n\t\t1240\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 49705;\nmodule.exports = webpackAsyncContext;"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","BasicDynamicModuleItemsProvider","constructor","_logger","tryToGet","source","_this","package","debug","item","name","i0","LOGGER","factory","ɵfac","BasicDynamicModuleTypesProvider","moduleName","BasicDynamicModuleRelationsProvider","BASIC_LAYOUT_COMPONENTS_PROVIDER","provide","LAYOUT_COMPONENTS_MODULE_PROVIDERS","useClass","multi","BASIC_LAYOUT_MODULE_TYPES_PROVIDER","LAYOUT_MODULE_TYPES_PROVIDERS","BASIC_RELATIONS_MODULE_TYPES_PROVIDER","RELATIONS_MODULE_TYPES_PROVIDERS","BASIC_RELATIONS_NODES_PROVIDER","RELATIONS_NODES_PROVIDERS","BASIC_RELATIONS_COMPONENTS_PROVIDER","RELATIONS_COMPONENTS_MODULE_PROVIDERS","provideBasicLayout","provideBasicRelations","provideBasicLayoutEditor","provideStaticPackageSource","provideBasicRelationsEditor","provideBasicLayoutRelationsEditor","provideBasicLayoutRelations","createStoreDataServiceFactory","storeName","StoreDataService","useFactory","storage","deps","PERMANENT_STORAGE","_storage","_storeKey","setData","data","store","this","get","set","getData","removeData","getStored","HandlebarsDynamicModuleItemsProvider","HandlebarsDynamicModuleTypesProvider","HandlebarsDynamicModuleRelationsProvider","HANDLEBARS_LAYOUT_COMPONENTS_PROVIDER","HANDLEBARS_LAYOUT_MODULE_TYPES_PROVIDER","HANDLEBARS_RELATIONS_MODULE_TYPES_PROVIDER","HANDLEBARS_RELATIONS_NODES_PROVIDER","HANDLEBARS_RELATIONS_COMPONENTS_PROVIDER","provideHandlebarsLayout","provideHandlebarsRelations","provideHandlebarsLayoutEditor","provideHandlebarsRelationsEditor","provideHandlebarsLayoutRelationsEditor","provideHandlebarsLayoutRelations","MetadataStorage","getMetadataFn","getMetadata","TinyMceDynamicModuleItemsProvider","TinyMceDynamicModuleTypesProvider","TinyMceDynamicModuleRelationsProvider","TINY_MCE_LAYOUT_COMPONENTS_PROVIDER","TINY_MCE_LAYOUT_MODULE_TYPES_PROVIDER","TINY_MCE_RELATIONS_MODULE_TYPES_PROVIDER","TINY_MCE_RELATIONS_NODES_PROVIDER","TINY_MCE_RELATIONS_COMPONENTS_PROVIDER","provideTinyMceLayout","provideTinyMceRelations","provideTinyMceLayoutEditor","provideTinyMceRelationsEditor","provideTinyMceLayoutRelationsEditor","provideTinyMceLayoutRelations"],"sourceRoot":""}